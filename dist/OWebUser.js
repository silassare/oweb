import OWebEvent from './OWebEvent';
import OWebKeyStorage from './OWebKeyStorage';
import { logger } from './utils';
export default class OWebUser extends OWebEvent {
    _keyStore;
    constructor(appContext) {
        super();
        this._keyStore = new OWebKeyStorage(appContext, 'current_user');
    }
    sessionActive() {
        const now = new Date().getTime();
        const hour = 60 * 60;
        const expire = this.getSessionExpire() - hour;
        return expire * 1000 > now;
    }
    userVerified() {
        return Boolean(this.getCurrentUser() && this.sessionActive());
    }
    getCurrentUser() {
        return this._keyStore.getItem('user_data');
    }
    setCurrentUser(user) {
        logger.debug('[OWebCurrentUser] setting new user', user);
        this._keyStore.setItem('user_data', user);
        return this;
    }
    setSessionExpire(expire) {
        this._keyStore.setItem('session_expire', expire);
        return this;
    }
    getSessionExpire() {
        const expire = Number(this._keyStore.getItem('session_expire'));
        return isNaN(expire) ? 0 : expire;
    }
    setSessionToken(token) {
        this._keyStore.setItem('session_token', token);
        return this;
    }
    getSessionToken() {
        return this._keyStore.getItem('session_token');
    }
    clear() {
        this._keyStore.clear();
        return this;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT1dlYlVzZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvT1dlYlVzZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxTQUFTLE1BQU0sYUFBYSxDQUFDO0FBRXBDLE9BQU8sY0FBYyxNQUFNLGtCQUFrQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFFakMsTUFBTSxDQUFDLE9BQU8sT0FBTyxRQUFtQyxTQUFRLFNBQVM7SUFDaEUsU0FBUyxDQUFpQjtJQUVsQyxZQUFZLFVBQW1CO1FBQzlCLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLGNBQWMsQ0FBQyxVQUFVLEVBQUUsY0FBYyxDQUFDLENBQUM7SUFDakUsQ0FBQztJQUtELGFBQWE7UUFDWixNQUFNLEdBQUcsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ2pDLE1BQU0sSUFBSSxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUM7UUFDckIsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixFQUFFLEdBQUcsSUFBSSxDQUFDO1FBQzlDLE9BQU8sTUFBTSxHQUFHLElBQUksR0FBRyxHQUFHLENBQUM7SUFDNUIsQ0FBQztJQUtELFlBQVk7UUFDWCxPQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLElBQUksSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDLENBQUM7SUFDL0QsQ0FBQztJQUtELGNBQWM7UUFDYixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBc0IsQ0FBQztJQUNqRSxDQUFDO0lBT0QsY0FBYyxDQUFDLElBQWdCO1FBQzlCLE1BQU0sQ0FBQyxLQUFLLENBQUMsb0NBQW9DLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDekQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBRTFDLE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztJQU9ELGdCQUFnQixDQUFDLE1BQWM7UUFDOUIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDakQsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0lBS0QsZ0JBQWdCO1FBQ2YsTUFBTSxNQUFNLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQztRQUNoRSxPQUFPLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUM7SUFDbkMsQ0FBQztJQU9ELGVBQWUsQ0FBQyxLQUFhO1FBQzVCLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLGVBQWUsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUMvQyxPQUFPLElBQUksQ0FBQztJQUNiLENBQUM7SUFLRCxlQUFlO1FBQ2QsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQWtCLENBQUM7SUFDakUsQ0FBQztJQUtELEtBQUs7UUFDSixJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztDQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE9XZWJFdmVudCBmcm9tICcuL09XZWJFdmVudCc7XG5pbXBvcnQgT1dlYkFwcCwgeyBPVXNlciB9IGZyb20gJy4vT1dlYkFwcCc7XG5pbXBvcnQgT1dlYktleVN0b3JhZ2UgZnJvbSAnLi9PV2ViS2V5U3RvcmFnZSc7XG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICcuL3V0aWxzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgT1dlYlVzZXI8VXNlckVudGl0eSBleHRlbmRzIE9Vc2VyPiBleHRlbmRzIE9XZWJFdmVudCB7XG5cdHByaXZhdGUgX2tleVN0b3JlOiBPV2ViS2V5U3RvcmFnZTtcblxuXHRjb25zdHJ1Y3RvcihhcHBDb250ZXh0OiBPV2ViQXBwKSB7XG5cdFx0c3VwZXIoKTtcblx0XHR0aGlzLl9rZXlTdG9yZSA9IG5ldyBPV2ViS2V5U3RvcmFnZShhcHBDb250ZXh0LCAnY3VycmVudF91c2VyJyk7XG5cdH1cblxuXHQvKipcblx0ICogQ2hlY2tzIGlmIHVzZXIgc2Vzc2lvbiBpcyBhY3RpdmUuXG5cdCAqL1xuXHRzZXNzaW9uQWN0aXZlKCk6IGJvb2xlYW4ge1xuXHRcdGNvbnN0IG5vdyA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpOyAvLyBtaWxsaXNlY29uZHNcblx0XHRjb25zdCBob3VyID0gNjAgKiA2MDsgLy8gc2Vjb25kc1xuXHRcdGNvbnN0IGV4cGlyZSA9IHRoaXMuZ2V0U2Vzc2lvbkV4cGlyZSgpIC0gaG91cjsgLy8gc2Vjb25kc1xuXHRcdHJldHVybiBleHBpcmUgKiAxMDAwID4gbm93O1xuXHR9XG5cblx0LyoqXG5cdCAqIENoZWNrcyBpZiB0aGUgY3VycmVudCB1c2VyIGhhcyBiZWVuIGF1dGhlbnRpY2F0ZWQuXG5cdCAqL1xuXHR1c2VyVmVyaWZpZWQoKTogYm9vbGVhbiB7XG5cdFx0cmV0dXJuIEJvb2xlYW4odGhpcy5nZXRDdXJyZW50VXNlcigpICYmIHRoaXMuc2Vzc2lvbkFjdGl2ZSgpKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBSZXR1cm5zIGN1cnJlbnQgdXNlciBkYXRhLlxuXHQgKi9cblx0Z2V0Q3VycmVudFVzZXIoKTogVXNlckVudGl0eSB8IG51bGwge1xuXHRcdHJldHVybiB0aGlzLl9rZXlTdG9yZS5nZXRJdGVtKCd1c2VyX2RhdGEnKSBhcyBVc2VyRW50aXR5IHwgbnVsbDtcblx0fVxuXG5cdC8qKlxuXHQgKiBTZXRzIGN1cnJlbnQgdXNlciBkYXRhLlxuXHQgKlxuXHQgKiBAcGFyYW0gdXNlclxuXHQgKi9cblx0c2V0Q3VycmVudFVzZXIodXNlcjogVXNlckVudGl0eSk6IHRoaXMge1xuXHRcdGxvZ2dlci5kZWJ1ZygnW09XZWJDdXJyZW50VXNlcl0gc2V0dGluZyBuZXcgdXNlcicsIHVzZXIpO1xuXHRcdHRoaXMuX2tleVN0b3JlLnNldEl0ZW0oJ3VzZXJfZGF0YScsIHVzZXIpO1xuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH1cblxuXHQvKipcblx0ICogU2V0cyBjdXJyZW50IHVzZXIgc2Vzc2lvbiBleHBpcmUgdGltZS5cblx0ICpcblx0ICogQHBhcmFtIGV4cGlyZVxuXHQgKi9cblx0c2V0U2Vzc2lvbkV4cGlyZShleHBpcmU6IG51bWJlcik6IHRoaXMge1xuXHRcdHRoaXMuX2tleVN0b3JlLnNldEl0ZW0oJ3Nlc3Npb25fZXhwaXJlJywgZXhwaXJlKTtcblx0XHRyZXR1cm4gdGhpcztcblx0fVxuXG5cdC8qKlxuXHQgKiBSZXR1cm5zIGN1cnJlbnQgdXNlciBzZXNzaW9uIGV4cGlyZSB0aW1lLlxuXHQgKi9cblx0Z2V0U2Vzc2lvbkV4cGlyZSgpOiBudW1iZXIge1xuXHRcdGNvbnN0IGV4cGlyZSA9IE51bWJlcih0aGlzLl9rZXlTdG9yZS5nZXRJdGVtKCdzZXNzaW9uX2V4cGlyZScpKTtcblx0XHRyZXR1cm4gaXNOYU4oZXhwaXJlKSA/IDAgOiBleHBpcmU7XG5cdH1cblxuXHQvKipcblx0ICogU2V0cyBjdXJyZW50IHVzZXIgc2Vzc2lvbiB0b2tlbi5cblx0ICpcblx0ICogQHBhcmFtIHRva2VuXG5cdCAqL1xuXHRzZXRTZXNzaW9uVG9rZW4odG9rZW46IHN0cmluZyk6IHRoaXMge1xuXHRcdHRoaXMuX2tleVN0b3JlLnNldEl0ZW0oJ3Nlc3Npb25fdG9rZW4nLCB0b2tlbik7XG5cdFx0cmV0dXJuIHRoaXM7XG5cdH1cblxuXHQvKipcblx0ICogUmV0dXJucyBjdXJyZW50IHVzZXIgc2Vzc2lvbiB0b2tlbi5cblx0ICovXG5cdGdldFNlc3Npb25Ub2tlbigpOiBzdHJpbmcgfCBudWxsIHtcblx0XHRyZXR1cm4gdGhpcy5fa2V5U3RvcmUuZ2V0SXRlbSgnc2Vzc2lvbl90b2tlbicpIGFzIHN0cmluZyB8IG51bGw7XG5cdH1cblxuXHQvKipcblx0ICogQ2xlYXIgdXNlciBkYXRhLlxuXHQgKi9cblx0Y2xlYXIoKTogdGhpcyB7XG5cdFx0dGhpcy5fa2V5U3RvcmUuY2xlYXIoKTtcblx0XHRyZXR1cm4gdGhpcztcblx0fVxufVxuIl19
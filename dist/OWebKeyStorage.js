import OWebEvent from "./OWebEvent";
import Utils from "./utils/Utils";
let _hasExpired = (data) => {
    let now = Date.now(), expire = data["expire"];
    return expire != -1 && now <= expire;
};
export default class OWebKeyStorage extends OWebEvent {
    constructor(app_context, tag_name, persistent = true, max_life_time = Infinity) {
        super();
        this.app_context = app_context;
        this.tag_name = tag_name;
        this.persistent = persistent;
        let m = this;
        this._store = app_context.ls.load(this.tag_name) || {};
        this._max_life_time = max_life_time * 1000;
        app_context.ls.onClear(function () {
            m._store = {};
        });
        this._clearExpired();
    }
    getStoreData() {
        let items = {};
        this._clearExpired();
        Utils.forEach(this._store, (data, key) => {
            items[key] = data["value"];
        });
        return items;
    }
    getItem(key) {
        let data = this._store[key];
        if (data !== undefined) {
            data = _hasExpired(data) ? this.removeItem(key) && undefined : data["value"];
        }
        return data;
    }
    setItem(key, value) {
        this._store[key] = {
            "value": value,
            "expire": this._max_life_time === Infinity ? -1 : Date.now() + this._max_life_time
        };
        return this.save();
    }
    removeItem(key) {
        if (key in this._store) {
            delete this._store[key];
        }
        return this.save();
    }
    save() {
        if (this.persistent) {
            this.app_context.ls.save(this.tag_name, this._store);
        }
        return this;
    }
    clear() {
        this._store = {};
        return this.save();
    }
    _clearExpired() {
        let s = this, modified = false;
        Utils.forEach(this._store, (data, key) => {
            if (_hasExpired(data)) {
                modified = true;
                delete s._store[key];
            }
        });
        modified && this.save();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT1dlYktleVN0b3JhZ2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvT1dlYktleVN0b3JhZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxTQUFTLE1BQU0sYUFBYSxDQUFDO0FBQ3BDLE9BQU8sS0FBSyxNQUFNLGVBQWUsQ0FBQztBQU9sQyxJQUFJLFdBQVcsR0FBRyxDQUFDLElBQWMsRUFBVyxFQUFFO0lBQzdDLElBQUksR0FBRyxHQUFNLElBQUksQ0FBQyxHQUFHLEVBQUUsRUFDdEIsTUFBTSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN6QixPQUFPLE1BQU0sSUFBSSxDQUFDLENBQUMsSUFBSSxHQUFHLElBQUksTUFBTSxDQUFDO0FBQ3RDLENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxPQUFPLHFCQUFzQixTQUFRLFNBQVM7SUFJcEQsWUFBNkIsV0FBb0IsRUFBbUIsUUFBZ0IsRUFBVSxhQUFzQixJQUFJLEVBQUUsZ0JBQXdCLFFBQVE7UUFDekosS0FBSyxFQUFFLENBQUM7UUFEb0IsZ0JBQVcsR0FBWCxXQUFXLENBQVM7UUFBbUIsYUFBUSxHQUFSLFFBQVEsQ0FBUTtRQUFVLGVBQVUsR0FBVixVQUFVLENBQWdCO1FBR3ZILElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQztRQUNiLElBQUksQ0FBQyxNQUFNLEdBQVcsV0FBVyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUMvRCxJQUFJLENBQUMsY0FBYyxHQUFHLGFBQWEsR0FBRyxJQUFJLENBQUM7UUFFM0MsV0FBVyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUM7WUFDdEIsQ0FBQyxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUM7UUFDZixDQUFDLENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUN0QixDQUFDO0lBRUQsWUFBWTtRQUNYLElBQUksS0FBSyxHQUFRLEVBQUUsQ0FBQztRQUVwQixJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7UUFFckIsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsSUFBSSxFQUFFLEdBQUcsRUFBRSxFQUFFO1lBQ3hDLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDNUIsQ0FBQyxDQUFDLENBQUM7UUFFSCxPQUFPLEtBQUssQ0FBQztJQUNkLENBQUM7SUFFRCxPQUFPLENBQUMsR0FBVztRQUNsQixJQUFJLElBQUksR0FBYSxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRXRDLElBQUksSUFBSSxLQUFLLFNBQVMsRUFBRTtZQUN2QixJQUFJLEdBQUcsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxJQUFJLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQzdFO1FBRUQsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0lBRUQsT0FBTyxDQUFDLEdBQVcsRUFBRSxLQUFVO1FBQzlCLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUc7WUFDbEIsT0FBTyxFQUFHLEtBQUs7WUFDZixRQUFRLEVBQUUsSUFBSSxDQUFDLGNBQWMsS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLGNBQWM7U0FDbEYsQ0FBQztRQUVGLE9BQU8sSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3BCLENBQUM7SUFFRCxVQUFVLENBQUMsR0FBVztRQUNyQixJQUFJLEdBQUcsSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ3ZCLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUN4QjtRQUVELE9BQU8sSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3BCLENBQUM7SUFFTyxJQUFJO1FBQ1gsSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ3BCLElBQUksQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUNyRDtRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztJQUVELEtBQUs7UUFDSixJQUFJLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQztRQUNqQixPQUFPLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNwQixDQUFDO0lBRU8sYUFBYTtRQUNwQixJQUFJLENBQUMsR0FBRyxJQUFJLEVBQUUsUUFBUSxHQUFHLEtBQUssQ0FBQztRQUMvQixLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxJQUFJLEVBQUUsR0FBRyxFQUFFLEVBQUU7WUFDeEMsSUFBSSxXQUFXLENBQUMsSUFBSSxDQUFDLEVBQUU7Z0JBQ3RCLFFBQVEsR0FBRyxJQUFJLENBQUM7Z0JBQ2hCLE9BQU8sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQzthQUNyQjtRQUNGLENBQUMsQ0FBQyxDQUFDO1FBRUgsUUFBUSxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN6QixDQUFDO0NBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgT1dlYkFwcCBmcm9tIFwiLi9PV2ViQXBwXCI7XG5pbXBvcnQgT1dlYkV2ZW50IGZyb20gXCIuL09XZWJFdmVudFwiO1xuaW1wb3J0IFV0aWxzIGZyb20gXCIuL3V0aWxzL1V0aWxzXCI7XG5cbnR5cGUgdEtleURhdGEgPSB7XG5cdHZhbHVlOiBhbnksXG5cdGV4cGlyZTogbnVtYmVyLFxufTtcblxubGV0IF9oYXNFeHBpcmVkID0gKGRhdGE6IHRLZXlEYXRhKTogYm9vbGVhbiA9PiB7XG5cdGxldCBub3cgICAgPSBEYXRlLm5vdygpLFxuXHRcdGV4cGlyZSA9IGRhdGFbXCJleHBpcmVcIl07XG5cdHJldHVybiBleHBpcmUgIT0gLTEgJiYgbm93IDw9IGV4cGlyZTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE9XZWJLZXlTdG9yYWdlIGV4dGVuZHMgT1dlYkV2ZW50IHtcblx0cHJpdmF0ZSByZWFkb25seSBfbWF4X2xpZmVfdGltZTogbnVtYmVyO1xuXHRwcml2YXRlIF9zdG9yZTogeyBba2V5OiBzdHJpbmddOiB0S2V5RGF0YSB9O1xuXG5cdGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgYXBwX2NvbnRleHQ6IE9XZWJBcHAsIHByaXZhdGUgcmVhZG9ubHkgdGFnX25hbWU6IHN0cmluZywgcHJpdmF0ZSBwZXJzaXN0ZW50OiBib29sZWFuID0gdHJ1ZSwgbWF4X2xpZmVfdGltZTogbnVtYmVyID0gSW5maW5pdHkpIHtcblx0XHRzdXBlcigpO1xuXG5cdFx0bGV0IG0gPSB0aGlzO1xuXHRcdHRoaXMuX3N0b3JlICAgICAgICAgPSBhcHBfY29udGV4dC5scy5sb2FkKHRoaXMudGFnX25hbWUpIHx8IHt9O1xuXHRcdHRoaXMuX21heF9saWZlX3RpbWUgPSBtYXhfbGlmZV90aW1lICogMTAwMDtcblxuXHRcdGFwcF9jb250ZXh0LmxzLm9uQ2xlYXIoZnVuY3Rpb24gKCkge1xuXHRcdFx0bS5fc3RvcmUgPSB7fTtcblx0XHR9KTtcblxuXHRcdHRoaXMuX2NsZWFyRXhwaXJlZCgpO1xuXHR9XG5cblx0Z2V0U3RvcmVEYXRhKCk6IHt9IHtcblx0XHRsZXQgaXRlbXM6IGFueSA9IHt9O1xuXG5cdFx0dGhpcy5fY2xlYXJFeHBpcmVkKCk7XG5cblx0XHRVdGlscy5mb3JFYWNoKHRoaXMuX3N0b3JlLCAoZGF0YSwga2V5KSA9PiB7XG5cdFx0XHRpdGVtc1trZXldID0gZGF0YVtcInZhbHVlXCJdO1xuXHRcdH0pO1xuXG5cdFx0cmV0dXJuIGl0ZW1zO1xuXHR9XG5cblx0Z2V0SXRlbShrZXk6IHN0cmluZyk6IGFueSB7XG5cdFx0bGV0IGRhdGE6IHRLZXlEYXRhID0gdGhpcy5fc3RvcmVba2V5XTtcblxuXHRcdGlmIChkYXRhICE9PSB1bmRlZmluZWQpIHtcblx0XHRcdGRhdGEgPSBfaGFzRXhwaXJlZChkYXRhKSA/IHRoaXMucmVtb3ZlSXRlbShrZXkpICYmIHVuZGVmaW5lZCA6IGRhdGFbXCJ2YWx1ZVwiXTtcblx0XHR9XG5cblx0XHRyZXR1cm4gZGF0YTtcblx0fVxuXG5cdHNldEl0ZW0oa2V5OiBzdHJpbmcsIHZhbHVlOiBhbnkpOiB0aGlzIHtcblx0XHR0aGlzLl9zdG9yZVtrZXldID0ge1xuXHRcdFx0XCJ2YWx1ZVwiIDogdmFsdWUsXG5cdFx0XHRcImV4cGlyZVwiOiB0aGlzLl9tYXhfbGlmZV90aW1lID09PSBJbmZpbml0eSA/IC0xIDogRGF0ZS5ub3coKSArIHRoaXMuX21heF9saWZlX3RpbWVcblx0XHR9O1xuXG5cdFx0cmV0dXJuIHRoaXMuc2F2ZSgpO1xuXHR9XG5cblx0cmVtb3ZlSXRlbShrZXk6IHN0cmluZyk6IHRoaXMge1xuXHRcdGlmIChrZXkgaW4gdGhpcy5fc3RvcmUpIHtcblx0XHRcdGRlbGV0ZSB0aGlzLl9zdG9yZVtrZXldO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLnNhdmUoKTtcblx0fVxuXG5cdHByaXZhdGUgc2F2ZSgpOiB0aGlzIHtcblx0XHRpZiAodGhpcy5wZXJzaXN0ZW50KSB7XG5cdFx0XHR0aGlzLmFwcF9jb250ZXh0LmxzLnNhdmUodGhpcy50YWdfbmFtZSwgdGhpcy5fc3RvcmUpO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzO1xuXHR9XG5cblx0Y2xlYXIoKTogdGhpcyB7XG5cdFx0dGhpcy5fc3RvcmUgPSB7fTtcblx0XHRyZXR1cm4gdGhpcy5zYXZlKCk7XG5cdH1cblxuXHRwcml2YXRlIF9jbGVhckV4cGlyZWQoKSB7XG5cdFx0bGV0IHMgPSB0aGlzLCBtb2RpZmllZCA9IGZhbHNlO1xuXHRcdFV0aWxzLmZvckVhY2godGhpcy5fc3RvcmUsIChkYXRhLCBrZXkpID0+IHtcblx0XHRcdGlmIChfaGFzRXhwaXJlZChkYXRhKSkge1xuXHRcdFx0XHRtb2RpZmllZCA9IHRydWU7XG5cdFx0XHRcdGRlbGV0ZSBzLl9zdG9yZVtrZXldO1xuXHRcdFx0fVxuXHRcdH0pO1xuXG5cdFx0bW9kaWZpZWQgJiYgdGhpcy5zYXZlKCk7XG5cdH1cbn1cbiJdfQ==
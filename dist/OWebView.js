import OWebEvent from "./OWebEvent";
import Utils from "./utils/Utils";
export default class OWebView extends OWebEvent {
    constructor() {
        super();
        this._freeze_counter = 0;
        console.log("[OWebView] ready!");
    }
    isFrozen() {
        return Boolean(this._freeze_counter);
    }
    freeze() {
        ++this._freeze_counter;
        if (this._freeze_counter === 1) {
            this.trigger(OWebView.EVT_VIEW_FREEZE);
        }
        return this;
    }
    unfreeze() {
        if (this.isFrozen()) {
            --this._freeze_counter;
            if (!this.isFrozen()) {
                this.trigger(OWebView.EVT_VIEW_UNFREEZE);
            }
        }
        return this;
    }
    dialog(dialog, can_use_alert = false) {
        let d = dialog;
        if (d.error) {
            d = {
                "type": d.error ? "error" : "done",
                "text": d.msg,
                "data": d.data || {}
            };
            // console.error("[OWebView] please use new dialog mode -> ", d, "instead of ->", dialog);
        }
        this.trigger(OWebView.EVT_VIEW_DIALOG, [d, can_use_alert]);
    }
    onFreeze(cb) {
        return this.on(OWebView.EVT_VIEW_FREEZE, cb);
    }
    onUnFreeze(cb) {
        return this.on(OWebView.EVT_VIEW_UNFREEZE, cb);
    }
    onDialog(cb) {
        return this.on(OWebView.EVT_VIEW_DIALOG, cb);
    }
}
OWebView.SELF = Utils.id();
OWebView.EVT_VIEW_FREEZE = Utils.id();
OWebView.EVT_VIEW_UNFREEZE = Utils.id();
OWebView.EVT_VIEW_DIALOG = Utils.id();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT1dlYlZpZXcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvT1dlYlZpZXcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxTQUFTLE1BQU0sYUFBYSxDQUFDO0FBQ3BDLE9BQU8sS0FBSyxNQUFNLGVBQWUsQ0FBQztBQVFsQyxNQUFNLENBQUMsT0FBTyxlQUFnQixTQUFRLFNBQVM7SUFTOUM7UUFDQyxLQUFLLEVBQUUsQ0FBQztRQUhELG9CQUFlLEdBQVcsQ0FBQyxDQUFDO1FBSW5DLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRUQsUUFBUTtRQUNQLE9BQU8sT0FBTyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBRUQsTUFBTTtRQUNMLEVBQUUsSUFBSSxDQUFDLGVBQWUsQ0FBQztRQUV2QixJQUFJLElBQUksQ0FBQyxlQUFlLEtBQUssQ0FBQyxFQUFFO1lBQy9CLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1NBQ3ZDO1FBRUQsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0lBRUQsUUFBUTtRQUNQLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRSxFQUFFO1lBQ3BCLEVBQUUsSUFBSSxDQUFDLGVBQWUsQ0FBQztZQUV2QixJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxFQUFFO2dCQUNyQixJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO2FBQ3pDO1NBQ0Q7UUFFRCxPQUFPLElBQUksQ0FBQztJQUNiLENBQUM7SUFFRCxNQUFNLENBQUMsTUFBa0MsRUFBRSxnQkFBeUIsS0FBSztRQUN4RSxJQUFJLENBQUMsR0FBRyxNQUFNLENBQUM7UUFFZixJQUFLLENBQWtCLENBQUMsS0FBSyxFQUFFO1lBQzlCLENBQUMsR0FBRztnQkFDSCxNQUFNLEVBQUcsQ0FBa0IsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsTUFBTTtnQkFDcEQsTUFBTSxFQUFHLENBQWtCLENBQUMsR0FBRztnQkFDL0IsTUFBTSxFQUFFLENBQUMsQ0FBQyxJQUFJLElBQUksRUFBRTthQUNwQixDQUFDO1lBRUYsMEZBQTBGO1NBQzFGO1FBRUQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsZUFBZSxFQUFFLENBQUMsQ0FBQyxFQUFFLGFBQWEsQ0FBQyxDQUFDLENBQUM7SUFDNUQsQ0FBQztJQUVELFFBQVEsQ0FBQyxFQUFjO1FBQ3RCLE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsZUFBZSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQzlDLENBQUM7SUFFRCxVQUFVLENBQUMsRUFBYztRQUN4QixPQUFPLElBQUksQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLGlCQUFpQixFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ2hELENBQUM7SUFFRCxRQUFRLENBQUMsRUFBeUQ7UUFDakUsT0FBTyxJQUFJLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxlQUFlLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDOUMsQ0FBQzs7QUFoRWUsYUFBSSxHQUFnQixLQUFLLENBQUMsRUFBRSxFQUFFLENBQUM7QUFDL0Isd0JBQWUsR0FBSyxLQUFLLENBQUMsRUFBRSxFQUFFLENBQUM7QUFDL0IsMEJBQWlCLEdBQUcsS0FBSyxDQUFDLEVBQUUsRUFBRSxDQUFDO0FBQy9CLHdCQUFlLEdBQUssS0FBSyxDQUFDLEVBQUUsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtpQ29tUmVzcG9uc2V9IGZyb20gXCIuL09XZWJDb21cIjtcclxuaW1wb3J0IE9XZWJFdmVudCBmcm9tIFwiLi9PV2ViRXZlbnRcIjtcclxuaW1wb3J0IFV0aWxzIGZyb20gXCIuL3V0aWxzL1V0aWxzXCI7XHJcblxyXG5leHBvcnQgdHlwZSB0Vmlld0RpYWxvZyA9IHtcclxuXHR0eXBlOiBcImluZm9cIiB8IFwiZXJyb3JcIiB8IFwiZG9uZVwiLFxyXG5cdHRleHQ6IHN0cmluZyxcclxuXHRkYXRhPzoge31cclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE9XZWJWaWV3IGV4dGVuZHMgT1dlYkV2ZW50IHtcclxuXHJcblx0c3RhdGljIHJlYWRvbmx5IFNFTEYgICAgICAgICAgICAgID0gVXRpbHMuaWQoKTtcclxuXHRzdGF0aWMgcmVhZG9ubHkgRVZUX1ZJRVdfRlJFRVpFICAgPSBVdGlscy5pZCgpO1xyXG5cdHN0YXRpYyByZWFkb25seSBFVlRfVklFV19VTkZSRUVaRSA9IFV0aWxzLmlkKCk7XHJcblx0c3RhdGljIHJlYWRvbmx5IEVWVF9WSUVXX0RJQUxPRyAgID0gVXRpbHMuaWQoKTtcclxuXHJcblx0cHJpdmF0ZSBfZnJlZXplX2NvdW50ZXI6IG51bWJlciA9IDA7XHJcblxyXG5cdGNvbnN0cnVjdG9yKCkge1xyXG5cdFx0c3VwZXIoKTtcclxuXHRcdGNvbnNvbGUubG9nKFwiW09XZWJWaWV3XSByZWFkeSFcIik7XHJcblx0fVxyXG5cclxuXHRpc0Zyb3plbigpOiBib29sZWFuIHtcclxuXHRcdHJldHVybiBCb29sZWFuKHRoaXMuX2ZyZWV6ZV9jb3VudGVyKTtcclxuXHR9XHJcblxyXG5cdGZyZWV6ZSgpIHtcclxuXHRcdCsrdGhpcy5fZnJlZXplX2NvdW50ZXI7XHJcblxyXG5cdFx0aWYgKHRoaXMuX2ZyZWV6ZV9jb3VudGVyID09PSAxKSB7XHJcblx0XHRcdHRoaXMudHJpZ2dlcihPV2ViVmlldy5FVlRfVklFV19GUkVFWkUpO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiB0aGlzO1xyXG5cdH1cclxuXHJcblx0dW5mcmVlemUoKSB7XHJcblx0XHRpZiAodGhpcy5pc0Zyb3plbigpKSB7XHJcblx0XHRcdC0tdGhpcy5fZnJlZXplX2NvdW50ZXI7XHJcblxyXG5cdFx0XHRpZiAoIXRoaXMuaXNGcm96ZW4oKSkge1xyXG5cdFx0XHRcdHRoaXMudHJpZ2dlcihPV2ViVmlldy5FVlRfVklFV19VTkZSRUVaRSk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gdGhpcztcclxuXHR9XHJcblxyXG5cdGRpYWxvZyhkaWFsb2c6IHRWaWV3RGlhbG9nIHwgaUNvbVJlc3BvbnNlLCBjYW5fdXNlX2FsZXJ0OiBib29sZWFuID0gZmFsc2UpIHtcclxuXHRcdGxldCBkID0gZGlhbG9nO1xyXG5cclxuXHRcdGlmICgoZCBhcyBpQ29tUmVzcG9uc2UpLmVycm9yKSB7XHJcblx0XHRcdGQgPSB7XHJcblx0XHRcdFx0XCJ0eXBlXCI6IChkIGFzIGlDb21SZXNwb25zZSkuZXJyb3IgPyBcImVycm9yXCIgOiBcImRvbmVcIixcclxuXHRcdFx0XHRcInRleHRcIjogKGQgYXMgaUNvbVJlc3BvbnNlKS5tc2csXHJcblx0XHRcdFx0XCJkYXRhXCI6IGQuZGF0YSB8fCB7fVxyXG5cdFx0XHR9O1xyXG5cclxuXHRcdFx0Ly8gY29uc29sZS5lcnJvcihcIltPV2ViVmlld10gcGxlYXNlIHVzZSBuZXcgZGlhbG9nIG1vZGUgLT4gXCIsIGQsIFwiaW5zdGVhZCBvZiAtPlwiLCBkaWFsb2cpO1xyXG5cdFx0fVxyXG5cclxuXHRcdHRoaXMudHJpZ2dlcihPV2ViVmlldy5FVlRfVklFV19ESUFMT0csIFtkLCBjYW5fdXNlX2FsZXJ0XSk7XHJcblx0fVxyXG5cclxuXHRvbkZyZWV6ZShjYjogKCkgPT4gdm9pZCkge1xyXG5cdFx0cmV0dXJuIHRoaXMub24oT1dlYlZpZXcuRVZUX1ZJRVdfRlJFRVpFLCBjYik7XHJcblx0fVxyXG5cclxuXHRvblVuRnJlZXplKGNiOiAoKSA9PiB2b2lkKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5vbihPV2ViVmlldy5FVlRfVklFV19VTkZSRUVaRSwgY2IpO1xyXG5cdH1cclxuXHJcblx0b25EaWFsb2coY2I6IChkaWFsb2c6IHRWaWV3RGlhbG9nLCBjYW5fdXNlX2FsZXJ0OiBib29sZWFuKSA9PiB2b2lkKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5vbihPV2ViVmlldy5FVlRfVklFV19ESUFMT0csIGNiKTtcclxuXHR9XHJcbn0iXX0=
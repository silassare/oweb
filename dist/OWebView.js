import OWebEvent from "./OWebEvent";
export default class OWebView extends OWebEvent {
    constructor() {
        super();
        this._freeze_counter = 0;
        console.log("[OWebView] ready!");
    }
    isFrozen() {
        return Boolean(this._freeze_counter);
    }
    freeze() {
        ++this._freeze_counter;
        if (this._freeze_counter === 1) {
            this.trigger(OWebView.EVT_VIEW_FREEZE);
        }
        return this;
    }
    unfreeze() {
        if (this.isFrozen()) {
            --this._freeze_counter;
            if (!this.isFrozen()) {
                this.trigger(OWebView.EVT_VIEW_UNFREEZE);
            }
        }
        return this;
    }
    dialog(dialog, can_use_alert = false) {
        let d = dialog;
        if (d.error) {
            d = {
                "type": d.error ? "error" : "done",
                "text": d.msg,
                "data": d.data || {}
            };
            // console.error("[OWebView] please use new dialog mode -> ", d, "instead of ->", dialog);
        }
        this.trigger(OWebView.EVT_VIEW_DIALOG, [d, can_use_alert]);
    }
    onFreeze(cb) {
        return this.on(OWebView.EVT_VIEW_FREEZE, cb);
    }
    onUnFreeze(cb) {
        return this.on(OWebView.EVT_VIEW_UNFREEZE, cb);
    }
    onDialog(cb) {
        return this.on(OWebView.EVT_VIEW_DIALOG, cb);
    }
}
OWebView.EVT_VIEW_FREEZE = "OWebView:freeze";
OWebView.EVT_VIEW_UNFREEZE = "OWebView:unfreeze";
OWebView.EVT_VIEW_DIALOG = "OWebView:dialog";
OWebView.SELF = "OWebView";
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT1dlYlZpZXcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvT1dlYlZpZXcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxTQUFTLE1BQU0sYUFBYSxDQUFDO0FBUXBDLE1BQU0sQ0FBQyxPQUFPLGVBQWdCLFNBQVEsU0FBUztJQVM5QztRQUNDLEtBQUssRUFBRSxDQUFDO1FBSEQsb0JBQWUsR0FBVyxDQUFDLENBQUM7UUFJbkMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFFRCxRQUFRO1FBQ1AsT0FBTyxPQUFPLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0lBQ3RDLENBQUM7SUFFRCxNQUFNO1FBQ0wsRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDO1FBRXZCLElBQUksSUFBSSxDQUFDLGVBQWUsS0FBSyxDQUFDLEVBQUU7WUFDL0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDLENBQUM7U0FDdkM7UUFFRCxPQUFPLElBQUksQ0FBQztJQUNiLENBQUM7SUFFRCxRQUFRO1FBQ1AsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFLEVBQUU7WUFDcEIsRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDO1lBRXZCLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLEVBQUU7Z0JBQ3JCLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLENBQUM7YUFDekM7U0FDRDtRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztJQUVELE1BQU0sQ0FBQyxNQUFrQyxFQUFFLGdCQUF5QixLQUFLO1FBQ3hFLElBQUksQ0FBQyxHQUFHLE1BQU0sQ0FBQztRQUVmLElBQUssQ0FBa0IsQ0FBQyxLQUFLLEVBQUU7WUFDOUIsQ0FBQyxHQUFHO2dCQUNILE1BQU0sRUFBRyxDQUFrQixDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxNQUFNO2dCQUNwRCxNQUFNLEVBQUcsQ0FBa0IsQ0FBQyxHQUFHO2dCQUMvQixNQUFNLEVBQUUsQ0FBQyxDQUFDLElBQUksSUFBSSxFQUFFO2FBQ3BCLENBQUM7WUFFRiwwRkFBMEY7U0FDMUY7UUFFRCxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxlQUFlLEVBQUUsQ0FBQyxDQUFDLEVBQUUsYUFBYSxDQUFDLENBQUMsQ0FBQztJQUM1RCxDQUFDO0lBRUQsUUFBUSxDQUFDLEVBQWM7UUFDdEIsT0FBTyxJQUFJLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxlQUFlLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUVELFVBQVUsQ0FBQyxFQUFjO1FBQ3hCLE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDaEQsQ0FBQztJQUVELFFBQVEsQ0FBQyxFQUF5RDtRQUNqRSxPQUFPLElBQUksQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLGVBQWUsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUM5QyxDQUFDOztBQWhFZSx3QkFBZSxHQUFLLGlCQUFpQixDQUFDO0FBQ3RDLDBCQUFpQixHQUFHLG1CQUFtQixDQUFDO0FBQ3hDLHdCQUFlLEdBQUssaUJBQWlCLENBQUM7QUFDdEMsYUFBSSxHQUFnQixVQUFVLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2lDb21SZXNwb25zZX0gZnJvbSBcIi4vT1dlYkNvbVwiO1xyXG5pbXBvcnQgT1dlYkV2ZW50IGZyb20gXCIuL09XZWJFdmVudFwiO1xyXG5cclxuZXhwb3J0IHR5cGUgdFZpZXdEaWFsb2cgPSB7XHJcblx0dHlwZTogXCJpbmZvXCIgfCBcImVycm9yXCIgfCBcImRvbmVcIixcclxuXHR0ZXh0OiBzdHJpbmcsXHJcblx0ZGF0YT86IHt9XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBPV2ViVmlldyBleHRlbmRzIE9XZWJFdmVudCB7XHJcblxyXG5cdHN0YXRpYyByZWFkb25seSBFVlRfVklFV19GUkVFWkUgICA9IFwiT1dlYlZpZXc6ZnJlZXplXCI7XHJcblx0c3RhdGljIHJlYWRvbmx5IEVWVF9WSUVXX1VORlJFRVpFID0gXCJPV2ViVmlldzp1bmZyZWV6ZVwiO1xyXG5cdHN0YXRpYyByZWFkb25seSBFVlRfVklFV19ESUFMT0cgICA9IFwiT1dlYlZpZXc6ZGlhbG9nXCI7XHJcblx0c3RhdGljIHJlYWRvbmx5IFNFTEYgICAgICAgICAgICAgID0gXCJPV2ViVmlld1wiO1xyXG5cclxuXHRwcml2YXRlIF9mcmVlemVfY291bnRlcjogbnVtYmVyID0gMDtcclxuXHJcblx0Y29uc3RydWN0b3IoKSB7XHJcblx0XHRzdXBlcigpO1xyXG5cdFx0Y29uc29sZS5sb2coXCJbT1dlYlZpZXddIHJlYWR5IVwiKTtcclxuXHR9XHJcblxyXG5cdGlzRnJvemVuKCk6IGJvb2xlYW4ge1xyXG5cdFx0cmV0dXJuIEJvb2xlYW4odGhpcy5fZnJlZXplX2NvdW50ZXIpO1xyXG5cdH1cclxuXHJcblx0ZnJlZXplKCkge1xyXG5cdFx0Kyt0aGlzLl9mcmVlemVfY291bnRlcjtcclxuXHJcblx0XHRpZiAodGhpcy5fZnJlZXplX2NvdW50ZXIgPT09IDEpIHtcclxuXHRcdFx0dGhpcy50cmlnZ2VyKE9XZWJWaWV3LkVWVF9WSUVXX0ZSRUVaRSk7XHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIHRoaXM7XHJcblx0fVxyXG5cclxuXHR1bmZyZWV6ZSgpIHtcclxuXHRcdGlmICh0aGlzLmlzRnJvemVuKCkpIHtcclxuXHRcdFx0LS10aGlzLl9mcmVlemVfY291bnRlcjtcclxuXHJcblx0XHRcdGlmICghdGhpcy5pc0Zyb3plbigpKSB7XHJcblx0XHRcdFx0dGhpcy50cmlnZ2VyKE9XZWJWaWV3LkVWVF9WSUVXX1VORlJFRVpFKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiB0aGlzO1xyXG5cdH1cclxuXHJcblx0ZGlhbG9nKGRpYWxvZzogdFZpZXdEaWFsb2cgfCBpQ29tUmVzcG9uc2UsIGNhbl91c2VfYWxlcnQ6IGJvb2xlYW4gPSBmYWxzZSkge1xyXG5cdFx0bGV0IGQgPSBkaWFsb2c7XHJcblxyXG5cdFx0aWYgKChkIGFzIGlDb21SZXNwb25zZSkuZXJyb3IpIHtcclxuXHRcdFx0ZCA9IHtcclxuXHRcdFx0XHRcInR5cGVcIjogKGQgYXMgaUNvbVJlc3BvbnNlKS5lcnJvciA/IFwiZXJyb3JcIiA6IFwiZG9uZVwiLFxyXG5cdFx0XHRcdFwidGV4dFwiOiAoZCBhcyBpQ29tUmVzcG9uc2UpLm1zZyxcclxuXHRcdFx0XHRcImRhdGFcIjogZC5kYXRhIHx8IHt9XHJcblx0XHRcdH07XHJcblxyXG5cdFx0XHQvLyBjb25zb2xlLmVycm9yKFwiW09XZWJWaWV3XSBwbGVhc2UgdXNlIG5ldyBkaWFsb2cgbW9kZSAtPiBcIiwgZCwgXCJpbnN0ZWFkIG9mIC0+XCIsIGRpYWxvZyk7XHJcblx0XHR9XHJcblxyXG5cdFx0dGhpcy50cmlnZ2VyKE9XZWJWaWV3LkVWVF9WSUVXX0RJQUxPRywgW2QsIGNhbl91c2VfYWxlcnRdKTtcclxuXHR9XHJcblxyXG5cdG9uRnJlZXplKGNiOiAoKSA9PiB2b2lkKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5vbihPV2ViVmlldy5FVlRfVklFV19GUkVFWkUsIGNiKTtcclxuXHR9XHJcblxyXG5cdG9uVW5GcmVlemUoY2I6ICgpID0+IHZvaWQpIHtcclxuXHRcdHJldHVybiB0aGlzLm9uKE9XZWJWaWV3LkVWVF9WSUVXX1VORlJFRVpFLCBjYik7XHJcblx0fVxyXG5cclxuXHRvbkRpYWxvZyhjYjogKGRpYWxvZzogdFZpZXdEaWFsb2csIGNhbl91c2VfYWxlcnQ6IGJvb2xlYW4pID0+IHZvaWQpIHtcclxuXHRcdHJldHVybiB0aGlzLm9uKE9XZWJWaWV3LkVWVF9WSUVXX0RJQUxPRywgY2IpO1xyXG5cdH1cclxufSJdfQ==
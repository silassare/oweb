import PathResolver from './utils/PathResolver';
import { logger } from './utils';
const isServerUrl = function isServerUrl(urlKey) {
    return /^OZ_SERVER_/.test(urlKey);
}, isLocalUrl = function isLocalUrl(urlKey) {
    return /^OW_LOCAL_/.test(urlKey);
};
export default class OWebUrl {
    _urlList;
    _urlLocalBase;
    _urlServerBase;
    constructor(context, urlList) {
        this._urlList = urlList;
        this._urlLocalBase = context.configs.get('OW_APP_LOCAL_BASE_URL');
        this._urlServerBase = context.configs.get('OZ_API_BASE_URL');
        logger.info('[OWebUrl] ready!');
    }
    get(key) {
        const url = this._urlList[key];
        if (!url) {
            throw new Error(`[OWebUrl] url key "${key}" is not defined.`);
        }
        if (isServerUrl(key))
            return this.resolveServer(url);
        if (isLocalUrl(key))
            return this.resolveLocal(url);
        return url;
    }
    resolveLocal(url) {
        return PathResolver.resolve(this._urlLocalBase, url);
    }
    resolveServer(url) {
        return PathResolver.resolve(this._urlServerBase, url);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT1dlYlVybC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9PV2ViVXJsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sWUFBWSxNQUFNLHNCQUFzQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFFakMsTUFBTSxXQUFXLEdBQUcsU0FBUyxXQUFXLENBQUMsTUFBYztJQUNyRCxPQUFPLGFBQWEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDbkMsQ0FBQyxFQUNELFVBQVUsR0FBRyxTQUFTLFVBQVUsQ0FBQyxNQUFjO0lBQzlDLE9BQU8sWUFBWSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUNsQyxDQUFDLENBQUM7QUFFSCxNQUFNLENBQUMsT0FBTyxPQUFPLE9BQU87SUFDVixRQUFRLENBQUk7SUFDWixhQUFhLENBQVM7SUFDdEIsY0FBYyxDQUFTO0lBRXhDLFlBQVksT0FBZ0IsRUFBRSxPQUFVO1FBQ3ZDLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxhQUFhLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsdUJBQXVCLENBQUMsQ0FBQztRQUNsRSxJQUFJLENBQUMsY0FBYyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFFN0QsTUFBTSxDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFPRCxHQUFHLENBQUMsR0FBVztRQUNkLE1BQU0sR0FBRyxHQUFXLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFdkMsSUFBSSxDQUFDLEdBQUcsRUFBRTtZQUNULE1BQU0sSUFBSSxLQUFLLENBQUMsc0JBQXNCLEdBQUcsbUJBQW1CLENBQUMsQ0FBQztTQUM5RDtRQUVELElBQUksV0FBVyxDQUFDLEdBQUcsQ0FBQztZQUFFLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNyRCxJQUFJLFVBQVUsQ0FBQyxHQUFHLENBQUM7WUFBRSxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFbkQsT0FBTyxHQUFHLENBQUM7SUFDWixDQUFDO0lBT0QsWUFBWSxDQUFDLEdBQVc7UUFDdkIsT0FBTyxZQUFZLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDdEQsQ0FBQztJQU9ELGFBQWEsQ0FBQyxHQUFXO1FBQ3hCLE9BQU8sWUFBWSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQ3ZELENBQUM7Q0FDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBPV2ViQXBwIGZyb20gJy4vT1dlYkFwcCc7XG5pbXBvcnQgUGF0aFJlc29sdmVyIGZyb20gJy4vdXRpbHMvUGF0aFJlc29sdmVyJztcbmltcG9ydCB7IGxvZ2dlciB9IGZyb20gJy4vdXRpbHMnO1xuXG5jb25zdCBpc1NlcnZlclVybCA9IGZ1bmN0aW9uIGlzU2VydmVyVXJsKHVybEtleTogc3RyaW5nKTogYm9vbGVhbiB7XG5cdFx0cmV0dXJuIC9eT1pfU0VSVkVSXy8udGVzdCh1cmxLZXkpO1xuXHR9LFxuXHRpc0xvY2FsVXJsID0gZnVuY3Rpb24gaXNMb2NhbFVybCh1cmxLZXk6IHN0cmluZyk6IGJvb2xlYW4ge1xuXHRcdHJldHVybiAvXk9XX0xPQ0FMXy8udGVzdCh1cmxLZXkpO1xuXHR9O1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBPV2ViVXJsPFQgZXh0ZW5kcyB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9ID0gYW55PiB7XG5cdHByaXZhdGUgcmVhZG9ubHkgX3VybExpc3Q6IFQ7XG5cdHByaXZhdGUgcmVhZG9ubHkgX3VybExvY2FsQmFzZTogc3RyaW5nO1xuXHRwcml2YXRlIHJlYWRvbmx5IF91cmxTZXJ2ZXJCYXNlOiBzdHJpbmc7XG5cblx0Y29uc3RydWN0b3IoY29udGV4dDogT1dlYkFwcCwgdXJsTGlzdDogVCkge1xuXHRcdHRoaXMuX3VybExpc3QgPSB1cmxMaXN0O1xuXHRcdHRoaXMuX3VybExvY2FsQmFzZSA9IGNvbnRleHQuY29uZmlncy5nZXQoJ09XX0FQUF9MT0NBTF9CQVNFX1VSTCcpO1xuXHRcdHRoaXMuX3VybFNlcnZlckJhc2UgPSBjb250ZXh0LmNvbmZpZ3MuZ2V0KCdPWl9BUElfQkFTRV9VUkwnKTtcblxuXHRcdGxvZ2dlci5pbmZvKCdbT1dlYlVybF0gcmVhZHkhJyk7XG5cdH1cblxuXHQvKipcblx0ICogR2V0cyB1cmwgdmFsdWUgd2l0aCBhIGdpdmVuIHVybCBrZXkgbmFtZS5cblx0ICpcblx0ICogQHBhcmFtIGtleSBUaGUgdXJsIGtleSBuYW1lLlxuXHQgKi9cblx0Z2V0KGtleTogc3RyaW5nKTogc3RyaW5nIHtcblx0XHRjb25zdCB1cmw6IHN0cmluZyA9IHRoaXMuX3VybExpc3Rba2V5XTtcblxuXHRcdGlmICghdXJsKSB7XG5cdFx0XHR0aHJvdyBuZXcgRXJyb3IoYFtPV2ViVXJsXSB1cmwga2V5IFwiJHtrZXl9XCIgaXMgbm90IGRlZmluZWQuYCk7XG5cdFx0fVxuXG5cdFx0aWYgKGlzU2VydmVyVXJsKGtleSkpIHJldHVybiB0aGlzLnJlc29sdmVTZXJ2ZXIodXJsKTtcblx0XHRpZiAoaXNMb2NhbFVybChrZXkpKSByZXR1cm4gdGhpcy5yZXNvbHZlTG9jYWwodXJsKTtcblxuXHRcdHJldHVybiB1cmw7XG5cdH1cblxuXHQvKipcblx0ICogUmVzb2x2ZSB1cmwgd2l0aCBsb2NhbCBiYXNlLlxuXHQgKlxuXHQgKiBAcGFyYW0gdXJsXG5cdCAqL1xuXHRyZXNvbHZlTG9jYWwodXJsOiBzdHJpbmcpOiBzdHJpbmcge1xuXHRcdHJldHVybiBQYXRoUmVzb2x2ZXIucmVzb2x2ZSh0aGlzLl91cmxMb2NhbEJhc2UsIHVybCk7XG5cdH1cblxuXHQvKipcblx0ICogUmVzb2x2ZSB1cmwgd2l0aCBzZXJ2ZXIgYmFzZS5cblx0ICpcblx0ICogQHBhcmFtIHVybFxuXHQgKi9cblx0cmVzb2x2ZVNlcnZlcih1cmw6IHN0cmluZyk6IHN0cmluZyB7XG5cdFx0cmV0dXJuIFBhdGhSZXNvbHZlci5yZXNvbHZlKHRoaXMuX3VybFNlcnZlckJhc2UsIHVybCk7XG5cdH1cbn1cbiJdfQ==
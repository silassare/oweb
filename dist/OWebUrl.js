import { PathResolver } from "./oweb";
let isServerUrl = function (url_key) {
    return /^OZ_SERVER_/.test(url_key);
};
let isLocalUrl = function (url_key) {
    return /^OW_LOCAL_/.test(url_key);
};
export default class OWebUrl {
    constructor(context, url_list) {
        this._url_list = url_list;
        this._url_local_base = context.configs.get("OW_APP_LOCAL_BASE_URL");
        this._url_server_base = context.configs.get("OZ_API_BASE_URL");
        console.log("[OWebUrl] ready!");
    }
    get(url_key) {
        let url = this._url_list[url_key];
        if (!url) {
            throw new Error(`[OWebUrl] url key "${url_key}" is not defined.`);
        }
        if (isServerUrl(url_key))
            return this.resolveServer(url);
        if (isLocalUrl(url_key))
            return this.resolveLocal(url);
        return url;
    }
    resolveLocal(url) {
        return PathResolver.resolve(this._url_local_base, url);
    }
    resolveServer(url) {
        return PathResolver.resolve(this._url_server_base, url);
    }
}
;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT1dlYlVybC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9PV2ViVXJsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBVSxZQUFZLEVBQUMsTUFBTSxRQUFRLENBQUM7QUFFN0MsSUFBSSxXQUFXLEdBQUcsVUFBVSxPQUFlO0lBQzFDLE9BQU8sYUFBYSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUNwQyxDQUFDLENBQUM7QUFFRixJQUFJLFVBQVUsR0FBRyxVQUFVLE9BQWU7SUFDekMsT0FBTyxZQUFZLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ25DLENBQUMsQ0FBQztBQUlGLE1BQU0sQ0FBQyxPQUFPO0lBS2IsWUFBWSxPQUFnQixFQUFFLFFBQWtCO1FBQy9DLElBQUksQ0FBQyxTQUFTLEdBQVUsUUFBUSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxlQUFlLEdBQUksT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsdUJBQXVCLENBQUMsQ0FBQztRQUNyRSxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUUvRCxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFDakMsQ0FBQztJQUVELEdBQUcsQ0FBQyxPQUFlO1FBQ2xCLElBQUksR0FBRyxHQUFXLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFMUMsSUFBSSxDQUFDLEdBQUcsRUFBRTtZQUNULE1BQU0sSUFBSSxLQUFLLENBQUMsc0JBQXNCLE9BQU8sbUJBQW1CLENBQUMsQ0FBQztTQUNsRTtRQUVELElBQUksV0FBVyxDQUFDLE9BQU8sQ0FBQztZQUFFLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN6RCxJQUFJLFVBQVUsQ0FBQyxPQUFPLENBQUM7WUFBRSxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFdkQsT0FBTyxHQUFHLENBQUM7SUFDWixDQUFDO0lBRUQsWUFBWSxDQUFDLEdBQVc7UUFDdkIsT0FBTyxZQUFZLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxlQUFlLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDeEQsQ0FBQztJQUVELGFBQWEsQ0FBQyxHQUFXO1FBQ3hCLE9BQU8sWUFBWSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDekQsQ0FBQztDQUNEO0FBQUEsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7T1dlYkFwcCwgUGF0aFJlc29sdmVyfSBmcm9tIFwiLi9vd2ViXCI7XHJcblxyXG5sZXQgaXNTZXJ2ZXJVcmwgPSBmdW5jdGlvbiAodXJsX2tleTogc3RyaW5nKTogYm9vbGVhbiB7XHJcblx0cmV0dXJuIC9eT1pfU0VSVkVSXy8udGVzdCh1cmxfa2V5KTtcclxufTtcclxuXHJcbmxldCBpc0xvY2FsVXJsID0gZnVuY3Rpb24gKHVybF9rZXk6IHN0cmluZyk6IGJvb2xlYW4ge1xyXG5cdHJldHVybiAvXk9XX0xPQ0FMXy8udGVzdCh1cmxfa2V5KTtcclxufTtcclxuXHJcbmV4cG9ydCB0eXBlIHRVcmxMaXN0ID0geyBba2V5OiBzdHJpbmddOiBzdHJpbmcgfTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE9XZWJVcmwge1xyXG5cdHByaXZhdGUgcmVhZG9ubHkgX3VybF9saXN0OiB0VXJsTGlzdDtcclxuXHRwcml2YXRlIHJlYWRvbmx5IF91cmxfbG9jYWxfYmFzZTogc3RyaW5nO1xyXG5cdHByaXZhdGUgcmVhZG9ubHkgX3VybF9zZXJ2ZXJfYmFzZTogc3RyaW5nO1xyXG5cclxuXHRjb25zdHJ1Y3Rvcihjb250ZXh0OiBPV2ViQXBwLCB1cmxfbGlzdDogdFVybExpc3QpIHtcclxuXHRcdHRoaXMuX3VybF9saXN0ICAgICAgICA9IHVybF9saXN0O1xyXG5cdFx0dGhpcy5fdXJsX2xvY2FsX2Jhc2UgID0gY29udGV4dC5jb25maWdzLmdldChcIk9XX0FQUF9MT0NBTF9CQVNFX1VSTFwiKTtcclxuXHRcdHRoaXMuX3VybF9zZXJ2ZXJfYmFzZSA9IGNvbnRleHQuY29uZmlncy5nZXQoXCJPWl9BUElfQkFTRV9VUkxcIik7XHJcblxyXG5cdFx0Y29uc29sZS5sb2coXCJbT1dlYlVybF0gcmVhZHkhXCIpO1xyXG5cdH1cclxuXHJcblx0Z2V0KHVybF9rZXk6IHN0cmluZyk6IHN0cmluZyB7XHJcblx0XHRsZXQgdXJsOiBzdHJpbmcgPSB0aGlzLl91cmxfbGlzdFt1cmxfa2V5XTtcclxuXHJcblx0XHRpZiAoIXVybCkge1xyXG5cdFx0XHR0aHJvdyBuZXcgRXJyb3IoYFtPV2ViVXJsXSB1cmwga2V5IFwiJHt1cmxfa2V5fVwiIGlzIG5vdCBkZWZpbmVkLmApO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmIChpc1NlcnZlclVybCh1cmxfa2V5KSkgcmV0dXJuIHRoaXMucmVzb2x2ZVNlcnZlcih1cmwpO1xyXG5cdFx0aWYgKGlzTG9jYWxVcmwodXJsX2tleSkpIHJldHVybiB0aGlzLnJlc29sdmVMb2NhbCh1cmwpO1xyXG5cclxuXHRcdHJldHVybiB1cmw7XHJcblx0fVxyXG5cclxuXHRyZXNvbHZlTG9jYWwodXJsOiBzdHJpbmcpOiBzdHJpbmcge1xyXG5cdFx0cmV0dXJuIFBhdGhSZXNvbHZlci5yZXNvbHZlKHRoaXMuX3VybF9sb2NhbF9iYXNlLCB1cmwpO1xyXG5cdH1cclxuXHJcblx0cmVzb2x2ZVNlcnZlcih1cmw6IHN0cmluZyk6IHN0cmluZyB7XHJcblx0XHRyZXR1cm4gUGF0aFJlc29sdmVyLnJlc29sdmUodGhpcy5fdXJsX3NlcnZlcl9iYXNlLCB1cmwpO1xyXG5cdH1cclxufTsiXX0=
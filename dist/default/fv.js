import { OWebFormValidator } from '../oweb';
import OWebDate from '../plugins/OWebDate';
import { isValidAge } from '../utils';
OWebFormValidator.addFieldValidators({
    code: (value, name, fv) => {
        const codeReg = new RegExp(fv.getConfig('OZ_CODE_REG'));
        fv.assert(codeReg.test(value), 'OZ_AUTH_CODE_INVALID');
    },
    uname: (value, name, fv) => {
        value = value.replace(/\s+/g, ' ').trim();
        fv.assert(value.length >= fv.getConfig('OZ_USER_NAME_MIN_LENGTH'), 'OZ_FIELD_USER_NAME_TOO_SHORT')
            .assert(value.length <= fv.getConfig('OZ_USER_NAME_MAX_LENGTH'), 'OZ_FIELD_USER_NAME_TOO_LONG')
            .setField(name, value);
    },
    login_pass: (value, name, fv) => {
        const pass = value, min = fv.getConfig('OZ_PASS_MIN_LENGTH'), max = fv.getConfig('OZ_PASS_MAX_LENGTH');
        fv.assert(pass.length >= min, 'OZ_FIELD_PASS_INVALID').assert(pass.length <= max, 'OZ_FIELD_PASS_INVALID');
    },
    cpass: (value, name, fv) => {
        const pass = value, min = fv.getConfig('OZ_PASS_MIN_LENGTH'), max = fv.getConfig('OZ_PASS_MAX_LENGTH');
        fv.assert(pass.length >= min, 'OZ_FIELD_PASS_INVALID').assert(pass.length <= max, 'OZ_FIELD_PASS_INVALID');
    },
    pass: (value, name, fv) => {
        const pass = value, min = fv.getConfig('OZ_PASS_MIN_LENGTH'), max = fv.getConfig('OZ_PASS_MAX_LENGTH');
        fv.assert(pass.length >= min, 'OZ_FIELD_PASS_TOO_SHORT', {
            min,
            max,
        }).assert(pass.length <= max, 'OZ_FIELD_PASS_TOO_LONG', {
            min,
            max,
        });
    },
    vpass: (value, name, fv) => {
        fv.assert(value === fv.getField('pass'), 'OZ_FIELD_PASS_AND_VPASS_NOT_EQUAL');
    },
    birth_date: (value, name, fv) => {
        const od = new OWebDate(fv.getAppContext(), value), date = od.describe(), minAge = fv.getConfig('OZ_USER_MIN_AGE'), maxAge = fv.getConfig('OZ_USER_MAX_AGE'), isValid = date &&
            isValidAge(date.d, parseInt(date.mm), date.Y, minAge, maxAge);
        fv.assert(isValid, 'OZ_FIELD_BIRTH_DATE_INVALID', {
            input: value,
            min: minAge,
            max: maxAge,
        });
        date && fv.setField(name, `${date.Y}-${date.mm}-${date.d}`);
    },
    gender: (value, name, fv) => {
        const genders = fv.getConfig('OZ_USER_ALLOWED_GENDERS');
        fv.assert(genders.indexOf(value) >= 0, 'OZ_FIELD_GENDER_INVALID');
    },
    email: (value, name, fv) => {
        /**
         * Email matching regex
         *
         * source: http://www.w3.org/TR/html5/forms.html#valid-e-mail-address
         *        - TLD not required
         *            /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/
         *        - must have TLD
         *            /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/
         */
        const emailReg = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/;
        const email = value.replace(/\s/g, ' ').trim();
        fv.assert(emailReg.test(email), 'OZ_FIELD_EMAIL_INVALID').setField(name, email);
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnYuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZGVmYXVsdC9mdi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxTQUFTLENBQUM7QUFDMUMsT0FBTyxRQUFRLE1BQU0scUJBQXFCLENBQUM7QUFDM0MsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLFVBQVUsQ0FBQztBQUVwQyxpQkFBaUIsQ0FBQyxrQkFBa0IsQ0FBQztJQUNwQyxJQUFJLEVBQUUsQ0FBQyxLQUFVLEVBQUUsSUFBWSxFQUFFLEVBQXFCLEVBQUUsRUFBRTtRQUN6RCxNQUFNLE9BQU8sR0FBRyxJQUFJLE1BQU0sQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7UUFDeEQsRUFBRSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLHNCQUFzQixDQUFDLENBQUM7SUFDeEQsQ0FBQztJQUNELEtBQUssRUFBRSxDQUFDLEtBQVUsRUFBRSxJQUFZLEVBQUUsRUFBcUIsRUFBRSxFQUFFO1FBQzFELEtBQUssR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUUxQyxFQUFFLENBQUMsTUFBTSxDQUNSLEtBQUssQ0FBQyxNQUFNLElBQUksRUFBRSxDQUFDLFNBQVMsQ0FBQyx5QkFBeUIsQ0FBQyxFQUN2RCw4QkFBOEIsQ0FDOUI7YUFDRSxNQUFNLENBQ04sS0FBSyxDQUFDLE1BQU0sSUFBSSxFQUFFLENBQUMsU0FBUyxDQUFDLHlCQUF5QixDQUFDLEVBQ3ZELDZCQUE2QixDQUM3QjthQUNBLFFBQVEsQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDMUIsQ0FBQztJQUNELFVBQVUsRUFBRSxDQUFDLEtBQVUsRUFBRSxJQUFZLEVBQUUsRUFBcUIsRUFBRSxFQUFFO1FBQy9E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QUFVLEVBQUUsSUFBWSxFQUFFLEVBQXFCLEVBQUUsRUFBRTtRQUMzRCxNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsU0FBUyxDQUFDLHlCQUF5QixDQUFDLENBQUM7UUFDeEQsRUFBRSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSx5QkFBeUIsQ0FBQyxDQUFDO0lBQ25FLENBQUM7SUFDRCxLQUFLLEVBQUUsQ0FBQyxLQUFVLEVBQUUsSUFBWSxFQUFFLEVBQXFCLEVBQUUsRUFBRTtRQUMxRDs7Ozs7Ozs7V0FRRztRQUNILE1BQU0sUUFBUSxHQUFHLHNJQUFzSSxDQUFDO1FBQ3hKLE1BQU0sS0FBSyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDO1FBRS9DLEVBQUUsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSx3QkFBd0IsQ0FBQyxDQUFDLFFBQVEsQ0FDakUsSUFBSSxFQUNKLEtBQUssQ0FDTCxDQUFDO0lBQ0gsQ0FBQztDQUNELENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7T1dlYkZvcm1WYWxpZGF0b3J9IGZyb20gJy4uL293ZWInO1xuaW1wb3J0IE9XZWJEYXRlIGZyb20gJy4uL3BsdWdpbnMvT1dlYkRhdGUnO1xuaW1wb3J0IHtpc1ZhbGlkQWdlfSBmcm9tICcuLi91dGlscyc7XG5cbk9XZWJGb3JtVmFsaWRhdG9yLmFkZEZpZWxkVmFsaWRhdG9ycyh7XG5cdGNvZGU6ICh2YWx1ZTogYW55LCBuYW1lOiBzdHJpbmcsIGZ2OiBPV2ViRm9ybVZhbGlkYXRvcikgPT4ge1xuXHRcdGNvbnN0IGNvZGVSZWcgPSBuZXcgUmVnRXhwKGZ2LmdldENvbmZpZygnT1pfQ09ERV9SRUcnKSk7XG5cdFx0ZnYuYXNzZXJ0KGNvZGVSZWcudGVzdCh2YWx1ZSksICdPWl9BVVRIX0NPREVfSU5WQUxJRCcpO1xuXHR9LFxuXHR1bmFtZTogKHZhbHVlOiBhbnksIG5hbWU6IHN0cmluZywgZnY6IE9XZWJGb3JtVmFsaWRhdG9yKSA9PiB7XG5cdFx0dmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC9cXHMrL2csICcgJykudHJpbSgpO1xuXG5cdFx0ZnYuYXNzZXJ0KFxuXHRcdFx0dmFsdWUubGVuZ3RoID49IGZ2LmdldENvbmZpZygnT1pfVVNFUl9OQU1FX01JTl9MRU5HVEgnKSxcblx0XHRcdCdPWl9GSUVMRF9VU0VSX05BTUVfVE9PX1NIT1JUJ1xuXHRcdClcblx0XHQgIC5hc3NlcnQoXG5cdFx0XHQgIHZhbHVlLmxlbmd0aCA8PSBmdi5nZXRDb25maWcoJ09aX1VTRVJfTkFNRV9NQVhfTEVOR1RIJyksXG5cdFx0XHQgICdPWl9GSUVMRF9VU0VSX05BTUVfVE9PX0xPTkcnXG5cdFx0ICApXG5cdFx0ICAuc2V0RmllbGQobmFtZSwgdmFsdWUpO1xuXHR9LFxuXHRsb2dpbl9wYXNzOiAodmFsdWU6IGFueSwgbmFtZTogc3RyaW5nLCBmdjogT1dlYkZvcm1WYWxpZGF0b3IpID0+IHtcblx0XHRjb25zdCBwYXNzID0gdmFsdWUsXG5cdFx0XHQgIG1pbiA9IGZ2LmdldENvbmZpZygnT1pfUEFTU19NSU5fTEVOR1RIJyksXG5cdFx0XHQgIG1heCA9IGZ2LmdldENvbmZpZygnT1pfUEFTU19NQVhfTEVOR1RIJyk7XG5cdFx0ZnYuYXNzZXJ0KHBhc3MubGVuZ3RoID49IG1pbiwgJ09aX0ZJRUxEX1BBU1NfSU5WQUxJRCcpLmFzc2VydChcblx0XHRcdHBhc3MubGVuZ3RoIDw9IG1heCxcblx0XHRcdCdPWl9GSUVMRF9QQVNTX0lOVkFMSUQnXG5cdFx0KTtcblx0fSxcblx0Y3Bhc3M6ICh2YWx1ZTogYW55LCBuYW1lOiBzdHJpbmcsIGZ2OiBPV2ViRm9ybVZhbGlkYXRvcikgPT4ge1xuXHRcdGNvbnN0IHBhc3MgPSB2YWx1ZSxcblx0XHRcdCAgbWluID0gZnYuZ2V0Q29uZmlnKCdPWl9QQVNTX01JTl9MRU5HVEgnKSxcblx0XHRcdCAgbWF4ID0gZnYuZ2V0Q29uZmlnKCdPWl9QQVNTX01BWF9MRU5HVEgnKTtcblx0XHRmdi5hc3NlcnQocGFzcy5sZW5ndGggPj0gbWluLCAnT1pfRklFTERfUEFTU19JTlZBTElEJykuYXNzZXJ0KFxuXHRcdFx0cGFzcy5sZW5ndGggPD0gbWF4LFxuXHRcdFx0J09aX0ZJRUxEX1BBU1NfSU5WQUxJRCdcblx0XHQpO1xuXHR9LFxuXHRwYXNzOiAodmFsdWU6IGFueSwgbmFtZTogc3RyaW5nLCBmdjogT1dlYkZvcm1WYWxpZGF0b3IpID0+IHtcblx0XHRjb25zdCBwYXNzID0gdmFsdWUsXG5cdFx0XHQgIG1pbiA9IGZ2LmdldENvbmZpZygnT1pfUEFTU19NSU5fTEVOR1RIJyksXG5cdFx0XHQgIG1heCA9IGZ2LmdldENvbmZpZygnT1pfUEFTU19NQVhfTEVOR1RIJyk7XG5cdFx0ZnYuYXNzZXJ0KHBhc3MubGVuZ3RoID49IG1pbiwgJ09aX0ZJRUxEX1BBU1NfVE9PX1NIT1JUJywge1xuXHRcdFx0bWluLFxuXHRcdFx0bWF4LFxuXHRcdH0pLmFzc2VydChwYXNzLmxlbmd0aCA8PSBtYXgsICdPWl9GSUVMRF9QQVNTX1RPT19MT05HJywge1xuXHRcdFx0bWluLFxuXHRcdFx0bWF4LFxuXHRcdH0pO1xuXHR9LFxuXHR2cGFzczogKHZhbHVlOiBhbnksIG5hbWU6IHN0cmluZywgZnY6IE9XZWJGb3JtVmFsaWRhdG9yKSA9PiB7XG5cdFx0ZnYuYXNzZXJ0KFxuXHRcdFx0dmFsdWUgPT09IGZ2LmdldEZpZWxkKCdwYXNzJyksXG5cdFx0XHQnT1pfRklFTERfUEFTU19BTkRfVlBBU1NfTk9UX0VRVUFMJ1xuXHRcdCk7XG5cdH0sXG5cdGJpcnRoX2RhdGU6ICh2YWx1ZTogYW55LCBuYW1lOiBzdHJpbmcsIGZ2OiBPV2ViRm9ybVZhbGlkYXRvcikgPT4ge1xuXHRcdGNvbnN0IG9kID0gbmV3IE9XZWJEYXRlKGZ2LmdldEFwcENvbnRleHQoKSwgdmFsdWUpLFxuXHRcdFx0ICBkYXRlID0gb2QuZGVzY3JpYmUoKSxcblx0XHRcdCAgbWluQWdlID0gZnYuZ2V0Q29uZmlnKCdPWl9VU0VSX01JTl9BR0UnKSxcblx0XHRcdCAgbWF4QWdlID0gZnYuZ2V0Q29uZmlnKCdPWl9VU0VSX01BWF9BR0UnKSxcblx0XHRcdCAgaXNWYWxpZCA9XG5cdFx0XHRcdCAgZGF0ZSAmJlxuXHRcdFx0XHQgIGlzVmFsaWRBZ2UoZGF0ZS5kLCBwYXJzZUludChkYXRlLm1tKSwgZGF0ZS5ZLCBtaW5BZ2UsIG1heEFnZSk7XG5cblx0XHRmdi5hc3NlcnQoaXNWYWxpZCwgJ09aX0ZJRUxEX0JJUlRIX0RBVEVfSU5WQUxJRCcsIHtcblx0XHRcdGlucHV0OiB2YWx1ZSxcblx0XHRcdG1pbjogbWluQWdlLFxuXHRcdFx0bWF4OiBtYXhBZ2UsXG5cdFx0fSk7XG5cblx0XHRkYXRlICYmIGZ2LnNldEZpZWxkKG5hbWUsIGAke2RhdGUuWX0tJHtkYXRlLm1tfS0ke2RhdGUuZH1gKTtcblx0fSxcblx0Z2VuZGVyOiAodmFsdWU6IGFueSwgbmFtZTogc3RyaW5nLCBmdjogT1dlYkZvcm1WYWxpZGF0b3IpID0+IHtcblx0XHRjb25zdCBnZW5kZXJzID0gZnYuZ2V0Q29uZmlnKCdPWl9VU0VSX0FMTE9XRURfR0VOREVSUycpO1xuXHRcdGZ2LmFzc2VydChnZW5kZXJzLmluZGV4T2YodmFsdWUpID49IDAsICdPWl9GSUVMRF9HRU5ERVJfSU5WQUxJRCcpO1xuXHR9LFxuXHRlbWFpbDogKHZhbHVlOiBhbnksIG5hbWU6IHN0cmluZywgZnY6IE9XZWJGb3JtVmFsaWRhdG9yKSA9PiB7XG5cdFx0LyoqXG5cdFx0ICogRW1haWwgbWF0Y2hpbmcgcmVnZXhcblx0XHQgKlxuXHRcdCAqIHNvdXJjZTogaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDUvZm9ybXMuaHRtbCN2YWxpZC1lLW1haWwtYWRkcmVzc1xuXHRcdCAqICAgICAgICAtIFRMRCBub3QgcmVxdWlyZWRcblx0XHQgKiAgICAgICAgICAgIC9eW2EtekEtWjAtOS4hIyQlJicqKy89P15fYHt8fX4tXStAW2EtekEtWjAtOV0oPzpbYS16QS1aMC05LV17MCw2MX1bYS16QS1aMC05XSk/KD86XFwuW2EtekEtWjAtOV0oPzpbYS16QS1aMC05LV17MCw2MX1bYS16QS1aMC05XSk/KSokL1xuXHRcdCAqICAgICAgICAtIG11c3QgaGF2ZSBUTERcblx0XHQgKiAgICAgICAgICAgIC9eW2EtekEtWjAtOS4hIyQlJicqKy89P15fYHt8fX4tXStAW2EtekEtWjAtOV0oPzpbYS16QS1aMC05LV17MCw2MX1bYS16QS1aMC05XSk/KD86XFwuW2EtekEtWjAtOV0oPzpbYS16QS1aMC05LV17MCw2MX1bYS16QS1aMC05XSk/KSskL1xuXHRcdCAqL1xuXHRcdGNvbnN0IGVtYWlsUmVnID0gL15bYS16QS1aMC05LiEjJCUmJyorLz0/Xl9ge3x9fi1dK0BbYS16QS1aMC05XSg/OlthLXpBLVowLTktXXswLDYxfVthLXpBLVowLTldKT8oPzpcXC5bYS16QS1aMC05XSg/OlthLXpBLVowLTktXXswLDYxfVthLXpBLVowLTldKT8pKyQvO1xuXHRcdGNvbnN0IGVtYWlsID0gdmFsdWUucmVwbGFjZSgvXFxzL2csICcgJykudHJpbSgpO1xuXG5cdFx0ZnYuYXNzZXJ0KGVtYWlsUmVnLnRlc3QoZW1haWwpLCAnT1pfRklFTERfRU1BSUxfSU5WQUxJRCcpLnNldEZpZWxkKFxuXHRcdFx0bmFtZSxcblx0XHRcdGVtYWlsXG5cdFx0KTtcblx0fSxcbn0pO1xuIl19
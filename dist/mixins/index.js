let fieldId = 0;
export default function (app) {
    return {
        ow_file_url: function (file, quality = 0, def) {
            let parts = file.split("_"), url = app.url.get("OZ_SERVER_GET_FILE_URI"), o = "0", file_id = o, file_key = o;
            if (parts.length === 2) {
                file_id = parts[0];
                file_key = parts[1];
            }
            if (def && (file_id === o || file_key === o)) {
                return def;
            }
            let data = {
                "{oz_file_id}": file_id,
                "{oz_file_key}": file_key,
                "{oz_file_quality}": quality
            };
            Object.keys(data).forEach(function (key) {
                url = url.replace(key, data[key]);
            });
            return url;
        },
        ow_local_time: function (time) {
            let offset = (new Date).getTimezoneOffset() * 60;
            if (typeof time === "string") {
                time = parseInt(time);
            }
            return (time + offset) * 1000;
        },
        ow_route_link: function (path) {
            return app.router.pathToURL(path).href;
        },
        ow_mark_field(field) {
            let id = "ow-field-id-" + (++fieldId);
            if (field.label) {
                field.label.for = id;
            }
            if (field.attributes) {
                field.attributes.id = id;
            }
            return field;
        }
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbWl4aW5zL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLElBQUksT0FBTyxHQUFHLENBQUMsQ0FBQztBQUVoQixNQUFNLENBQUMsT0FBTyxXQUFXLEdBQVk7SUFDcEMsT0FBTztRQUNOLFdBQVcsRUFBRSxVQUFVLElBQVksRUFBRSxVQUF3QixDQUFDLEVBQUUsR0FBWTtZQUMzRSxJQUFJLEtBQUssR0FBTSxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUM3QixHQUFHLEdBQVEsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsd0JBQXdCLENBQUMsRUFDaEQsQ0FBQyxHQUFVLEdBQUcsRUFDZCxPQUFPLEdBQUksQ0FBQyxFQUNaLFFBQVEsR0FBRyxDQUFDLENBQUM7WUFFZCxJQUFJLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO2dCQUN2QixPQUFPLEdBQUksS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNwQixRQUFRLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ3BCO1lBRUQsSUFBSSxHQUFHLElBQUksQ0FBQyxPQUFPLEtBQUssQ0FBQyxJQUFJLFFBQVEsS0FBSyxDQUFDLENBQUMsRUFBRTtnQkFDN0MsT0FBTyxHQUFHLENBQUM7YUFDWDtZQUVELElBQUksSUFBSSxHQUFRO2dCQUNmLGNBQWMsRUFBTyxPQUFPO2dCQUM1QixlQUFlLEVBQU0sUUFBUTtnQkFDN0IsbUJBQW1CLEVBQUUsT0FBTzthQUM1QixDQUFDO1lBRUYsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBVSxHQUFHO2dCQUN0QyxHQUFHLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDbkMsQ0FBQyxDQUFDLENBQUM7WUFFSCxPQUFPLEdBQUcsQ0FBQztRQUNaLENBQUM7UUFDRCxhQUFhLEVBQUUsVUFBVSxJQUFxQjtZQUM3QyxJQUFJLE1BQU0sR0FBRyxDQUFDLElBQUksSUFBSSxDQUFDLENBQUMsaUJBQWlCLEVBQUUsR0FBRyxFQUFFLENBQUM7WUFFakQsSUFBSSxPQUFPLElBQUksS0FBSyxRQUFRLEVBQUU7Z0JBQzdCLElBQUksR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDdEI7WUFFRCxPQUFPLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQztRQUMvQixDQUFDO1FBQ0QsYUFBYSxFQUFFLFVBQVUsSUFBWTtZQUNwQyxPQUFPLEdBQUcsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQztRQUN4QyxDQUFDO1FBQ0QsYUFBYSxDQUFDLEtBQVU7WUFDdkIsSUFBSSxFQUFFLEdBQUcsY0FBYyxHQUFHLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQztZQUN0QyxJQUFJLEtBQUssQ0FBQyxLQUFLLEVBQUU7Z0JBQ2hCLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxHQUFHLEVBQUUsQ0FBQzthQUNyQjtZQUNELElBQUksS0FBSyxDQUFDLFVBQVUsRUFBRTtnQkFDckIsS0FBSyxDQUFDLFVBQVUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDO2FBQ3pCO1lBRUQsT0FBTyxLQUFLLENBQUM7UUFDZCxDQUFDO0tBQ0QsQ0FBQTtBQUNGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgT1dlYkFwcCBmcm9tIFwiLi4vT1dlYkFwcFwiO1xuaW1wb3J0IHt0RmlsZVF1YWxpdHl9IGZyb20gXCIuLi9PV2ViRlNcIjtcblxubGV0IGZpZWxkSWQgPSAwO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoYXBwOiBPV2ViQXBwKSB7XG5cdHJldHVybiB7XG5cdFx0b3dfZmlsZV91cmw6IGZ1bmN0aW9uIChmaWxlOiBzdHJpbmcsIHF1YWxpdHk6IHRGaWxlUXVhbGl0eSA9IDAsIGRlZj86IHN0cmluZykge1xuXHRcdFx0bGV0IHBhcnRzICAgID0gZmlsZS5zcGxpdChcIl9cIiksXG5cdFx0XHRcdHVybCAgICAgID0gYXBwLnVybC5nZXQoXCJPWl9TRVJWRVJfR0VUX0ZJTEVfVVJJXCIpLFxuXHRcdFx0XHRvICAgICAgICA9IFwiMFwiLFxuXHRcdFx0XHRmaWxlX2lkICA9IG8sXG5cdFx0XHRcdGZpbGVfa2V5ID0gbztcblxuXHRcdFx0aWYgKHBhcnRzLmxlbmd0aCA9PT0gMikge1xuXHRcdFx0XHRmaWxlX2lkICA9IHBhcnRzWzBdO1xuXHRcdFx0XHRmaWxlX2tleSA9IHBhcnRzWzFdO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoZGVmICYmIChmaWxlX2lkID09PSBvIHx8IGZpbGVfa2V5ID09PSBvKSkge1xuXHRcdFx0XHRyZXR1cm4gZGVmO1xuXHRcdFx0fVxuXG5cdFx0XHRsZXQgZGF0YTogYW55ID0ge1xuXHRcdFx0XHRcIntvel9maWxlX2lkfVwiICAgICA6IGZpbGVfaWQsXG5cdFx0XHRcdFwie296X2ZpbGVfa2V5fVwiICAgIDogZmlsZV9rZXksXG5cdFx0XHRcdFwie296X2ZpbGVfcXVhbGl0eX1cIjogcXVhbGl0eVxuXHRcdFx0fTtcblxuXHRcdFx0T2JqZWN0LmtleXMoZGF0YSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG5cdFx0XHRcdHVybCA9IHVybC5yZXBsYWNlKGtleSwgZGF0YVtrZXldKTtcblx0XHRcdH0pO1xuXG5cdFx0XHRyZXR1cm4gdXJsO1xuXHRcdH0sXG5cdFx0b3dfbG9jYWxfdGltZTogZnVuY3Rpb24gKHRpbWU6IHN0cmluZyB8IG51bWJlcikge1xuXHRcdFx0bGV0IG9mZnNldCA9IChuZXcgRGF0ZSkuZ2V0VGltZXpvbmVPZmZzZXQoKSAqIDYwO1xuXG5cdFx0XHRpZiAodHlwZW9mIHRpbWUgPT09IFwic3RyaW5nXCIpIHtcblx0XHRcdFx0dGltZSA9IHBhcnNlSW50KHRpbWUpO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gKHRpbWUgKyBvZmZzZXQpICogMTAwMDtcblx0XHR9LFxuXHRcdG93X3JvdXRlX2xpbms6IGZ1bmN0aW9uIChwYXRoOiBzdHJpbmcpOiBzdHJpbmcge1xuXHRcdFx0cmV0dXJuIGFwcC5yb3V0ZXIucGF0aFRvVVJMKHBhdGgpLmhyZWY7XG5cdFx0fSxcblx0XHRvd19tYXJrX2ZpZWxkKGZpZWxkOiBhbnkpIHtcblx0XHRcdGxldCBpZCA9IFwib3ctZmllbGQtaWQtXCIgKyAoKytmaWVsZElkKTtcblx0XHRcdGlmIChmaWVsZC5sYWJlbCkge1xuXHRcdFx0XHRmaWVsZC5sYWJlbC5mb3IgPSBpZDtcblx0XHRcdH1cblx0XHRcdGlmIChmaWVsZC5hdHRyaWJ1dGVzKSB7XG5cdFx0XHRcdGZpZWxkLmF0dHJpYnV0ZXMuaWQgPSBpZDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGZpZWxkO1xuXHRcdH1cblx0fVxufSJdfQ==
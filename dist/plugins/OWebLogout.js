import OWebEvent from '../OWebEvent';
import { id } from '../utils/Utils';
let OWebLogout = /** @class */ (() => {
    class OWebLogout extends OWebEvent {
        constructor(appContext) {
            super();
            this.appContext = appContext;
        }
        onError(handler) {
            return this.on(OWebLogout.EVT_LOGOUT_ERROR, handler);
        }
        onSuccess(handler) {
            return this.on(OWebLogout.EVT_LOGOUT_SUCCESS, handler);
        }
        logout() {
            const m = this, url = m.appContext.url.get('OZ_SERVER_LOGOUT_SERVICE'), net = m.appContext.net(url, {
                method: 'POST',
                isGoodNews(response) {
                    return Boolean(response.json && response.json.error === 0);
                },
            });
            return net
                .onGoodNews(function (response) {
                m.trigger(OWebLogout.EVT_LOGOUT_SUCCESS, [response]);
            })
                .onBadNews(function (response) {
                m.trigger(OWebLogout.EVT_LOGOUT_ERROR, [response]);
            })
                .send();
        }
    }
    OWebLogout.SELF = id();
    OWebLogout.EVT_LOGOUT_ERROR = id();
    OWebLogout.EVT_LOGOUT_SUCCESS = id();
    return OWebLogout;
})();
export default OWebLogout;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT1dlYkxvZ291dC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wbHVnaW5zL09XZWJMb2dvdXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxTQUFTLE1BQU0sY0FBYyxDQUFDO0FBQ3JDLE9BQU8sRUFBRSxFQUFFLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUlwQztJQUFBLE1BQXFCLFVBQVcsU0FBUSxTQUFTO1FBS2hELFlBQTZCLFVBQW1CO1lBQy9DLEtBQUssRUFBRSxDQUFDO1lBRG9CLGVBQVUsR0FBVixVQUFVLENBQVM7UUFFaEQsQ0FBQztRQUVELE9BQU8sQ0FDTixPQUdTO1lBRVQsT0FBTyxJQUFJLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxnQkFBZ0IsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUN0RCxDQUFDO1FBRUQsU0FBUyxDQUNSLE9BR1M7WUFFVCxPQUFPLElBQUksQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLGtCQUFrQixFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ3hELENBQUM7UUFFRCxNQUFNO1lBQ0wsTUFBTSxDQUFDLEdBQUcsSUFBSSxFQUNiLEdBQUcsR0FBRyxDQUFDLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsMEJBQTBCLENBQUMsRUFDdEQsR0FBRyxHQUFHLENBQUMsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFxQixHQUFHLEVBQUU7Z0JBQy9DLE1BQU0sRUFBRSxNQUFNO2dCQUNkLFVBQVUsQ0FBQyxRQUFRO29CQUNsQixPQUFPLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxJQUFJLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDO2dCQUM1RCxDQUFDO2FBQ0QsQ0FBQyxDQUFDO1lBRUosT0FBTyxHQUFHO2lCQUNSLFVBQVUsQ0FBQyxVQUFVLFFBQVE7Z0JBQzdCLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLGtCQUFrQixFQUFFLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUN0RCxDQUFDLENBQUM7aUJBQ0QsU0FBUyxDQUFDLFVBQVUsUUFBUTtnQkFDNUIsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ3BELENBQUMsQ0FBQztpQkFDRCxJQUFJLEVBQUUsQ0FBQztRQUNWLENBQUM7O0lBNUNlLGVBQUksR0FBRyxFQUFFLEVBQUUsQ0FBQztJQUNaLDJCQUFnQixHQUFHLEVBQUUsRUFBRSxDQUFDO0lBQ3hCLDZCQUFrQixHQUFHLEVBQUUsRUFBRSxDQUFDO0lBMkMzQyxpQkFBQztLQUFBO2VBOUNvQixVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE9XZWJBcHAgZnJvbSAnLi4vT1dlYkFwcCc7XG5pbXBvcnQgT1dlYkV2ZW50IGZyb20gJy4uL09XZWJFdmVudCc7XG5pbXBvcnQgeyBpZCB9IGZyb20gJy4uL3V0aWxzL1V0aWxzJztcbmltcG9ydCB7IElOZXRSZXNwb25zZSB9IGZyb20gJy4uL09XZWJOZXQnO1xuaW1wb3J0IHsgSU9ab25lQXBpSlNPTiB9IGZyb20gJy4uL296b25lJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgT1dlYkxvZ291dCBleHRlbmRzIE9XZWJFdmVudCB7XG5cdHN0YXRpYyByZWFkb25seSBTRUxGID0gaWQoKTtcblx0c3RhdGljIHJlYWRvbmx5IEVWVF9MT0dPVVRfRVJST1IgPSBpZCgpO1xuXHRzdGF0aWMgcmVhZG9ubHkgRVZUX0xPR09VVF9TVUNDRVNTID0gaWQoKTtcblxuXHRjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IGFwcENvbnRleHQ6IE9XZWJBcHApIHtcblx0XHRzdXBlcigpO1xuXHR9XG5cblx0b25FcnJvcihcblx0XHRoYW5kbGVyOiAoXG5cdFx0XHR0aGlzOiB0aGlzLFxuXHRcdFx0cmVzcG9uc2U6IElOZXRSZXNwb25zZTxJT1pvbmVBcGlKU09OPGFueT4+LFxuXHRcdCkgPT4gdm9pZCxcblx0KTogdGhpcyB7XG5cdFx0cmV0dXJuIHRoaXMub24oT1dlYkxvZ291dC5FVlRfTE9HT1VUX0VSUk9SLCBoYW5kbGVyKTtcblx0fVxuXG5cdG9uU3VjY2Vzcyhcblx0XHRoYW5kbGVyOiAoXG5cdFx0XHR0aGlzOiB0aGlzLFxuXHRcdFx0cmVzcG9uc2U6IElOZXRSZXNwb25zZTxJT1pvbmVBcGlKU09OPGFueT4+LFxuXHRcdCkgPT4gdm9pZCxcblx0KTogdGhpcyB7XG5cdFx0cmV0dXJuIHRoaXMub24oT1dlYkxvZ291dC5FVlRfTE9HT1VUX1NVQ0NFU1MsIGhhbmRsZXIpO1xuXHR9XG5cblx0bG9nb3V0KCkge1xuXHRcdGNvbnN0IG0gPSB0aGlzLFxuXHRcdFx0dXJsID0gbS5hcHBDb250ZXh0LnVybC5nZXQoJ09aX1NFUlZFUl9MT0dPVVRfU0VSVklDRScpLFxuXHRcdFx0bmV0ID0gbS5hcHBDb250ZXh0Lm5ldDxJT1pvbmVBcGlKU09OPGFueT4+KHVybCwge1xuXHRcdFx0XHRtZXRob2Q6ICdQT1NUJyxcblx0XHRcdFx0aXNHb29kTmV3cyhyZXNwb25zZSkge1xuXHRcdFx0XHRcdHJldHVybiBCb29sZWFuKHJlc3BvbnNlLmpzb24gJiYgcmVzcG9uc2UuanNvbi5lcnJvciA9PT0gMCk7XG5cdFx0XHRcdH0sXG5cdFx0XHR9KTtcblxuXHRcdHJldHVybiBuZXRcblx0XHRcdC5vbkdvb2ROZXdzKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuXHRcdFx0XHRtLnRyaWdnZXIoT1dlYkxvZ291dC5FVlRfTE9HT1VUX1NVQ0NFU1MsIFtyZXNwb25zZV0pO1xuXHRcdFx0fSlcblx0XHRcdC5vbkJhZE5ld3MoZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG5cdFx0XHRcdG0udHJpZ2dlcihPV2ViTG9nb3V0LkVWVF9MT0dPVVRfRVJST1IsIFtyZXNwb25zZV0pO1xuXHRcdFx0fSlcblx0XHRcdC5zZW5kKCk7XG5cdH1cbn1cbiJdfQ==
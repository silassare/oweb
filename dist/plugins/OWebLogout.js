import OWebEvent from '../OWebEvent';
import { id } from '../utils';
import { ozNet } from '../ozone';
let OWebLogout = /** @class */ (() => {
    class OWebLogout extends OWebEvent {
        constructor(appContext) {
            super();
            this.appContext = appContext;
        }
        onError(handler) {
            return this.on(OWebLogout.EVT_LOGOUT_ERROR, handler);
        }
        onSuccess(handler) {
            return this.on(OWebLogout.EVT_LOGOUT_SUCCESS, handler);
        }
        logout() {
            const m = this, url = m.appContext.url.get('OZ_SERVER_LOGOUT_SERVICE'), net = ozNet(url, {
                method: 'POST',
                isGoodNews(response) {
                    return Boolean(response.json && response.json.error === 0);
                },
            });
            return net
                .onGoodNews(function (response) {
                m.trigger(OWebLogout.EVT_LOGOUT_SUCCESS, [response]);
            })
                .onBadNews(function (response) {
                m.trigger(OWebLogout.EVT_LOGOUT_ERROR, [response]);
            })
                .send();
        }
    }
    OWebLogout.SELF = id();
    OWebLogout.EVT_LOGOUT_ERROR = id();
    OWebLogout.EVT_LOGOUT_SUCCESS = id();
    return OWebLogout;
})();
export default OWebLogout;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT1dlYkxvZ291dC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wbHVnaW5zL09XZWJMb2dvdXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxTQUFTLE1BQU0sY0FBYyxDQUFDO0FBQ3JDLE9BQU8sRUFBRSxFQUFFLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFFOUIsT0FBTyxFQUFpQixLQUFLLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFFaEQ7SUFBQSxNQUFxQixVQUFXLFNBQVEsU0FBUztRQUtoRCxZQUE2QixVQUFtQjtZQUMvQyxLQUFLLEVBQUUsQ0FBQztZQURvQixlQUFVLEdBQVYsVUFBVSxDQUFTO1FBRWhELENBQUM7UUFFRCxPQUFPLENBQ04sT0FHUztZQUVULE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUMsZ0JBQWdCLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDdEQsQ0FBQztRQUVELFNBQVMsQ0FDUixPQUdTO1lBRVQsT0FBTyxJQUFJLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxrQkFBa0IsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUN4RCxDQUFDO1FBRUQsTUFBTTtZQUNMLE1BQU0sQ0FBQyxHQUFHLElBQUksRUFDYixHQUFHLEdBQUcsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLDBCQUEwQixDQUFDLEVBQ3RELEdBQUcsR0FBRyxLQUFLLENBQXFCLEdBQUcsRUFBRTtnQkFDcEMsTUFBTSxFQUFFLE1BQU07Z0JBQ2QsVUFBVSxDQUFDLFFBQVE7b0JBQ2xCLE9BQU8sT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLElBQUksUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUM7Z0JBQzVELENBQUM7YUFDRCxDQUFDLENBQUM7WUFFSixPQUFPLEdBQUc7aUJBQ1IsVUFBVSxDQUFDLFVBQVUsUUFBUTtnQkFDN0IsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsa0JBQWtCLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ3RELENBQUMsQ0FBQztpQkFDRCxTQUFTLENBQUMsVUFBVSxRQUFRO2dCQUM1QixDQUFDLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDcEQsQ0FBQyxDQUFDO2lCQUNELElBQUksRUFBRSxDQUFDO1FBQ1YsQ0FBQzs7SUE1Q2UsZUFBSSxHQUFHLEVBQUUsRUFBRSxDQUFDO0lBQ1osMkJBQWdCLEdBQUcsRUFBRSxFQUFFLENBQUM7SUFDeEIsNkJBQWtCLEdBQUcsRUFBRSxFQUFFLENBQUM7SUEyQzNDLGlCQUFDO0tBQUE7ZUE5Q29CLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgT1dlYkFwcCBmcm9tICcuLi9PV2ViQXBwJztcbmltcG9ydCBPV2ViRXZlbnQgZnJvbSAnLi4vT1dlYkV2ZW50JztcbmltcG9ydCB7IGlkIH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IHsgSU5ldFJlc3BvbnNlIH0gZnJvbSAnLi4vT1dlYk5ldCc7XG5pbXBvcnQgeyBJT1pvbmVBcGlKU09OLCBvek5ldCB9IGZyb20gJy4uL296b25lJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgT1dlYkxvZ291dCBleHRlbmRzIE9XZWJFdmVudCB7XG5cdHN0YXRpYyByZWFkb25seSBTRUxGID0gaWQoKTtcblx0c3RhdGljIHJlYWRvbmx5IEVWVF9MT0dPVVRfRVJST1IgPSBpZCgpO1xuXHRzdGF0aWMgcmVhZG9ubHkgRVZUX0xPR09VVF9TVUNDRVNTID0gaWQoKTtcblxuXHRjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IGFwcENvbnRleHQ6IE9XZWJBcHApIHtcblx0XHRzdXBlcigpO1xuXHR9XG5cblx0b25FcnJvcihcblx0XHRoYW5kbGVyOiAoXG5cdFx0XHR0aGlzOiB0aGlzLFxuXHRcdFx0cmVzcG9uc2U6IElOZXRSZXNwb25zZTxJT1pvbmVBcGlKU09OPGFueT4+LFxuXHRcdCkgPT4gdm9pZCxcblx0KTogdGhpcyB7XG5cdFx0cmV0dXJuIHRoaXMub24oT1dlYkxvZ291dC5FVlRfTE9HT1VUX0VSUk9SLCBoYW5kbGVyKTtcblx0fVxuXG5cdG9uU3VjY2Vzcyhcblx0XHRoYW5kbGVyOiAoXG5cdFx0XHR0aGlzOiB0aGlzLFxuXHRcdFx0cmVzcG9uc2U6IElOZXRSZXNwb25zZTxJT1pvbmVBcGlKU09OPGFueT4+LFxuXHRcdCkgPT4gdm9pZCxcblx0KTogdGhpcyB7XG5cdFx0cmV0dXJuIHRoaXMub24oT1dlYkxvZ291dC5FVlRfTE9HT1VUX1NVQ0NFU1MsIGhhbmRsZXIpO1xuXHR9XG5cblx0bG9nb3V0KCkge1xuXHRcdGNvbnN0IG0gPSB0aGlzLFxuXHRcdFx0dXJsID0gbS5hcHBDb250ZXh0LnVybC5nZXQoJ09aX1NFUlZFUl9MT0dPVVRfU0VSVklDRScpLFxuXHRcdFx0bmV0ID0gb3pOZXQ8SU9ab25lQXBpSlNPTjxhbnk+Pih1cmwsIHtcblx0XHRcdFx0bWV0aG9kOiAnUE9TVCcsXG5cdFx0XHRcdGlzR29vZE5ld3MocmVzcG9uc2UpIHtcblx0XHRcdFx0XHRyZXR1cm4gQm9vbGVhbihyZXNwb25zZS5qc29uICYmIHJlc3BvbnNlLmpzb24uZXJyb3IgPT09IDApO1xuXHRcdFx0XHR9LFxuXHRcdFx0fSk7XG5cblx0XHRyZXR1cm4gbmV0XG5cdFx0XHQub25Hb29kTmV3cyhmdW5jdGlvbiAocmVzcG9uc2UpIHtcblx0XHRcdFx0bS50cmlnZ2VyKE9XZWJMb2dvdXQuRVZUX0xPR09VVF9TVUNDRVNTLCBbcmVzcG9uc2VdKTtcblx0XHRcdH0pXG5cdFx0XHQub25CYWROZXdzKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuXHRcdFx0XHRtLnRyaWdnZXIoT1dlYkxvZ291dC5FVlRfTE9HT1VUX0VSUk9SLCBbcmVzcG9uc2VdKTtcblx0XHRcdH0pXG5cdFx0XHQuc2VuZCgpO1xuXHR9XG59XG4iXX0=
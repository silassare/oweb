import OWebEvent from '../OWebEvent';
import { id } from '../utils';
export default class OWebAccountRecovery extends OWebEvent {
    constructor(_appContext) {
        super();
        this._appContext = _appContext;
    }
    stepStart(data) {
        return this._sendForm({
            phone: data.phone,
            cc2: data.cc2,
            step: OWebAccountRecovery.AR_STEP_START,
        }, OWebAccountRecovery.AR_STEP_VALIDATE);
    }
    stepValidate(data) {
        return this._sendForm({
            step: OWebAccountRecovery.AR_STEP_VALIDATE,
            code: data.code,
        }, OWebAccountRecovery.AR_STEP_END);
    }
    stepEnd(data) {
        return this._sendForm({
            pass: data.pass,
            vpass: data.vpass,
            step: String(OWebAccountRecovery.AR_STEP_END),
        });
    }
    onRecoverySuccess(handler) {
        return this.on(OWebAccountRecovery.EVT_AR_SUCCESS, handler);
    }
    onRecoveryFail(handler) {
        return this.on(OWebAccountRecovery.EVT_AR_FAIL, handler);
    }
    onNextStep(handler) {
        return this.on(OWebAccountRecovery.EVT_AR_NEXT_STEP, handler);
    }
    _sendForm(data, nextStep) {
        const m = this, url = m._appContext.url.get('OZ_SERVER_ACCOUNT_RECOVERY_SERVICE'), net = m._appContext.oz.request(url, {
            method: 'POST',
            body: data,
        });
        return net
            .onGoodNews(function (response) {
            if (nextStep) {
                m.trigger(OWebAccountRecovery.EVT_AR_NEXT_STEP, [
                    response,
                    nextStep,
                ]);
            }
            else {
                m.trigger(OWebAccountRecovery.EVT_AR_SUCCESS, [response]);
            }
        })
            .onFail(function (err) {
            m.trigger(OWebAccountRecovery.EVT_AR_FAIL, [err]);
        })
            .send();
    }
}
OWebAccountRecovery.SELF = id();
OWebAccountRecovery.EVT_AR_NEXT_STEP = id();
OWebAccountRecovery.EVT_AR_SUCCESS = id();
OWebAccountRecovery.EVT_AR_FAIL = id();
OWebAccountRecovery.AR_STEP_START = 1;
OWebAccountRecovery.AR_STEP_VALIDATE = 2;
OWebAccountRecovery.AR_STEP_END = 3;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT1dlYkFjY291bnRSZWNvdmVyeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wbHVnaW5zL09XZWJBY2NvdW50UmVjb3ZlcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxTQUFTLE1BQU0sY0FBYyxDQUFDO0FBQ3JDLE9BQU8sRUFBQyxFQUFFLEVBQUMsTUFBTSxVQUFVLENBQUM7QUFJNUIsTUFBTSxDQUFDLE9BQU8sT0FBTyxtQkFBb0IsU0FBUSxTQUFTO0lBVXpELFlBQTZCLFdBQW9CO1FBQ2hELEtBQUssRUFBRSxDQUFDO1FBRG9CLGdCQUFXLEdBQVgsV0FBVyxDQUFTO0lBRWpELENBQUM7SUFFRCxTQUFTLENBQUMsSUFBb0M7UUFDN0MsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUNwQjtZQUNDLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSztZQUNqQixHQUFHLEVBQUksSUFBSSxDQUFDLEdBQUc7WUFDZixJQUFJLEVBQUcsbUJBQW1CLENBQUMsYUFBYTtTQUN4QyxFQUNELG1CQUFtQixDQUFDLGdCQUFnQixDQUNwQyxDQUFDO0lBQ0gsQ0FBQztJQUVELFlBQVksQ0FBQyxJQUFzQjtRQUNsQyxPQUFPLElBQUksQ0FBQyxTQUFTLENBQ3BCO1lBQ0MsSUFBSSxFQUFFLG1CQUFtQixDQUFDLGdCQUFnQjtZQUMxQyxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUk7U0FDZixFQUNELG1CQUFtQixDQUFDLFdBQVcsQ0FDL0IsQ0FBQztJQUNILENBQUM7SUFFRCxPQUFPLENBQUMsSUFBcUM7UUFDNUMsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO1lBQ3JCLElBQUksRUFBRyxJQUFJLENBQUMsSUFBSTtZQUNoQixLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7WUFDakIsSUFBSSxFQUFHLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxXQUFXLENBQUM7U0FDOUMsQ0FBQyxDQUFDO0lBQ0osQ0FBQztJQUVELGlCQUFpQixDQUNoQixPQUUrQztRQUUvQyxPQUFPLElBQUksQ0FBQyxFQUFFLENBQUMsbUJBQW1CLENBQUMsY0FBYyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQzdELENBQUM7SUFFRCxjQUFjLENBQ2IsT0FBNkM7UUFFN0MsT0FBTyxJQUFJLENBQUMsRUFBRSxDQUFDLG1CQUFtQixDQUFDLFdBQVcsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUMxRCxDQUFDO0lBRUQsVUFBVSxDQUNULE9BSVM7UUFFVCxPQUFPLElBQUksQ0FBQyxFQUFFLENBQUMsbUJBQW1CLENBQUMsZ0JBQWdCLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDL0QsQ0FBQztJQUVPLFNBQVMsQ0FBQyxJQUF1QixFQUFFLFFBQWlCO1FBQzNELE1BQU0sQ0FBQyxHQUFLLElBQUksRUFDYixHQUFHLEdBQUcsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLG9DQUFvQyxDQUFDLEVBQ2pFLEdBQUcsR0FBRyxDQUFDLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQWdCLEdBQUcsRUFBRTtZQUNsRCxNQUFNLEVBQUUsTUFBTTtZQUNkLElBQUksRUFBSSxJQUFJO1NBQ1osQ0FBQyxDQUFDO1FBRU4sT0FBTyxHQUFHO2FBQ1IsVUFBVSxDQUFDLFVBQVUsUUFBUTtZQUM3QixJQUFJLFFBQVEsRUFBRTtnQkFDYixDQUFDLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDLGdCQUFnQixFQUFFO29CQUMvQyxRQUFRO29CQUNSLFFBQVE7aUJBQ1IsQ0FBQyxDQUFDO2FBQ0g7aUJBQU07Z0JBQ04sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxjQUFjLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO2FBQzFEO1FBQ0YsQ0FBQyxDQUFDO2FBQ0QsTUFBTSxDQUFDLFVBQVUsR0FBRztZQUNwQixDQUFDLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDLFdBQVcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDbkQsQ0FBQyxDQUFDO2FBQ0QsSUFBSSxFQUFFLENBQUM7SUFDVixDQUFDOztBQXpGZSx3QkFBSSxHQUFlLEVBQUUsRUFBRSxDQUFDO0FBQ3hCLG9DQUFnQixHQUFHLEVBQUUsRUFBRSxDQUFDO0FBQ3hCLGtDQUFjLEdBQUssRUFBRSxFQUFFLENBQUM7QUFDeEIsK0JBQVcsR0FBUSxFQUFFLEVBQUUsQ0FBQztBQUV4QixpQ0FBYSxHQUFNLENBQUMsQ0FBQztBQUNyQixvQ0FBZ0IsR0FBRyxDQUFDLENBQUM7QUFDckIsK0JBQVcsR0FBUSxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgT1dlYkFwcCBmcm9tICcuLi9PV2ViQXBwJztcbmltcG9ydCBPV2ViRXZlbnQgZnJvbSAnLi4vT1dlYkV2ZW50JztcbmltcG9ydCB7aWR9IGZyb20gJy4uL3V0aWxzJztcbmltcG9ydCB7T05ldEVycm9yLCBPTmV0UmVzcG9uc2V9IGZyb20gJy4uL09XZWJOZXQnO1xuaW1wb3J0IHtPQXBpSlNPTn0gZnJvbSAnLi4vb3pvbmUnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBPV2ViQWNjb3VudFJlY292ZXJ5IGV4dGVuZHMgT1dlYkV2ZW50IHtcblx0c3RhdGljIHJlYWRvbmx5IFNFTEYgICAgICAgICAgICAgPSBpZCgpO1xuXHRzdGF0aWMgcmVhZG9ubHkgRVZUX0FSX05FWFRfU1RFUCA9IGlkKCk7XG5cdHN0YXRpYyByZWFkb25seSBFVlRfQVJfU1VDQ0VTUyAgID0gaWQoKTtcblx0c3RhdGljIHJlYWRvbmx5IEVWVF9BUl9GQUlMICAgICAgPSBpZCgpO1xuXG5cdHN0YXRpYyByZWFkb25seSBBUl9TVEVQX1NUQVJUICAgID0gMTtcblx0c3RhdGljIHJlYWRvbmx5IEFSX1NURVBfVkFMSURBVEUgPSAyO1xuXHRzdGF0aWMgcmVhZG9ubHkgQVJfU1RFUF9FTkQgICAgICA9IDM7XG5cblx0Y29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBfYXBwQ29udGV4dDogT1dlYkFwcCkge1xuXHRcdHN1cGVyKCk7XG5cdH1cblxuXHRzdGVwU3RhcnQoZGF0YTogeyBwaG9uZTogc3RyaW5nOyBjYzI6IHN0cmluZyB9KSB7XG5cdFx0cmV0dXJuIHRoaXMuX3NlbmRGb3JtKFxuXHRcdFx0e1xuXHRcdFx0XHRwaG9uZTogZGF0YS5waG9uZSxcblx0XHRcdFx0Y2MyICA6IGRhdGEuY2MyLFxuXHRcdFx0XHRzdGVwIDogT1dlYkFjY291bnRSZWNvdmVyeS5BUl9TVEVQX1NUQVJULFxuXHRcdFx0fSxcblx0XHRcdE9XZWJBY2NvdW50UmVjb3ZlcnkuQVJfU1RFUF9WQUxJREFURSxcblx0XHQpO1xuXHR9XG5cblx0c3RlcFZhbGlkYXRlKGRhdGE6IHsgY29kZTogc3RyaW5nIH0pIHtcblx0XHRyZXR1cm4gdGhpcy5fc2VuZEZvcm0oXG5cdFx0XHR7XG5cdFx0XHRcdHN0ZXA6IE9XZWJBY2NvdW50UmVjb3ZlcnkuQVJfU1RFUF9WQUxJREFURSxcblx0XHRcdFx0Y29kZTogZGF0YS5jb2RlLFxuXHRcdFx0fSxcblx0XHRcdE9XZWJBY2NvdW50UmVjb3ZlcnkuQVJfU1RFUF9FTkQsXG5cdFx0KTtcblx0fVxuXG5cdHN0ZXBFbmQoZGF0YTogeyBwYXNzOiBzdHJpbmc7IHZwYXNzOiBzdHJpbmcgfSkge1xuXHRcdHJldHVybiB0aGlzLl9zZW5kRm9ybSh7XG5cdFx0XHRwYXNzIDogZGF0YS5wYXNzLFxuXHRcdFx0dnBhc3M6IGRhdGEudnBhc3MsXG5cdFx0XHRzdGVwIDogU3RyaW5nKE9XZWJBY2NvdW50UmVjb3ZlcnkuQVJfU1RFUF9FTkQpLFxuXHRcdH0pO1xuXHR9XG5cblx0b25SZWNvdmVyeVN1Y2Nlc3MoXG5cdFx0aGFuZGxlcjogKFxuXHRcdFx0dGhpczogdGhpcyxcblx0XHRcdHJlc3BvbnNlOiBPTmV0UmVzcG9uc2U8T0FwaUpTT048YW55Pj4pID0+IHZvaWQsXG5cdCk6IHRoaXMge1xuXHRcdHJldHVybiB0aGlzLm9uKE9XZWJBY2NvdW50UmVjb3ZlcnkuRVZUX0FSX1NVQ0NFU1MsIGhhbmRsZXIpO1xuXHR9XG5cblx0b25SZWNvdmVyeUZhaWwoXG5cdFx0aGFuZGxlcjogKHRoaXM6IHRoaXMsIGVycjogT05ldEVycm9yKSA9PiB2b2lkLFxuXHQpOiB0aGlzIHtcblx0XHRyZXR1cm4gdGhpcy5vbihPV2ViQWNjb3VudFJlY292ZXJ5LkVWVF9BUl9GQUlMLCBoYW5kbGVyKTtcblx0fVxuXG5cdG9uTmV4dFN0ZXAoXG5cdFx0aGFuZGxlcjogKFxuXHRcdFx0dGhpczogdGhpcyxcblx0XHRcdHJlc3BvbnNlOiBPTmV0UmVzcG9uc2U8T0FwaUpTT048YW55Pj4sXG5cdFx0XHRzdGVwOiBudW1iZXIsXG5cdFx0KSA9PiB2b2lkLFxuXHQpOiB0aGlzIHtcblx0XHRyZXR1cm4gdGhpcy5vbihPV2ViQWNjb3VudFJlY292ZXJ5LkVWVF9BUl9ORVhUX1NURVAsIGhhbmRsZXIpO1xuXHR9XG5cblx0cHJpdmF0ZSBfc2VuZEZvcm0oZGF0YTogRm9ybURhdGEgfCBvYmplY3QsIG5leHRTdGVwPzogbnVtYmVyKSB7XG5cdFx0Y29uc3QgbSAgID0gdGhpcyxcblx0XHRcdCAgdXJsID0gbS5fYXBwQ29udGV4dC51cmwuZ2V0KCdPWl9TRVJWRVJfQUNDT1VOVF9SRUNPVkVSWV9TRVJWSUNFJyksXG5cdFx0XHQgIG5ldCA9IG0uX2FwcENvbnRleHQub3oucmVxdWVzdDxPQXBpSlNPTjxhbnk+Pih1cmwsIHtcblx0XHRcdFx0ICBtZXRob2Q6ICdQT1NUJyxcblx0XHRcdFx0ICBib2R5ICA6IGRhdGEsXG5cdFx0XHQgIH0pO1xuXG5cdFx0cmV0dXJuIG5ldFxuXHRcdFx0Lm9uR29vZE5ld3MoZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG5cdFx0XHRcdGlmIChuZXh0U3RlcCkge1xuXHRcdFx0XHRcdG0udHJpZ2dlcihPV2ViQWNjb3VudFJlY292ZXJ5LkVWVF9BUl9ORVhUX1NURVAsIFtcblx0XHRcdFx0XHRcdHJlc3BvbnNlLFxuXHRcdFx0XHRcdFx0bmV4dFN0ZXAsXG5cdFx0XHRcdFx0XSk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0bS50cmlnZ2VyKE9XZWJBY2NvdW50UmVjb3ZlcnkuRVZUX0FSX1NVQ0NFU1MsIFtyZXNwb25zZV0pO1xuXHRcdFx0XHR9XG5cdFx0XHR9KVxuXHRcdFx0Lm9uRmFpbChmdW5jdGlvbiAoZXJyKSB7XG5cdFx0XHRcdG0udHJpZ2dlcihPV2ViQWNjb3VudFJlY292ZXJ5LkVWVF9BUl9GQUlMLCBbZXJyXSk7XG5cdFx0XHR9KVxuXHRcdFx0LnNlbmQoKTtcblx0fVxufVxuIl19
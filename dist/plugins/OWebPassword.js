import OWebEvent from '../OWebEvent';
import { id } from '../utils/Utils';
export default class OWebPassword extends OWebEvent {
    constructor(appContext) {
        super();
        this.appContext = appContext;
    }
    editPass(form, uid) {
        const m = this, url = m.appContext.url.get('OZ_SERVER_PASSWORD_SERVICE'), required = uid ? ['pass', 'vpass'] : ['cpass', 'pass', 'vpass'], ofv = this.appContext.getFormValidator(form, required);
        let formData;
        if (!ofv.validate()) {
            return;
        }
        formData = ofv.getFormData(required);
        formData.append('action', 'edit');
        if (uid) {
            formData.append('uid', uid);
        }
        m.appContext.request('POST', url, formData, function (response) {
            m.trigger(OWebPassword.EVT_PASS_EDIT_SUCCESS, [response]);
        }, function (response) {
            m.trigger(OWebPassword.EVT_PASS_EDIT_ERROR, [response]);
        }, true);
    }
    onError(handler) {
        return this.on(OWebPassword.EVT_PASS_EDIT_ERROR, handler);
    }
    onSuccess(handler) {
        return this.on(OWebPassword.EVT_PASS_EDIT_SUCCESS, handler);
    }
}
OWebPassword.SELF = id();
OWebPassword.EVT_PASS_EDIT_SUCCESS = id();
OWebPassword.EVT_PASS_EDIT_ERROR = id();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT1dlYlBhc3N3b3JkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3BsdWdpbnMvT1dlYlBhc3N3b3JkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sU0FBUyxNQUFNLGNBQWMsQ0FBQztBQUNyQyxPQUFPLEVBQUUsRUFBRSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFcEMsTUFBTSxDQUFDLE9BQU8sT0FBTyxZQUFhLFNBQVEsU0FBUztJQUtsRCxZQUE2QixVQUFtQjtRQUMvQyxLQUFLLEVBQUUsQ0FBQztRQURvQixlQUFVLEdBQVYsVUFBVSxDQUFTO0lBRWhELENBQUM7SUFFRCxRQUFRLENBQUMsSUFBcUIsRUFBRSxHQUFZO1FBQzNDLE1BQU0sQ0FBQyxHQUFHLElBQUksRUFDYixHQUFHLEdBQUcsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLDRCQUE0QixDQUFDLEVBQ3hELFFBQVEsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsT0FBTyxDQUFDLEVBQy9ELEdBQUcsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLGdCQUFnQixDQUFDLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQztRQUN4RCxJQUFJLFFBQVEsQ0FBQztRQUViLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLEVBQUU7WUFDcEIsT0FBTztTQUNQO1FBRUQsUUFBUSxHQUFHLEdBQUcsQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDckMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFFbEMsSUFBSSxHQUFHLEVBQUU7WUFDUixRQUFRLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQztTQUM1QjtRQUVELENBQUMsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUNuQixNQUFNLEVBQ04sR0FBRyxFQUNILFFBQVEsRUFDUixVQUFVLFFBQWE7WUFDdEIsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMscUJBQXFCLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1FBQzNELENBQUMsRUFDRCxVQUFVLFFBQWE7WUFDdEIsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsbUJBQW1CLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1FBQ3pELENBQUMsRUFDRCxJQUFJLENBQ0osQ0FBQztJQUNILENBQUM7SUFFRCxPQUFPLENBQUMsT0FBcUQ7UUFDNUQsT0FBTyxJQUFJLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQyxtQkFBbUIsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUMzRCxDQUFDO0lBRUQsU0FBUyxDQUFDLE9BQXFEO1FBQzlELE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQyxZQUFZLENBQUMscUJBQXFCLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDN0QsQ0FBQzs7QUE5Q2UsaUJBQUksR0FBRyxFQUFFLEVBQUUsQ0FBQztBQUNaLGtDQUFxQixHQUFHLEVBQUUsRUFBRSxDQUFDO0FBQzdCLGdDQUFtQixHQUFHLEVBQUUsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE9XZWJBcHAgZnJvbSAnLi4vT1dlYkFwcCc7XHJcbmltcG9ydCB7IElDb21SZXNwb25zZSB9IGZyb20gJy4uL09XZWJDb20nO1xyXG5pbXBvcnQgT1dlYkV2ZW50IGZyb20gJy4uL09XZWJFdmVudCc7XHJcbmltcG9ydCB7IGlkIH0gZnJvbSAnLi4vdXRpbHMvVXRpbHMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgT1dlYlBhc3N3b3JkIGV4dGVuZHMgT1dlYkV2ZW50IHtcclxuXHRzdGF0aWMgcmVhZG9ubHkgU0VMRiA9IGlkKCk7XHJcblx0c3RhdGljIHJlYWRvbmx5IEVWVF9QQVNTX0VESVRfU1VDQ0VTUyA9IGlkKCk7XHJcblx0c3RhdGljIHJlYWRvbmx5IEVWVF9QQVNTX0VESVRfRVJST1IgPSBpZCgpO1xyXG5cclxuXHRjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IGFwcENvbnRleHQ6IE9XZWJBcHApIHtcclxuXHRcdHN1cGVyKCk7XHJcblx0fVxyXG5cclxuXHRlZGl0UGFzcyhmb3JtOiBIVE1MRm9ybUVsZW1lbnQsIHVpZD86IHN0cmluZykge1xyXG5cdFx0Y29uc3QgbSA9IHRoaXMsXHJcblx0XHRcdHVybCA9IG0uYXBwQ29udGV4dC51cmwuZ2V0KCdPWl9TRVJWRVJfUEFTU1dPUkRfU0VSVklDRScpLFxyXG5cdFx0XHRyZXF1aXJlZCA9IHVpZCA/IFsncGFzcycsICd2cGFzcyddIDogWydjcGFzcycsICdwYXNzJywgJ3ZwYXNzJ10sXHJcblx0XHRcdG9mdiA9IHRoaXMuYXBwQ29udGV4dC5nZXRGb3JtVmFsaWRhdG9yKGZvcm0sIHJlcXVpcmVkKTtcclxuXHRcdGxldCBmb3JtRGF0YTtcclxuXHJcblx0XHRpZiAoIW9mdi52YWxpZGF0ZSgpKSB7XHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHJcblx0XHRmb3JtRGF0YSA9IG9mdi5nZXRGb3JtRGF0YShyZXF1aXJlZCk7XHJcblx0XHRmb3JtRGF0YS5hcHBlbmQoJ2FjdGlvbicsICdlZGl0Jyk7XHJcblxyXG5cdFx0aWYgKHVpZCkge1xyXG5cdFx0XHRmb3JtRGF0YS5hcHBlbmQoJ3VpZCcsIHVpZCk7XHJcblx0XHR9XHJcblxyXG5cdFx0bS5hcHBDb250ZXh0LnJlcXVlc3QoXHJcblx0XHRcdCdQT1NUJyxcclxuXHRcdFx0dXJsLFxyXG5cdFx0XHRmb3JtRGF0YSxcclxuXHRcdFx0ZnVuY3Rpb24gKHJlc3BvbnNlOiBhbnkpIHtcclxuXHRcdFx0XHRtLnRyaWdnZXIoT1dlYlBhc3N3b3JkLkVWVF9QQVNTX0VESVRfU1VDQ0VTUywgW3Jlc3BvbnNlXSk7XHJcblx0XHRcdH0sXHJcblx0XHRcdGZ1bmN0aW9uIChyZXNwb25zZTogYW55KSB7XHJcblx0XHRcdFx0bS50cmlnZ2VyKE9XZWJQYXNzd29yZC5FVlRfUEFTU19FRElUX0VSUk9SLCBbcmVzcG9uc2VdKTtcclxuXHRcdFx0fSxcclxuXHRcdFx0dHJ1ZSxcclxuXHRcdCk7XHJcblx0fVxyXG5cclxuXHRvbkVycm9yKGhhbmRsZXI6ICh0aGlzOiB0aGlzLCByZXNwb25zZTogSUNvbVJlc3BvbnNlKSA9PiB2b2lkKTogdGhpcyB7XHJcblx0XHRyZXR1cm4gdGhpcy5vbihPV2ViUGFzc3dvcmQuRVZUX1BBU1NfRURJVF9FUlJPUiwgaGFuZGxlcik7XHJcblx0fVxyXG5cclxuXHRvblN1Y2Nlc3MoaGFuZGxlcjogKHRoaXM6IHRoaXMsIHJlc3BvbnNlOiBJQ29tUmVzcG9uc2UpID0+IHZvaWQpOiB0aGlzIHtcclxuXHRcdHJldHVybiB0aGlzLm9uKE9XZWJQYXNzd29yZC5FVlRfUEFTU19FRElUX1NVQ0NFU1MsIGhhbmRsZXIpO1xyXG5cdH1cclxufVxyXG4iXX0=
import OWebEvent from '../OWebEvent';
import { id } from '../utils';
export default class OWebPassword extends OWebEvent {
    constructor(_appContext) {
        super();
        this._appContext = _appContext;
    }
    editPass(data) {
        return this._sendForm({
            action: 'edit',
            cpass: data.cpass,
            vpass: data.vpass,
            pass: data.pass,
        });
    }
    editPassAdmin(data) {
        return this._sendForm({
            action: 'edit',
            uid: data.uid,
            pass: data.pass,
            vpass: data.vpass,
        });
    }
    _sendForm(data) {
        const m = this, url = m._appContext.url.get('OZ_SERVER_PASSWORD_SERVICE'), net = m._appContext.oz.request(url, {
            method: 'POST',
            body: data,
        });
        return net
            .onGoodNews(function (response) {
            m.trigger(OWebPassword.EVT_PASS_EDIT_SUCCESS, [response]);
        })
            .onFail(function (err) {
            m.trigger(OWebPassword.EVT_PASS_EDIT_FAIL, [err]);
        })
            .send();
    }
    onEditFail(handler) {
        return this.on(OWebPassword.EVT_PASS_EDIT_FAIL, handler);
    }
    onEditSuccess(handler) {
        return this.on(OWebPassword.EVT_PASS_EDIT_SUCCESS, handler);
    }
}
OWebPassword.SELF = id();
OWebPassword.EVT_PASS_EDIT_SUCCESS = id();
OWebPassword.EVT_PASS_EDIT_FAIL = id();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT1dlYlBhc3N3b3JkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3BsdWdpbnMvT1dlYlBhc3N3b3JkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sU0FBUyxNQUFNLGNBQWMsQ0FBQztBQUNyQyxPQUFPLEVBQUMsRUFBRSxFQUFDLE1BQU0sVUFBVSxDQUFDO0FBSTVCLE1BQU0sQ0FBQyxPQUFPLE9BQU8sWUFBYSxTQUFRLFNBQVM7SUFLbEQsWUFBNkIsV0FBb0I7UUFDaEQsS0FBSyxFQUFFLENBQUM7UUFEb0IsZ0JBQVcsR0FBWCxXQUFXLENBQVM7SUFFakQsQ0FBQztJQUVELFFBQVEsQ0FBQyxJQUFvRDtRQUM1RCxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7WUFDckIsTUFBTSxFQUFFLE1BQU07WUFDZCxLQUFLLEVBQUcsSUFBSSxDQUFDLEtBQUs7WUFDbEIsS0FBSyxFQUFHLElBQUksQ0FBQyxLQUFLO1lBQ2xCLElBQUksRUFBSSxJQUFJLENBQUMsSUFBSTtTQUNqQixDQUFDLENBQUM7SUFDSixDQUFDO0lBRUQsYUFBYSxDQUFDLElBQWtEO1FBQy9ELE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztZQUNyQixNQUFNLEVBQUUsTUFBTTtZQUNkLEdBQUcsRUFBSyxJQUFJLENBQUMsR0FBRztZQUNoQixJQUFJLEVBQUksSUFBSSxDQUFDLElBQUk7WUFDakIsS0FBSyxFQUFHLElBQUksQ0FBQyxLQUFLO1NBQ2xCLENBQUMsQ0FBQztJQUNKLENBQUM7SUFFTyxTQUFTLENBQUMsSUFBdUI7UUFDeEMsTUFBTSxDQUFDLEdBQUssSUFBSSxFQUNiLEdBQUcsR0FBRyxDQUFDLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsNEJBQTRCLENBQUMsRUFDekQsR0FBRyxHQUFHLENBQUMsQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBZ0IsR0FBRyxFQUFFO1lBQ2xELE1BQU0sRUFBRSxNQUFNO1lBQ2QsSUFBSSxFQUFJLElBQUk7U0FDWixDQUFDLENBQUM7UUFFTixPQUFPLEdBQUc7YUFDUixVQUFVLENBQUMsVUFBVSxRQUFRO1lBQzdCLENBQUMsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLHFCQUFxQixFQUFFLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztRQUMzRCxDQUFDLENBQUM7YUFDRCxNQUFNLENBQUMsVUFBVSxHQUFHO1lBQ3BCLENBQUMsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLGtCQUFrQixFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUNuRCxDQUFDLENBQUM7YUFDRCxJQUFJLEVBQUUsQ0FBQztJQUNWLENBQUM7SUFFRCxVQUFVLENBQ1QsT0FBNkM7UUFFN0MsT0FBTyxJQUFJLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQyxrQkFBa0IsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUMxRCxDQUFDO0lBRUQsYUFBYSxDQUNaLE9BR1M7UUFFVCxPQUFPLElBQUksQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDLHFCQUFxQixFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQzdELENBQUM7O0FBekRlLGlCQUFJLEdBQW9CLEVBQUUsRUFBRSxDQUFDO0FBQzdCLGtDQUFxQixHQUFHLEVBQUUsRUFBRSxDQUFDO0FBQzdCLCtCQUFrQixHQUFNLEVBQUUsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE9XZWJBcHAgZnJvbSAnLi4vT1dlYkFwcCc7XG5pbXBvcnQgT1dlYkV2ZW50IGZyb20gJy4uL09XZWJFdmVudCc7XG5pbXBvcnQge2lkfSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQge09OZXRFcnJvciwgT05ldFJlc3BvbnNlfSBmcm9tICcuLi9PV2ViTmV0JztcbmltcG9ydCB7T0FwaUpTT059IGZyb20gJy4uL296b25lJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgT1dlYlBhc3N3b3JkIGV4dGVuZHMgT1dlYkV2ZW50IHtcblx0c3RhdGljIHJlYWRvbmx5IFNFTEYgICAgICAgICAgICAgICAgICA9IGlkKCk7XG5cdHN0YXRpYyByZWFkb25seSBFVlRfUEFTU19FRElUX1NVQ0NFU1MgPSBpZCgpO1xuXHRzdGF0aWMgcmVhZG9ubHkgRVZUX1BBU1NfRURJVF9GQUlMICAgID0gaWQoKTtcblxuXHRjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IF9hcHBDb250ZXh0OiBPV2ViQXBwKSB7XG5cdFx0c3VwZXIoKTtcblx0fVxuXG5cdGVkaXRQYXNzKGRhdGE6IHsgY3Bhc3M6IHN0cmluZzsgcGFzczogc3RyaW5nOyB2cGFzczogc3RyaW5nIH0pIHtcblx0XHRyZXR1cm4gdGhpcy5fc2VuZEZvcm0oe1xuXHRcdFx0YWN0aW9uOiAnZWRpdCcsXG5cdFx0XHRjcGFzcyA6IGRhdGEuY3Bhc3MsXG5cdFx0XHR2cGFzcyA6IGRhdGEudnBhc3MsXG5cdFx0XHRwYXNzICA6IGRhdGEucGFzcyxcblx0XHR9KTtcblx0fVxuXG5cdGVkaXRQYXNzQWRtaW4oZGF0YTogeyB1aWQ6IHN0cmluZzsgcGFzczogc3RyaW5nOyB2cGFzczogc3RyaW5nIH0pIHtcblx0XHRyZXR1cm4gdGhpcy5fc2VuZEZvcm0oe1xuXHRcdFx0YWN0aW9uOiAnZWRpdCcsXG5cdFx0XHR1aWQgICA6IGRhdGEudWlkLFxuXHRcdFx0cGFzcyAgOiBkYXRhLnBhc3MsXG5cdFx0XHR2cGFzcyA6IGRhdGEudnBhc3MsXG5cdFx0fSk7XG5cdH1cblxuXHRwcml2YXRlIF9zZW5kRm9ybShkYXRhOiBGb3JtRGF0YSB8IG9iamVjdCkge1xuXHRcdGNvbnN0IG0gICA9IHRoaXMsXG5cdFx0XHQgIHVybCA9IG0uX2FwcENvbnRleHQudXJsLmdldCgnT1pfU0VSVkVSX1BBU1NXT1JEX1NFUlZJQ0UnKSxcblx0XHRcdCAgbmV0ID0gbS5fYXBwQ29udGV4dC5vei5yZXF1ZXN0PE9BcGlKU09OPGFueT4+KHVybCwge1xuXHRcdFx0XHQgIG1ldGhvZDogJ1BPU1QnLFxuXHRcdFx0XHQgIGJvZHkgIDogZGF0YSxcblx0XHRcdCAgfSk7XG5cblx0XHRyZXR1cm4gbmV0XG5cdFx0XHQub25Hb29kTmV3cyhmdW5jdGlvbiAocmVzcG9uc2UpIHtcblx0XHRcdFx0bS50cmlnZ2VyKE9XZWJQYXNzd29yZC5FVlRfUEFTU19FRElUX1NVQ0NFU1MsIFtyZXNwb25zZV0pO1xuXHRcdFx0fSlcblx0XHRcdC5vbkZhaWwoZnVuY3Rpb24gKGVycikge1xuXHRcdFx0XHRtLnRyaWdnZXIoT1dlYlBhc3N3b3JkLkVWVF9QQVNTX0VESVRfRkFJTCwgW2Vycl0pO1xuXHRcdFx0fSlcblx0XHRcdC5zZW5kKCk7XG5cdH1cblxuXHRvbkVkaXRGYWlsKFxuXHRcdGhhbmRsZXI6ICh0aGlzOiB0aGlzLCBlcnI6IE9OZXRFcnJvcikgPT4gdm9pZCxcblx0KTogdGhpcyB7XG5cdFx0cmV0dXJuIHRoaXMub24oT1dlYlBhc3N3b3JkLkVWVF9QQVNTX0VESVRfRkFJTCwgaGFuZGxlcik7XG5cdH1cblxuXHRvbkVkaXRTdWNjZXNzKFxuXHRcdGhhbmRsZXI6IChcblx0XHRcdHRoaXM6IHRoaXMsXG5cdFx0XHRyZXNwb25zZTogT05ldFJlc3BvbnNlPE9BcGlKU09OPGFueT4+LFxuXHRcdCkgPT4gdm9pZCxcblx0KTogdGhpcyB7XG5cdFx0cmV0dXJuIHRoaXMub24oT1dlYlBhc3N3b3JkLkVWVF9QQVNTX0VESVRfU1VDQ0VTUywgaGFuZGxlcik7XG5cdH1cbn1cbiJdfQ==
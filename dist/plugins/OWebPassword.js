import { OWebEvent } from "../oweb";
export default class OWebPassword extends OWebEvent {
    constructor(app_context) {
        super();
        this.app_context = app_context;
    }
    stepStart(form) {
        let ofv = this.app_context.getFormValidator(form, ["phone"]), formData;
        if (ofv.validate()) {
            formData = ofv.getFormData(["phone", "cc2"]);
            formData.set("step", String(OWebPassword.PASSWORD_EDIT_STEP_START));
            this._sendForm(form, formData, OWebPassword.PASSWORD_EDIT_STEP_VALIDATE);
        }
    }
    stepValidate(form) {
        let ofv = this.app_context.getFormValidator(form, ["code"]);
        if (ofv.validate()) {
            this._sendForm(form, {
                "step": OWebPassword.PASSWORD_EDIT_STEP_VALIDATE,
                "code": ofv.getField("code")
            }, OWebPassword.PASSWORD_EDIT_STEP_END);
        }
    }
    stepEnd(form) {
        let required = ["pass", "vpass"], ofv = this.app_context.getFormValidator(form, required), formData;
        if (ofv.validate()) {
            formData = ofv.getFormData(required);
            formData.set("step", String(OWebPassword.PASSWORD_EDIT_STEP_END));
            this._sendForm(form, formData);
        }
    }
    _sendForm(form, data, next_step) {
        let m = this, url = m.app_context.url.get("OZ_SERVER_PASSWORD_EDIT_SERVICE");
        m.app_context.request("POST", url, data, function (response) {
            if (next_step) {
                m.trigger(OWebPassword.EVT_NEXT_STEP, [{ "response": response, "step": next_step, }]);
            }
            else {
                m.trigger(OWebPassword.EVT_PASSWORD_EDIT_SUCCESS, [{ "response": response }]);
            }
        }, function (response) {
            m.trigger(OWebPassword.EVT_PASSWORD_EDIT_ERROR, [{ "response": response }]);
        }, true);
    }
}
OWebPassword.PASSWORD_EDIT_STEP_START = 1;
OWebPassword.PASSWORD_EDIT_STEP_VALIDATE = 2;
OWebPassword.PASSWORD_EDIT_STEP_END = 3;
OWebPassword.EVT_NEXT_STEP = "OWebPassword:next_step";
OWebPassword.EVT_PASSWORD_EDIT_SUCCESS = "OWebPassword:success";
OWebPassword.EVT_PASSWORD_EDIT_ERROR = "OWebPassword:error";
OWebPassword.SELF = "OWebPassword";
;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT1dlYlBhc3N3b3JkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3BsdWdpbnMvT1dlYlBhc3N3b3JkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBVSxTQUFTLEVBQUMsTUFBTSxTQUFTLENBQUM7QUFFM0MsTUFBTSxDQUFDLE9BQU8sbUJBQW9CLFNBQVEsU0FBUztJQVdsRCxZQUE2QixXQUFvQjtRQUNoRCxLQUFLLEVBQUUsQ0FBQztRQURvQixnQkFBVyxHQUFYLFdBQVcsQ0FBUztJQUVqRCxDQUFDO0lBRUQsU0FBUyxDQUFDLElBQXFCO1FBQzlCLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUMsRUFDM0QsUUFBUSxDQUFDO1FBRVYsSUFBSSxHQUFHLENBQUMsUUFBUSxFQUFFLEVBQUU7WUFDbkIsUUFBUSxHQUFHLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQztZQUM3QyxRQUFRLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsWUFBWSxDQUFDLHdCQUF3QixDQUFDLENBQUMsQ0FBQztZQUNwRSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxRQUFRLEVBQUUsWUFBWSxDQUFDLDJCQUEyQixDQUFDLENBQUM7U0FDekU7SUFDRixDQUFDO0lBRUQsWUFBWSxDQUFDLElBQXFCO1FBQ2pDLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztRQUU1RCxJQUFJLEdBQUcsQ0FBQyxRQUFRLEVBQUUsRUFBRTtZQUNuQixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRTtnQkFDcEIsTUFBTSxFQUFFLFlBQVksQ0FBQywyQkFBMkI7Z0JBQ2hELE1BQU0sRUFBRSxHQUFHLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQzthQUM1QixFQUFFLFlBQVksQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO1NBQ3hDO0lBRUYsQ0FBQztJQUVELE9BQU8sQ0FBQyxJQUFxQjtRQUM1QixJQUFJLFFBQVEsR0FBRyxDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUMsRUFDL0IsR0FBRyxHQUFRLElBQUksQ0FBQyxXQUFXLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxFQUFFLFFBQVEsQ0FBQyxFQUM1RCxRQUFRLENBQUM7UUFFVixJQUFJLEdBQUcsQ0FBQyxRQUFRLEVBQUUsRUFBRTtZQUNuQixRQUFRLEdBQUcsR0FBRyxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUNyQyxRQUFRLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsWUFBWSxDQUFDLHNCQUFzQixDQUFDLENBQUMsQ0FBQztZQUVsRSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQztTQUMvQjtJQUNGLENBQUM7SUFFRCxTQUFTLENBQUMsSUFBcUIsRUFBRSxJQUFTLEVBQUUsU0FBa0I7UUFDN0QsSUFBSSxDQUFDLEdBQUssSUFBSSxFQUNiLEdBQUcsR0FBRyxDQUFDLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsaUNBQWlDLENBQUMsQ0FBQztRQUVoRSxDQUFDLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxVQUFVLFFBQWE7WUFDL0QsSUFBSSxTQUFTLEVBQUU7Z0JBQ2QsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsYUFBYSxFQUFFLENBQUMsRUFBQyxVQUFVLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxTQUFTLEdBQUUsQ0FBQyxDQUFDLENBQUM7YUFDcEY7aUJBQU07Z0JBQ04sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMseUJBQXlCLEVBQUUsQ0FBQyxFQUFDLFVBQVUsRUFBRSxRQUFRLEVBQUMsQ0FBQyxDQUFDLENBQUM7YUFDNUU7UUFDRixDQUFDLEVBQUUsVUFBVSxRQUFhO1lBQ3pCLENBQUMsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLHVCQUF1QixFQUFFLENBQUMsRUFBQyxVQUFVLEVBQUUsUUFBUSxFQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzNFLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNWLENBQUM7O0FBOURlLHFDQUF3QixHQUFNLENBQUMsQ0FBQztBQUNoQyx3Q0FBMkIsR0FBRyxDQUFDLENBQUM7QUFDaEMsbUNBQXNCLEdBQVEsQ0FBQyxDQUFDO0FBRWhDLDBCQUFhLEdBQWUsd0JBQXdCLENBQUM7QUFDckQsc0NBQXlCLEdBQUcsc0JBQXNCLENBQUM7QUFDbkQsb0NBQXVCLEdBQUssb0JBQW9CLENBQUM7QUFDakQsaUJBQUksR0FBd0IsY0FBYyxDQUFDO0FBd0QzRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtPV2ViQXBwLCBPV2ViRXZlbnR9IGZyb20gXCIuLi9vd2ViXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBPV2ViUGFzc3dvcmQgZXh0ZW5kcyBPV2ViRXZlbnQge1xyXG5cclxuXHRzdGF0aWMgcmVhZG9ubHkgUEFTU1dPUkRfRURJVF9TVEVQX1NUQVJUICAgID0gMTtcclxuXHRzdGF0aWMgcmVhZG9ubHkgUEFTU1dPUkRfRURJVF9TVEVQX1ZBTElEQVRFID0gMjtcclxuXHRzdGF0aWMgcmVhZG9ubHkgUEFTU1dPUkRfRURJVF9TVEVQX0VORCAgICAgID0gMztcclxuXHJcblx0c3RhdGljIHJlYWRvbmx5IEVWVF9ORVhUX1NURVAgICAgICAgICAgICAgPSBcIk9XZWJQYXNzd29yZDpuZXh0X3N0ZXBcIjtcclxuXHRzdGF0aWMgcmVhZG9ubHkgRVZUX1BBU1NXT1JEX0VESVRfU1VDQ0VTUyA9IFwiT1dlYlBhc3N3b3JkOnN1Y2Nlc3NcIjtcclxuXHRzdGF0aWMgcmVhZG9ubHkgRVZUX1BBU1NXT1JEX0VESVRfRVJST1IgICA9IFwiT1dlYlBhc3N3b3JkOmVycm9yXCI7XHJcblx0c3RhdGljIHJlYWRvbmx5IFNFTEYgICAgICAgICAgICAgICAgICAgICAgPSBcIk9XZWJQYXNzd29yZFwiO1xyXG5cclxuXHRjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IGFwcF9jb250ZXh0OiBPV2ViQXBwKSB7XHJcblx0XHRzdXBlcigpO1xyXG5cdH1cclxuXHJcblx0c3RlcFN0YXJ0KGZvcm06IEhUTUxGb3JtRWxlbWVudCkge1xyXG5cdFx0bGV0IG9mdiA9IHRoaXMuYXBwX2NvbnRleHQuZ2V0Rm9ybVZhbGlkYXRvcihmb3JtLCBbXCJwaG9uZVwiXSksXHJcblx0XHRcdGZvcm1EYXRhO1xyXG5cclxuXHRcdGlmIChvZnYudmFsaWRhdGUoKSkge1xyXG5cdFx0XHRmb3JtRGF0YSA9IG9mdi5nZXRGb3JtRGF0YShbXCJwaG9uZVwiLCBcImNjMlwiXSk7XHJcblx0XHRcdGZvcm1EYXRhLnNldChcInN0ZXBcIiwgU3RyaW5nKE9XZWJQYXNzd29yZC5QQVNTV09SRF9FRElUX1NURVBfU1RBUlQpKTtcclxuXHRcdFx0dGhpcy5fc2VuZEZvcm0oZm9ybSwgZm9ybURhdGEsIE9XZWJQYXNzd29yZC5QQVNTV09SRF9FRElUX1NURVBfVkFMSURBVEUpO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0c3RlcFZhbGlkYXRlKGZvcm06IEhUTUxGb3JtRWxlbWVudCkge1xyXG5cdFx0bGV0IG9mdiA9IHRoaXMuYXBwX2NvbnRleHQuZ2V0Rm9ybVZhbGlkYXRvcihmb3JtLCBbXCJjb2RlXCJdKTtcclxuXHJcblx0XHRpZiAob2Z2LnZhbGlkYXRlKCkpIHtcclxuXHRcdFx0dGhpcy5fc2VuZEZvcm0oZm9ybSwge1xyXG5cdFx0XHRcdFwic3RlcFwiOiBPV2ViUGFzc3dvcmQuUEFTU1dPUkRfRURJVF9TVEVQX1ZBTElEQVRFLFxyXG5cdFx0XHRcdFwiY29kZVwiOiBvZnYuZ2V0RmllbGQoXCJjb2RlXCIpXHJcblx0XHRcdH0sIE9XZWJQYXNzd29yZC5QQVNTV09SRF9FRElUX1NURVBfRU5EKTtcclxuXHRcdH1cclxuXHJcblx0fVxyXG5cclxuXHRzdGVwRW5kKGZvcm06IEhUTUxGb3JtRWxlbWVudCkge1xyXG5cdFx0bGV0IHJlcXVpcmVkID0gW1wicGFzc1wiLCBcInZwYXNzXCJdLFxyXG5cdFx0XHRvZnYgICAgICA9IHRoaXMuYXBwX2NvbnRleHQuZ2V0Rm9ybVZhbGlkYXRvcihmb3JtLCByZXF1aXJlZCksXHJcblx0XHRcdGZvcm1EYXRhO1xyXG5cclxuXHRcdGlmIChvZnYudmFsaWRhdGUoKSkge1xyXG5cdFx0XHRmb3JtRGF0YSA9IG9mdi5nZXRGb3JtRGF0YShyZXF1aXJlZCk7XHJcblx0XHRcdGZvcm1EYXRhLnNldChcInN0ZXBcIiwgU3RyaW5nKE9XZWJQYXNzd29yZC5QQVNTV09SRF9FRElUX1NURVBfRU5EKSk7XHJcblxyXG5cdFx0XHR0aGlzLl9zZW5kRm9ybShmb3JtLCBmb3JtRGF0YSk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRfc2VuZEZvcm0oZm9ybTogSFRNTEZvcm1FbGVtZW50LCBkYXRhOiBhbnksIG5leHRfc3RlcD86IG51bWJlcikge1xyXG5cdFx0bGV0IG0gICA9IHRoaXMsXHJcblx0XHRcdHVybCA9IG0uYXBwX2NvbnRleHQudXJsLmdldChcIk9aX1NFUlZFUl9QQVNTV09SRF9FRElUX1NFUlZJQ0VcIik7XHJcblxyXG5cdFx0bS5hcHBfY29udGV4dC5yZXF1ZXN0KFwiUE9TVFwiLCB1cmwsIGRhdGEsIGZ1bmN0aW9uIChyZXNwb25zZTogYW55KSB7XHJcblx0XHRcdGlmIChuZXh0X3N0ZXApIHtcclxuXHRcdFx0XHRtLnRyaWdnZXIoT1dlYlBhc3N3b3JkLkVWVF9ORVhUX1NURVAsIFt7XCJyZXNwb25zZVwiOiByZXNwb25zZSwgXCJzdGVwXCI6IG5leHRfc3RlcCx9XSk7XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0bS50cmlnZ2VyKE9XZWJQYXNzd29yZC5FVlRfUEFTU1dPUkRfRURJVF9TVUNDRVNTLCBbe1wicmVzcG9uc2VcIjogcmVzcG9uc2V9XSk7XHJcblx0XHRcdH1cclxuXHRcdH0sIGZ1bmN0aW9uIChyZXNwb25zZTogYW55KSB7XHJcblx0XHRcdG0udHJpZ2dlcihPV2ViUGFzc3dvcmQuRVZUX1BBU1NXT1JEX0VESVRfRVJST1IsIFt7XCJyZXNwb25zZVwiOiByZXNwb25zZX1dKTtcclxuXHRcdH0sIHRydWUpO1xyXG5cdH1cclxufTtcclxuIl19
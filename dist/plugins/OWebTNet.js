import OWebEvent from "../OWebEvent";
import Utils from "../utils/Utils";
export default class OWebTNet extends OWebEvent {
    constructor(app_context) {
        super();
        this.app_context = app_context;
    }
    check() {
        let m = this, url = this.app_context.url.get("OZ_SERVER_TNET_SERVICE");
        this.app_context.request("GET", url, null, function (response) {
            let data = response["data"], res;
            if (Utils.isPlainObject(data["_current_user"])) {
                // user is verified
                res = [OWebTNet.STATE_VERIFIED_USER, data["_current_user"]];
                m.app_context.user.setCurrentUser(data["_current_user"]);
            }
            else if (Utils.isPlainObject(data["_info_sign_up"])) {
                // user is in registration process
                res = [OWebTNet.STATE_SIGN_UP_PROCESS,
                    data["_info_sign_up"]];
            }
            else {
                // no user
                res = [OWebTNet.STATE_NO_USER];
            }
            m.trigger(OWebTNet.EVT_TNET_READY, res);
        }, function () {
            let state = OWebTNet.STATE_UNKNOWN;
            if (m.app_context.userVerified()) {
                state = OWebTNet.STATE_OFFLINE_USER;
            }
            m.trigger(OWebTNet.EVT_TNET_READY, [state]);
        });
        return m;
    }
}
OWebTNet.SELF = Utils.id();
OWebTNet.EVT_TNET_READY = Utils.id();
OWebTNet.STATE_UNKNOWN = Utils.id();
OWebTNet.STATE_NO_USER = Utils.id();
OWebTNet.STATE_OFFLINE_USER = Utils.id();
OWebTNet.STATE_VERIFIED_USER = Utils.id();
OWebTNet.STATE_SIGN_UP_PROCESS = Utils.id();
;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT1dlYlROZXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvcGx1Z2lucy9PV2ViVE5ldC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLFNBQVMsTUFBTSxjQUFjLENBQUM7QUFDckMsT0FBTyxLQUFLLE1BQU0sZ0JBQWdCLENBQUM7QUFFbkMsTUFBTSxDQUFDLE9BQU8sT0FBTyxRQUFTLFNBQVEsU0FBUztJQVc5QyxZQUE2QixXQUFvQjtRQUNoRCxLQUFLLEVBQUUsQ0FBQztRQURvQixnQkFBVyxHQUFYLFdBQVcsQ0FBUztJQUVqRCxDQUFDO0lBRUQsS0FBSztRQUNKLElBQUksQ0FBQyxHQUFLLElBQUksRUFDYixHQUFHLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLHdCQUF3QixDQUFDLENBQUM7UUFFMUQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsVUFBVSxRQUFhO1lBQ2pFLElBQUksSUFBSSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUMsRUFDMUIsR0FBRyxDQUFDO1lBRUwsSUFBSSxLQUFLLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxFQUFFO2dCQUMvQyxtQkFBbUI7Z0JBQ25CLEdBQUcsR0FBRyxDQUFDLFFBQVEsQ0FBQyxtQkFBbUIsRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQztnQkFFNUQsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO2FBRXpEO2lCQUFNLElBQUksS0FBSyxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUMsRUFBRTtnQkFDdEQsa0NBQWtDO2dCQUNsQyxHQUFHLEdBQUcsQ0FBQyxRQUFRLENBQUMscUJBQXFCO29CQUNwQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQzthQUN4QjtpQkFBTTtnQkFDTixVQUFVO2dCQUNWLEdBQUcsR0FBRyxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsQ0FBQzthQUMvQjtZQUVELENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLGNBQWMsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUN6QyxDQUFDLEVBQUU7WUFDRixJQUFJLEtBQUssR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDO1lBRW5DLElBQUksQ0FBQyxDQUFDLFdBQVcsQ0FBQyxZQUFZLEVBQUUsRUFBRTtnQkFDakMsS0FBSyxHQUFHLFFBQVEsQ0FBQyxrQkFBa0IsQ0FBQzthQUNwQztZQUVELENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLGNBQWMsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDN0MsQ0FBQyxDQUFDLENBQUM7UUFFSCxPQUFPLENBQUMsQ0FBQztJQUNWLENBQUM7O0FBaERlLGFBQUksR0FBb0IsS0FBSyxDQUFDLEVBQUUsRUFBRSxDQUFDO0FBQ25DLHVCQUFjLEdBQVUsS0FBSyxDQUFDLEVBQUUsRUFBRSxDQUFDO0FBRW5DLHNCQUFhLEdBQVcsS0FBSyxDQUFDLEVBQUUsRUFBRSxDQUFDO0FBQ25DLHNCQUFhLEdBQVcsS0FBSyxDQUFDLEVBQUUsRUFBRSxDQUFDO0FBQ25DLDJCQUFrQixHQUFNLEtBQUssQ0FBQyxFQUFFLEVBQUUsQ0FBQztBQUNuQyw0QkFBbUIsR0FBSyxLQUFLLENBQUMsRUFBRSxFQUFFLENBQUM7QUFDbkMsOEJBQXFCLEdBQUcsS0FBSyxDQUFDLEVBQUUsRUFBRSxDQUFDO0FBMENuRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE9XZWJBcHAgZnJvbSBcIi4uL09XZWJBcHBcIjtcclxuaW1wb3J0IE9XZWJFdmVudCBmcm9tIFwiLi4vT1dlYkV2ZW50XCI7XHJcbmltcG9ydCBVdGlscyBmcm9tIFwiLi4vdXRpbHMvVXRpbHNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE9XZWJUTmV0IGV4dGVuZHMgT1dlYkV2ZW50IHtcclxuXHJcblx0c3RhdGljIHJlYWRvbmx5IFNFTEYgICAgICAgICAgICAgICAgICA9IFV0aWxzLmlkKCk7XHJcblx0c3RhdGljIHJlYWRvbmx5IEVWVF9UTkVUX1JFQURZICAgICAgICA9IFV0aWxzLmlkKCk7XHJcblxyXG5cdHN0YXRpYyByZWFkb25seSBTVEFURV9VTktOT1dOICAgICAgICAgPSBVdGlscy5pZCgpO1xyXG5cdHN0YXRpYyByZWFkb25seSBTVEFURV9OT19VU0VSICAgICAgICAgPSBVdGlscy5pZCgpO1xyXG5cdHN0YXRpYyByZWFkb25seSBTVEFURV9PRkZMSU5FX1VTRVIgICAgPSBVdGlscy5pZCgpO1xyXG5cdHN0YXRpYyByZWFkb25seSBTVEFURV9WRVJJRklFRF9VU0VSICAgPSBVdGlscy5pZCgpO1xyXG5cdHN0YXRpYyByZWFkb25seSBTVEFURV9TSUdOX1VQX1BST0NFU1MgPSBVdGlscy5pZCgpO1xyXG5cclxuXHRjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IGFwcF9jb250ZXh0OiBPV2ViQXBwKSB7XHJcblx0XHRzdXBlcigpO1xyXG5cdH1cclxuXHJcblx0Y2hlY2soKSB7XHJcblx0XHRsZXQgbSAgID0gdGhpcyxcclxuXHRcdFx0dXJsID0gdGhpcy5hcHBfY29udGV4dC51cmwuZ2V0KFwiT1pfU0VSVkVSX1RORVRfU0VSVklDRVwiKTtcclxuXHJcblx0XHR0aGlzLmFwcF9jb250ZXh0LnJlcXVlc3QoXCJHRVRcIiwgdXJsLCBudWxsLCBmdW5jdGlvbiAocmVzcG9uc2U6IGFueSkge1xyXG5cdFx0XHRsZXQgZGF0YSA9IHJlc3BvbnNlW1wiZGF0YVwiXSxcclxuXHRcdFx0XHRyZXM7XHJcblxyXG5cdFx0XHRpZiAoVXRpbHMuaXNQbGFpbk9iamVjdChkYXRhW1wiX2N1cnJlbnRfdXNlclwiXSkpIHtcclxuXHRcdFx0XHQvLyB1c2VyIGlzIHZlcmlmaWVkXHJcblx0XHRcdFx0cmVzID0gW09XZWJUTmV0LlNUQVRFX1ZFUklGSUVEX1VTRVIsIGRhdGFbXCJfY3VycmVudF91c2VyXCJdXTtcclxuXHJcblx0XHRcdFx0bS5hcHBfY29udGV4dC51c2VyLnNldEN1cnJlbnRVc2VyKGRhdGFbXCJfY3VycmVudF91c2VyXCJdKTtcclxuXHJcblx0XHRcdH0gZWxzZSBpZiAoVXRpbHMuaXNQbGFpbk9iamVjdChkYXRhW1wiX2luZm9fc2lnbl91cFwiXSkpIHtcclxuXHRcdFx0XHQvLyB1c2VyIGlzIGluIHJlZ2lzdHJhdGlvbiBwcm9jZXNzXHJcblx0XHRcdFx0cmVzID0gW09XZWJUTmV0LlNUQVRFX1NJR05fVVBfUFJPQ0VTUyxcclxuXHRcdFx0XHRcdGRhdGFbXCJfaW5mb19zaWduX3VwXCJdXTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHQvLyBubyB1c2VyXHJcblx0XHRcdFx0cmVzID0gW09XZWJUTmV0LlNUQVRFX05PX1VTRVJdO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRtLnRyaWdnZXIoT1dlYlROZXQuRVZUX1RORVRfUkVBRFksIHJlcyk7XHJcblx0XHR9LCBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdGxldCBzdGF0ZSA9IE9XZWJUTmV0LlNUQVRFX1VOS05PV047XHJcblxyXG5cdFx0XHRpZiAobS5hcHBfY29udGV4dC51c2VyVmVyaWZpZWQoKSkge1xyXG5cdFx0XHRcdHN0YXRlID0gT1dlYlROZXQuU1RBVEVfT0ZGTElORV9VU0VSO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRtLnRyaWdnZXIoT1dlYlROZXQuRVZUX1RORVRfUkVBRFksIFtzdGF0ZV0pO1xyXG5cdFx0fSk7XHJcblxyXG5cdFx0cmV0dXJuIG07XHJcblx0fVxyXG59OyJdfQ==
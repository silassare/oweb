import OWebEvent from '../OWebEvent';
import Utils from '../utils/Utils';
export default class OWebTNet extends OWebEvent {
    constructor(app_context) {
        super();
        this.app_context = app_context;
    }
    check() {
        let m = this, url = this.app_context.url.get('OZ_SERVER_TNET_SERVICE');
        this.app_context.request('GET', url, null, function (response) {
            let data = response['data'], res;
            if (data['_current_user']) {
                // user is verified
                res = [OWebTNet.STATE_VERIFIED_USER, data['_current_user']];
                m.app_context.user.setCurrentUser(data['_current_user']);
            }
            else if (data['_info_sign_up']) {
                // user is in registration process
                res = [
                    OWebTNet.STATE_SIGN_UP_PROCESS,
                    data['_info_sign_up'],
                ];
            }
            else {
                // no user
                res = [OWebTNet.STATE_NO_USER];
            }
            m.trigger(OWebTNet.EVT_TNET_READY, res);
        }, function () {
            let state = OWebTNet.STATE_UNKNOWN;
            if (m.app_context.userVerified()) {
                state = OWebTNet.STATE_OFFLINE_USER;
            }
            m.trigger(OWebTNet.EVT_TNET_READY, [state]);
        });
        return m;
    }
}
OWebTNet.SELF = Utils.id();
OWebTNet.EVT_TNET_READY = Utils.id();
OWebTNet.STATE_UNKNOWN = Utils.id();
OWebTNet.STATE_NO_USER = Utils.id();
OWebTNet.STATE_OFFLINE_USER = Utils.id();
OWebTNet.STATE_VERIFIED_USER = Utils.id();
OWebTNet.STATE_SIGN_UP_PROCESS = Utils.id();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT1dlYlROZXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvcGx1Z2lucy9PV2ViVE5ldC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLFNBQVMsTUFBTSxjQUFjLENBQUM7QUFDckMsT0FBTyxLQUFLLE1BQU0sZ0JBQWdCLENBQUM7QUFFbkMsTUFBTSxDQUFDLE9BQU8sT0FBTyxRQUFTLFNBQVEsU0FBUztJQVU5QyxZQUE2QixXQUFvQjtRQUNoRCxLQUFLLEVBQUUsQ0FBQztRQURvQixnQkFBVyxHQUFYLFdBQVcsQ0FBUztJQUVqRCxDQUFDO0lBRUQsS0FBSztRQUNKLElBQUksQ0FBQyxHQUFHLElBQUksRUFDWCxHQUFHLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLHdCQUF3QixDQUFDLENBQUM7UUFFMUQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQ3ZCLEtBQUssRUFDTCxHQUFHLEVBQ0gsSUFBSSxFQUNKLFVBQVMsUUFBYTtZQUNyQixJQUFJLElBQUksR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLEVBQzFCLEdBQUcsQ0FBQztZQUVMLElBQUksSUFBSSxDQUFDLGVBQWUsQ0FBQyxFQUFFO2dCQUMxQixtQkFBbUI7Z0JBQ25CLEdBQUcsR0FBRyxDQUFDLFFBQVEsQ0FBQyxtQkFBbUIsRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQztnQkFDNUQsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO2FBQ3pEO2lCQUFNLElBQUksSUFBSSxDQUFDLGVBQWUsQ0FBQyxFQUFFO2dCQUNqQyxrQ0FBa0M7Z0JBQ2xDLEdBQUcsR0FBRztvQkFDTCxRQUFRLENBQUMscUJBQXFCO29CQUM5QixJQUFJLENBQUMsZUFBZSxDQUFDO2lCQUNyQixDQUFDO2FBQ0Y7aUJBQU07Z0JBQ04sVUFBVTtnQkFDVixHQUFHLEdBQUcsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLENBQUM7YUFDL0I7WUFFRCxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxjQUFjLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDekMsQ0FBQyxFQUNEO1lBQ0MsSUFBSSxLQUFLLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQztZQUVuQyxJQUFJLENBQUMsQ0FBQyxXQUFXLENBQUMsWUFBWSxFQUFFLEVBQUU7Z0JBQ2pDLEtBQUssR0FBRyxRQUFRLENBQUMsa0JBQWtCLENBQUM7YUFDcEM7WUFFRCxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxjQUFjLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQzdDLENBQUMsQ0FDRCxDQUFDO1FBRUYsT0FBTyxDQUFDLENBQUM7SUFDVixDQUFDOztBQXREZSxhQUFJLEdBQUcsS0FBSyxDQUFDLEVBQUUsRUFBRSxDQUFDO0FBQ2xCLHVCQUFjLEdBQUcsS0FBSyxDQUFDLEVBQUUsRUFBRSxDQUFDO0FBRTVCLHNCQUFhLEdBQUcsS0FBSyxDQUFDLEVBQUUsRUFBRSxDQUFDO0FBQzNCLHNCQUFhLEdBQUcsS0FBSyxDQUFDLEVBQUUsRUFBRSxDQUFDO0FBQzNCLDJCQUFrQixHQUFHLEtBQUssQ0FBQyxFQUFFLEVBQUUsQ0FBQztBQUNoQyw0QkFBbUIsR0FBRyxLQUFLLENBQUMsRUFBRSxFQUFFLENBQUM7QUFDakMsOEJBQXFCLEdBQUcsS0FBSyxDQUFDLEVBQUUsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE9XZWJBcHAgZnJvbSAnLi4vT1dlYkFwcCc7XHJcbmltcG9ydCBPV2ViRXZlbnQgZnJvbSAnLi4vT1dlYkV2ZW50JztcclxuaW1wb3J0IFV0aWxzIGZyb20gJy4uL3V0aWxzL1V0aWxzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE9XZWJUTmV0IGV4dGVuZHMgT1dlYkV2ZW50IHtcclxuXHRzdGF0aWMgcmVhZG9ubHkgU0VMRiA9IFV0aWxzLmlkKCk7XHJcblx0c3RhdGljIHJlYWRvbmx5IEVWVF9UTkVUX1JFQURZID0gVXRpbHMuaWQoKTtcclxuXHJcblx0c3RhdGljIHJlYWRvbmx5IFNUQVRFX1VOS05PV04gPSBVdGlscy5pZCgpO1xyXG5cdHN0YXRpYyByZWFkb25seSBTVEFURV9OT19VU0VSID0gVXRpbHMuaWQoKTtcclxuXHRzdGF0aWMgcmVhZG9ubHkgU1RBVEVfT0ZGTElORV9VU0VSID0gVXRpbHMuaWQoKTtcclxuXHRzdGF0aWMgcmVhZG9ubHkgU1RBVEVfVkVSSUZJRURfVVNFUiA9IFV0aWxzLmlkKCk7XHJcblx0c3RhdGljIHJlYWRvbmx5IFNUQVRFX1NJR05fVVBfUFJPQ0VTUyA9IFV0aWxzLmlkKCk7XHJcblxyXG5cdGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgYXBwX2NvbnRleHQ6IE9XZWJBcHApIHtcclxuXHRcdHN1cGVyKCk7XHJcblx0fVxyXG5cclxuXHRjaGVjaygpIHtcclxuXHRcdGxldCBtID0gdGhpcyxcclxuXHRcdFx0dXJsID0gdGhpcy5hcHBfY29udGV4dC51cmwuZ2V0KCdPWl9TRVJWRVJfVE5FVF9TRVJWSUNFJyk7XHJcblxyXG5cdFx0dGhpcy5hcHBfY29udGV4dC5yZXF1ZXN0KFxyXG5cdFx0XHQnR0VUJyxcclxuXHRcdFx0dXJsLFxyXG5cdFx0XHRudWxsLFxyXG5cdFx0XHRmdW5jdGlvbihyZXNwb25zZTogYW55KSB7XHJcblx0XHRcdFx0bGV0IGRhdGEgPSByZXNwb25zZVsnZGF0YSddLFxyXG5cdFx0XHRcdFx0cmVzO1xyXG5cclxuXHRcdFx0XHRpZiAoZGF0YVsnX2N1cnJlbnRfdXNlciddKSB7XHJcblx0XHRcdFx0XHQvLyB1c2VyIGlzIHZlcmlmaWVkXHJcblx0XHRcdFx0XHRyZXMgPSBbT1dlYlROZXQuU1RBVEVfVkVSSUZJRURfVVNFUiwgZGF0YVsnX2N1cnJlbnRfdXNlciddXTtcclxuXHRcdFx0XHRcdG0uYXBwX2NvbnRleHQudXNlci5zZXRDdXJyZW50VXNlcihkYXRhWydfY3VycmVudF91c2VyJ10pO1xyXG5cdFx0XHRcdH0gZWxzZSBpZiAoZGF0YVsnX2luZm9fc2lnbl91cCddKSB7XHJcblx0XHRcdFx0XHQvLyB1c2VyIGlzIGluIHJlZ2lzdHJhdGlvbiBwcm9jZXNzXHJcblx0XHRcdFx0XHRyZXMgPSBbXHJcblx0XHRcdFx0XHRcdE9XZWJUTmV0LlNUQVRFX1NJR05fVVBfUFJPQ0VTUyxcclxuXHRcdFx0XHRcdFx0ZGF0YVsnX2luZm9fc2lnbl91cCddLFxyXG5cdFx0XHRcdFx0XTtcclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0Ly8gbm8gdXNlclxyXG5cdFx0XHRcdFx0cmVzID0gW09XZWJUTmV0LlNUQVRFX05PX1VTRVJdO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0bS50cmlnZ2VyKE9XZWJUTmV0LkVWVF9UTkVUX1JFQURZLCByZXMpO1xyXG5cdFx0XHR9LFxyXG5cdFx0XHRmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRsZXQgc3RhdGUgPSBPV2ViVE5ldC5TVEFURV9VTktOT1dOO1xyXG5cclxuXHRcdFx0XHRpZiAobS5hcHBfY29udGV4dC51c2VyVmVyaWZpZWQoKSkge1xyXG5cdFx0XHRcdFx0c3RhdGUgPSBPV2ViVE5ldC5TVEFURV9PRkZMSU5FX1VTRVI7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRtLnRyaWdnZXIoT1dlYlROZXQuRVZUX1RORVRfUkVBRFksIFtzdGF0ZV0pO1xyXG5cdFx0XHR9XHJcblx0XHQpO1xyXG5cclxuXHRcdHJldHVybiBtO1xyXG5cdH1cclxufVxyXG4iXX0=
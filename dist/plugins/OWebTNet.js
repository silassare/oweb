import OWebEvent from '../OWebEvent';
import { id } from '../utils';
export default class OWebTNet extends OWebEvent {
    constructor(_appContext) {
        super();
        this._appContext = _appContext;
    }
    check() {
        const m = this, url = m._appContext.url.get('OZ_SERVER_TNET_SERVICE'), net = m._appContext.oz.request(url, {
            method: 'GET',
        });
        return net.onGoodNews(function (response) {
            const data = response.json.data;
            let res;
            if (data._current_user) {
                // user is verified
                res = [OWebTNet.STATE_VERIFIED_USER, data._current_user];
                m._appContext.user.setCurrentUser(data._current_user);
            }
            else if (data._info_sign_up) {
                // user is in registration process
                res = [OWebTNet.STATE_SIGN_UP_PROCESS, data._info_sign_up];
            }
            else {
                // no user
                res = [OWebTNet.STATE_NO_USER];
            }
            m.trigger(OWebTNet.EVT_TNET_READY, res);
        })
            .onFail(function () {
            let state = OWebTNet.STATE_UNKNOWN;
            if (m._appContext.user.userVerified()) {
                state = OWebTNet.STATE_OFFLINE_USER;
            }
            m.trigger(OWebTNet.EVT_TNET_READY, [state]);
        })
            .send();
    }
}
OWebTNet.SELF = id();
OWebTNet.EVT_TNET_READY = id();
OWebTNet.STATE_UNKNOWN = id();
OWebTNet.STATE_NO_USER = id();
OWebTNet.STATE_OFFLINE_USER = id();
OWebTNet.STATE_VERIFIED_USER = id();
OWebTNet.STATE_SIGN_UP_PROCESS = id();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT1dlYlROZXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvcGx1Z2lucy9PV2ViVE5ldC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLFNBQVMsTUFBTSxjQUFjLENBQUM7QUFDckMsT0FBTyxFQUFDLEVBQUUsRUFBQyxNQUFNLFVBQVUsQ0FBQztBQVM1QixNQUFNLENBQUMsT0FBTyxPQUFPLFFBQWdGLFNBQVEsU0FBUztJQVVySCxZQUE2QixXQUFnQjtRQUM1QyxLQUFLLEVBQUUsQ0FBQztRQURvQixnQkFBVyxHQUFYLFdBQVcsQ0FBSztJQUU3QyxDQUFDO0lBRUQsS0FBSztRQUNKLE1BQU0sQ0FBQyxHQUFLLElBQUksRUFDYixHQUFHLEdBQUcsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLHdCQUF3QixDQUFDLEVBQ3JELEdBQUcsR0FBRyxDQUFDLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQW9DLEdBQUcsRUFBRTtZQUN0RSxNQUFNLEVBQUUsS0FBSztTQUNiLENBQUMsQ0FBQztRQUVOLE9BQU8sR0FBRyxDQUFDLFVBQVUsQ0FBQyxVQUFVLFFBQVE7WUFDdkMsTUFBTSxJQUFJLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7WUFDaEMsSUFBSSxHQUFHLENBQUM7WUFFUixJQUFJLElBQUksQ0FBQyxhQUFhLEVBQUU7Z0JBQ3ZCLG1CQUFtQjtnQkFDbkIsR0FBRyxHQUFHLENBQUMsUUFBUSxDQUFDLG1CQUFtQixFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztnQkFDekQsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQzthQUN0RDtpQkFBTSxJQUFJLElBQUksQ0FBQyxhQUFhLEVBQUU7Z0JBQzlCLGtDQUFrQztnQkFDbEMsR0FBRyxHQUFHLENBQUMsUUFBUSxDQUFDLHFCQUFxQixFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQzthQUMzRDtpQkFBTTtnQkFDTixVQUFVO2dCQUNWLEdBQUcsR0FBRyxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsQ0FBQzthQUMvQjtZQUVELENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLGNBQWMsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUN6QyxDQUFDLENBQUM7YUFDRyxNQUFNLENBQUM7WUFDUCxJQUFJLEtBQUssR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDO1lBRW5DLElBQUksQ0FBQyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLEVBQUU7Z0JBQ3RDLEtBQUssR0FBRyxRQUFRLENBQUMsa0JBQWtCLENBQUM7YUFDcEM7WUFFRCxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxjQUFjLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQzdDLENBQUMsQ0FBQzthQUNELElBQUksRUFBRSxDQUFDO0lBQ2IsQ0FBQzs7QUFoRGUsYUFBSSxHQUFhLEVBQUUsRUFBRSxDQUFDO0FBQ3RCLHVCQUFjLEdBQUcsRUFBRSxFQUFFLENBQUM7QUFFdEIsc0JBQWEsR0FBVyxFQUFFLEVBQUUsQ0FBQztBQUM3QixzQkFBYSxHQUFXLEVBQUUsRUFBRSxDQUFDO0FBQzdCLDJCQUFrQixHQUFNLEVBQUUsRUFBRSxDQUFDO0FBQzdCLDRCQUFtQixHQUFLLEVBQUUsRUFBRSxDQUFDO0FBQzdCLDhCQUFxQixHQUFHLEVBQUUsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE9XZWJBcHAgZnJvbSAnLi4vT1dlYkFwcCc7XG5pbXBvcnQgT1dlYkV2ZW50IGZyb20gJy4uL09XZWJFdmVudCc7XG5pbXBvcnQge2lkfSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQge09BcGlKU09OfSBmcm9tICcuLi9vem9uZSc7XG5cbmV4cG9ydCB0eXBlIE9UTmV0UmVzcG9uc2VEYXRhPFVzZXI+ID0ge1xuXHRvazogYm9vbGVhbjtcblx0X2N1cnJlbnRfdXNlcj86IFVzZXI7XG5cdF9pbmZvX3NpZ25fdXA/OiBhbnk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBPV2ViVE5ldDxBcHAgZXh0ZW5kcyBPV2ViQXBwLCBVc2VyID0gUmV0dXJuVHlwZTxBcHBbJ3VzZXInXVsnZ2V0Q3VycmVudFVzZXInXT4+IGV4dGVuZHMgT1dlYkV2ZW50IHtcblx0c3RhdGljIHJlYWRvbmx5IFNFTEYgICAgICAgICAgID0gaWQoKTtcblx0c3RhdGljIHJlYWRvbmx5IEVWVF9UTkVUX1JFQURZID0gaWQoKTtcblxuXHRzdGF0aWMgcmVhZG9ubHkgU1RBVEVfVU5LTk9XTiAgICAgICAgID0gaWQoKTtcblx0c3RhdGljIHJlYWRvbmx5IFNUQVRFX05PX1VTRVIgICAgICAgICA9IGlkKCk7XG5cdHN0YXRpYyByZWFkb25seSBTVEFURV9PRkZMSU5FX1VTRVIgICAgPSBpZCgpO1xuXHRzdGF0aWMgcmVhZG9ubHkgU1RBVEVfVkVSSUZJRURfVVNFUiAgID0gaWQoKTtcblx0c3RhdGljIHJlYWRvbmx5IFNUQVRFX1NJR05fVVBfUFJPQ0VTUyA9IGlkKCk7XG5cblx0Y29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBfYXBwQ29udGV4dDogQXBwKSB7XG5cdFx0c3VwZXIoKTtcblx0fVxuXG5cdGNoZWNrKCkge1xuXHRcdGNvbnN0IG0gICA9IHRoaXMsXG5cdFx0XHQgIHVybCA9IG0uX2FwcENvbnRleHQudXJsLmdldCgnT1pfU0VSVkVSX1RORVRfU0VSVklDRScpLFxuXHRcdFx0ICBuZXQgPSBtLl9hcHBDb250ZXh0Lm96LnJlcXVlc3Q8T0FwaUpTT048T1ROZXRSZXNwb25zZURhdGE8VXNlcj4+Pih1cmwsIHtcblx0XHRcdFx0ICBtZXRob2Q6ICdHRVQnLFxuXHRcdFx0ICB9KTtcblxuXHRcdHJldHVybiBuZXQub25Hb29kTmV3cyhmdW5jdGlvbiAocmVzcG9uc2UpIHtcblx0XHRcdGNvbnN0IGRhdGEgPSByZXNwb25zZS5qc29uLmRhdGE7XG5cdFx0XHRsZXQgcmVzO1xuXG5cdFx0XHRpZiAoZGF0YS5fY3VycmVudF91c2VyKSB7XG5cdFx0XHRcdC8vIHVzZXIgaXMgdmVyaWZpZWRcblx0XHRcdFx0cmVzID0gW09XZWJUTmV0LlNUQVRFX1ZFUklGSUVEX1VTRVIsIGRhdGEuX2N1cnJlbnRfdXNlcl07XG5cdFx0XHRcdG0uX2FwcENvbnRleHQudXNlci5zZXRDdXJyZW50VXNlcihkYXRhLl9jdXJyZW50X3VzZXIpO1xuXHRcdFx0fSBlbHNlIGlmIChkYXRhLl9pbmZvX3NpZ25fdXApIHtcblx0XHRcdFx0Ly8gdXNlciBpcyBpbiByZWdpc3RyYXRpb24gcHJvY2Vzc1xuXHRcdFx0XHRyZXMgPSBbT1dlYlROZXQuU1RBVEVfU0lHTl9VUF9QUk9DRVNTLCBkYXRhLl9pbmZvX3NpZ25fdXBdO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Ly8gbm8gdXNlclxuXHRcdFx0XHRyZXMgPSBbT1dlYlROZXQuU1RBVEVfTk9fVVNFUl07XG5cdFx0XHR9XG5cblx0XHRcdG0udHJpZ2dlcihPV2ViVE5ldC5FVlRfVE5FVF9SRUFEWSwgcmVzKTtcblx0XHR9KVxuXHRcdFx0XHQgIC5vbkZhaWwoZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRcdCAgbGV0IHN0YXRlID0gT1dlYlROZXQuU1RBVEVfVU5LTk9XTjtcblxuXHRcdFx0XHRcdCAgaWYgKG0uX2FwcENvbnRleHQudXNlci51c2VyVmVyaWZpZWQoKSkge1xuXHRcdFx0XHRcdFx0ICBzdGF0ZSA9IE9XZWJUTmV0LlNUQVRFX09GRkxJTkVfVVNFUjtcblx0XHRcdFx0XHQgIH1cblxuXHRcdFx0XHRcdCAgbS50cmlnZ2VyKE9XZWJUTmV0LkVWVF9UTkVUX1JFQURZLCBbc3RhdGVdKTtcblx0XHRcdFx0ICB9KVxuXHRcdFx0XHQgIC5zZW5kKCk7XG5cdH1cbn0iXX0=
import OWebEvent from '../OWebEvent';
import { id } from '../utils';
export default class OWebSignUp extends OWebEvent {
    constructor(_appContext) {
        super();
        this._appContext = _appContext;
    }
    stepStart(data) {
        return this._sendForm({
            phone: data.phone,
            cc2: data.cc2,
            step: OWebSignUp.SIGN_UP_STEP_START,
        }, OWebSignUp.SIGN_UP_STEP_VALIDATE);
    }
    stepValidate(data) {
        return this._sendForm({
            step: OWebSignUp.SIGN_UP_STEP_VALIDATE,
            code: data.code,
        }, OWebSignUp.SIGN_UP_STEP_END);
    }
    stepEnd(data) {
        const form = {
            step: OWebSignUp.SIGN_UP_STEP_END,
            ...data,
        };
        if (!form.email) {
            delete form.email;
        }
        return this._sendForm(form);
    }
    onNextStep(handler) {
        return this.on(OWebSignUp.EVT_SIGN_UP_NEXT_STEP, handler);
    }
    onSignUpFail(handler) {
        return this.on(OWebSignUp.EVT_SIGN_UP_FAIL, handler);
    }
    onSignUpSuccess(handler) {
        return this.on(OWebSignUp.EVT_SIGN_UP_SUCCESS, handler);
    }
    _sendForm(data, nextStep) {
        const m = this, url = m._appContext.url.get('OZ_SERVER_SIGNUP_SERVICE'), net = m._appContext.oz.request(url, {
            method: 'POST',
            body: data,
        });
        return net
            .onGoodNews(function (response) {
            if (nextStep) {
                m.trigger(OWebSignUp.EVT_SIGN_UP_NEXT_STEP, [
                    response,
                    nextStep,
                ]);
            }
            else {
                m.trigger(OWebSignUp.EVT_SIGN_UP_SUCCESS, [response]);
            }
        })
            .onFail(function (err) {
            m.trigger(OWebSignUp.EVT_SIGN_UP_FAIL, [err]);
        })
            .send();
    }
}
OWebSignUp.SELF = id();
OWebSignUp.EVT_SIGN_UP_NEXT_STEP = id();
OWebSignUp.EVT_SIGN_UP_SUCCESS = id();
OWebSignUp.EVT_SIGN_UP_FAIL = id();
OWebSignUp.SIGN_UP_STEP_START = 1;
OWebSignUp.SIGN_UP_STEP_VALIDATE = 2;
OWebSignUp.SIGN_UP_STEP_END = 3;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT1dlYlNpZ25VcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wbHVnaW5zL09XZWJTaWduVXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxTQUFTLE1BQU0sY0FBYyxDQUFDO0FBQ3JDLE9BQU8sRUFBQyxFQUFFLEVBQUMsTUFBTSxVQUFVLENBQUM7QUFJNUIsTUFBTSxDQUFDLE9BQU8sT0FBTyxVQUFXLFNBQVEsU0FBUztJQVVoRCxZQUE2QixXQUFvQjtRQUNoRCxLQUFLLEVBQUUsQ0FBQztRQURvQixnQkFBVyxHQUFYLFdBQVcsQ0FBUztJQUVqRCxDQUFDO0lBRUQsU0FBUyxDQUFDLElBQW9DO1FBQzdDLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FDcEI7WUFDQyxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7WUFDakIsR0FBRyxFQUFJLElBQUksQ0FBQyxHQUFHO1lBQ2YsSUFBSSxFQUFHLFVBQVUsQ0FBQyxrQkFBa0I7U0FDcEMsRUFDRCxVQUFVLENBQUMscUJBQXFCLENBQ2hDLENBQUM7SUFDSCxDQUFDO0lBRUQsWUFBWSxDQUFDLElBQXNCO1FBQ2xDLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FDcEI7WUFDQyxJQUFJLEVBQUUsVUFBVSxDQUFDLHFCQUFxQjtZQUN0QyxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUk7U0FDZixFQUNELFVBQVUsQ0FBQyxnQkFBZ0IsQ0FDM0IsQ0FBQztJQUNILENBQUM7SUFFRCxPQUFPLENBQUMsSUFPUDtRQUNBLE1BQU0sSUFBSSxHQUFHO1lBQ1osSUFBSSxFQUFFLFVBQVUsQ0FBQyxnQkFBZ0I7WUFDakMsR0FBRyxJQUFJO1NBQ1AsQ0FBQztRQUVGLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ2hCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztTQUNsQjtRQUVELE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM3QixDQUFDO0lBRUQsVUFBVSxDQUNULE9BSVM7UUFFVCxPQUFPLElBQUksQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLHFCQUFxQixFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQzNELENBQUM7SUFFRCxZQUFZLENBQ1gsT0FBNkM7UUFFN0MsT0FBTyxJQUFJLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxnQkFBZ0IsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBRUQsZUFBZSxDQUNkLE9BQW9FO1FBRXBFLE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUMsbUJBQW1CLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDekQsQ0FBQztJQUVPLFNBQVMsQ0FBQyxJQUF1QixFQUFFLFFBQWlCO1FBQzNELE1BQU0sQ0FBQyxHQUFLLElBQUksRUFDYixHQUFHLEdBQUcsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLDBCQUEwQixDQUFDLEVBQ3ZELEdBQUcsR0FBRyxDQUFDLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQWdCLEdBQUcsRUFBRTtZQUNsRCxNQUFNLEVBQUUsTUFBTTtZQUNkLElBQUksRUFBSSxJQUFJO1NBQ1osQ0FBQyxDQUFDO1FBRU4sT0FBTyxHQUFHO2FBQ1IsVUFBVSxDQUFDLFVBQVUsUUFBUTtZQUM3QixJQUFJLFFBQVEsRUFBRTtnQkFDYixDQUFDLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxxQkFBcUIsRUFBRTtvQkFDM0MsUUFBUTtvQkFDUixRQUFRO2lCQUNSLENBQUMsQ0FBQzthQUNIO2lCQUFNO2dCQUNOLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLG1CQUFtQixFQUFFLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQzthQUN0RDtRQUNGLENBQUMsQ0FBQzthQUNELE1BQU0sQ0FBQyxVQUFVLEdBQUc7WUFDcEIsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQy9DLENBQUMsQ0FBQzthQUNELElBQUksRUFBRSxDQUFDO0lBQ1YsQ0FBQzs7QUFuR2UsZUFBSSxHQUFvQixFQUFFLEVBQUUsQ0FBQztBQUM3QixnQ0FBcUIsR0FBRyxFQUFFLEVBQUUsQ0FBQztBQUM3Qiw4QkFBbUIsR0FBSyxFQUFFLEVBQUUsQ0FBQztBQUM3QiwyQkFBZ0IsR0FBUSxFQUFFLEVBQUUsQ0FBQztBQUU3Qiw2QkFBa0IsR0FBTSxDQUFDLENBQUM7QUFDMUIsZ0NBQXFCLEdBQUcsQ0FBQyxDQUFDO0FBQzFCLDJCQUFnQixHQUFRLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBPV2ViQXBwIGZyb20gJy4uL09XZWJBcHAnO1xuaW1wb3J0IE9XZWJFdmVudCBmcm9tICcuLi9PV2ViRXZlbnQnO1xuaW1wb3J0IHtpZH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IHtPTmV0RXJyb3IsIE9OZXRSZXNwb25zZX0gZnJvbSAnLi4vT1dlYk5ldCc7XG5pbXBvcnQge09BcGlKU09OfSBmcm9tICcuLi9vem9uZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE9XZWJTaWduVXAgZXh0ZW5kcyBPV2ViRXZlbnQge1xuXHRzdGF0aWMgcmVhZG9ubHkgU0VMRiAgICAgICAgICAgICAgICAgID0gaWQoKTtcblx0c3RhdGljIHJlYWRvbmx5IEVWVF9TSUdOX1VQX05FWFRfU1RFUCA9IGlkKCk7XG5cdHN0YXRpYyByZWFkb25seSBFVlRfU0lHTl9VUF9TVUNDRVNTICAgPSBpZCgpO1xuXHRzdGF0aWMgcmVhZG9ubHkgRVZUX1NJR05fVVBfRkFJTCAgICAgID0gaWQoKTtcblxuXHRzdGF0aWMgcmVhZG9ubHkgU0lHTl9VUF9TVEVQX1NUQVJUICAgID0gMTtcblx0c3RhdGljIHJlYWRvbmx5IFNJR05fVVBfU1RFUF9WQUxJREFURSA9IDI7XG5cdHN0YXRpYyByZWFkb25seSBTSUdOX1VQX1NURVBfRU5EICAgICAgPSAzO1xuXG5cdGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgX2FwcENvbnRleHQ6IE9XZWJBcHApIHtcblx0XHRzdXBlcigpO1xuXHR9XG5cblx0c3RlcFN0YXJ0KGRhdGE6IHsgcGhvbmU6IHN0cmluZzsgY2MyOiBzdHJpbmcgfSkge1xuXHRcdHJldHVybiB0aGlzLl9zZW5kRm9ybShcblx0XHRcdHtcblx0XHRcdFx0cGhvbmU6IGRhdGEucGhvbmUsXG5cdFx0XHRcdGNjMiAgOiBkYXRhLmNjMixcblx0XHRcdFx0c3RlcCA6IE9XZWJTaWduVXAuU0lHTl9VUF9TVEVQX1NUQVJULFxuXHRcdFx0fSxcblx0XHRcdE9XZWJTaWduVXAuU0lHTl9VUF9TVEVQX1ZBTElEQVRFLFxuXHRcdCk7XG5cdH1cblxuXHRzdGVwVmFsaWRhdGUoZGF0YTogeyBjb2RlOiBzdHJpbmcgfSkge1xuXHRcdHJldHVybiB0aGlzLl9zZW5kRm9ybShcblx0XHRcdHtcblx0XHRcdFx0c3RlcDogT1dlYlNpZ25VcC5TSUdOX1VQX1NURVBfVkFMSURBVEUsXG5cdFx0XHRcdGNvZGU6IGRhdGEuY29kZSxcblx0XHRcdH0sXG5cdFx0XHRPV2ViU2lnblVwLlNJR05fVVBfU1RFUF9FTkQsXG5cdFx0KTtcblx0fVxuXG5cdHN0ZXBFbmQoZGF0YToge1xuXHRcdHVuYW1lOiBzdHJpbmc7XG5cdFx0cGFzczogc3RyaW5nO1xuXHRcdHZwYXNzOiBzdHJpbmc7XG5cdFx0YmlydGhfZGF0ZTogc3RyaW5nO1xuXHRcdGdlbmRlcjogc3RyaW5nO1xuXHRcdGVtYWlsPzogc3RyaW5nO1xuXHR9KSB7XG5cdFx0Y29uc3QgZm9ybSA9IHtcblx0XHRcdHN0ZXA6IE9XZWJTaWduVXAuU0lHTl9VUF9TVEVQX0VORCxcblx0XHRcdC4uLmRhdGEsXG5cdFx0fTtcblxuXHRcdGlmICghZm9ybS5lbWFpbCkge1xuXHRcdFx0ZGVsZXRlIGZvcm0uZW1haWw7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMuX3NlbmRGb3JtKGZvcm0pO1xuXHR9XG5cblx0b25OZXh0U3RlcChcblx0XHRoYW5kbGVyOiAoXG5cdFx0XHR0aGlzOiB0aGlzLFxuXHRcdFx0cmVzcG9uc2U6IE9OZXRSZXNwb25zZTxPQXBpSlNPTjxhbnk+Pixcblx0XHRcdHN0ZXA6IG51bWJlcixcblx0XHQpID0+IHZvaWQsXG5cdCk6IHRoaXMge1xuXHRcdHJldHVybiB0aGlzLm9uKE9XZWJTaWduVXAuRVZUX1NJR05fVVBfTkVYVF9TVEVQLCBoYW5kbGVyKTtcblx0fVxuXG5cdG9uU2lnblVwRmFpbChcblx0XHRoYW5kbGVyOiAodGhpczogdGhpcywgZXJyOiBPTmV0RXJyb3IpID0+IHZvaWQsXG5cdCk6IHRoaXMge1xuXHRcdHJldHVybiB0aGlzLm9uKE9XZWJTaWduVXAuRVZUX1NJR05fVVBfRkFJTCwgaGFuZGxlcik7XG5cdH1cblxuXHRvblNpZ25VcFN1Y2Nlc3MoXG5cdFx0aGFuZGxlcjogKHRoaXM6IHRoaXMsIHJlc3BvbnNlOiBPTmV0UmVzcG9uc2U8T0FwaUpTT048YW55Pj4pID0+IHZvaWQsXG5cdCk6IHRoaXMge1xuXHRcdHJldHVybiB0aGlzLm9uKE9XZWJTaWduVXAuRVZUX1NJR05fVVBfU1VDQ0VTUywgaGFuZGxlcik7XG5cdH1cblxuXHRwcml2YXRlIF9zZW5kRm9ybShkYXRhOiBGb3JtRGF0YSB8IG9iamVjdCwgbmV4dFN0ZXA/OiBudW1iZXIpIHtcblx0XHRjb25zdCBtICAgPSB0aGlzLFxuXHRcdFx0ICB1cmwgPSBtLl9hcHBDb250ZXh0LnVybC5nZXQoJ09aX1NFUlZFUl9TSUdOVVBfU0VSVklDRScpLFxuXHRcdFx0ICBuZXQgPSBtLl9hcHBDb250ZXh0Lm96LnJlcXVlc3Q8T0FwaUpTT048YW55Pj4odXJsLCB7XG5cdFx0XHRcdCAgbWV0aG9kOiAnUE9TVCcsXG5cdFx0XHRcdCAgYm9keSAgOiBkYXRhLFxuXHRcdFx0ICB9KTtcblxuXHRcdHJldHVybiBuZXRcblx0XHRcdC5vbkdvb2ROZXdzKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuXHRcdFx0XHRpZiAobmV4dFN0ZXApIHtcblx0XHRcdFx0XHRtLnRyaWdnZXIoT1dlYlNpZ25VcC5FVlRfU0lHTl9VUF9ORVhUX1NURVAsIFtcblx0XHRcdFx0XHRcdHJlc3BvbnNlLFxuXHRcdFx0XHRcdFx0bmV4dFN0ZXAsXG5cdFx0XHRcdFx0XSk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0bS50cmlnZ2VyKE9XZWJTaWduVXAuRVZUX1NJR05fVVBfU1VDQ0VTUywgW3Jlc3BvbnNlXSk7XG5cdFx0XHRcdH1cblx0XHRcdH0pXG5cdFx0XHQub25GYWlsKGZ1bmN0aW9uIChlcnIpIHtcblx0XHRcdFx0bS50cmlnZ2VyKE9XZWJTaWduVXAuRVZUX1NJR05fVVBfRkFJTCwgW2Vycl0pO1xuXHRcdFx0fSlcblx0XHRcdC5zZW5kKCk7XG5cdH1cbn1cbiJdfQ==
import OWebEvent from "../OWebEvent";
import Utils from "../utils/Utils";
export default class OWebLogin extends OWebEvent {
    constructor(app_context) {
        super();
        this.app_context = app_context;
    }
    loginWithEmail(form) {
        let m = this, ofv = this.app_context.getFormValidator(form, ["email", "pass"]);
        if (ofv.validate()) {
            let data = {
                email: ofv.getField("email"),
                pass: ofv.getField("pass")
            };
            m._tryLogin(data);
        }
    }
    loginWithPhone(form) {
        let m = this, ofv = this.app_context.getFormValidator(form, ["phone", "pass"]);
        if (ofv.validate()) {
            let data = {
                phone: ofv.getField("phone"),
                pass: ofv.getField("pass")
            };
            m._tryLogin(data);
        }
    }
    onError(handler) {
        return this.on(OWebLogin.EVT_LOGIN_ERROR, handler);
    }
    onSuccess(handler) {
        return this.on(OWebLogin.EVT_LOGIN_SUCCESS, handler);
    }
    _tryLogin(data) {
        let m = this, url = this.app_context.url.get("OZ_SERVER_LOGIN_SERVICE");
        this.app_context.request("POST", url, data, function (response) {
            m.trigger(OWebLogin.EVT_LOGIN_SUCCESS, [response]);
        }, function (response) {
            m.trigger(OWebLogin.EVT_LOGIN_ERROR, [response]);
        }, true);
    }
}
OWebLogin.SELF = Utils.id();
OWebLogin.EVT_LOGIN_ERROR = Utils.id();
OWebLogin.EVT_LOGIN_SUCCESS = Utils.id();
;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT1dlYkxvZ2luLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3BsdWdpbnMvT1dlYkxvZ2luLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sU0FBUyxNQUFNLGNBQWMsQ0FBQztBQUNyQyxPQUFPLEtBQUssTUFBTSxnQkFBZ0IsQ0FBQztBQUVuQyxNQUFNLENBQUMsT0FBTyxnQkFBaUIsU0FBUSxTQUFTO0lBTS9DLFlBQTZCLFdBQW9CO1FBQ2hELEtBQUssRUFBRSxDQUFDO1FBRG9CLGdCQUFXLEdBQVgsV0FBVyxDQUFTO0lBRWpELENBQUM7SUFFRCxjQUFjLENBQUMsSUFBcUI7UUFDbkMsSUFBSSxDQUFDLEdBQUssSUFBSSxFQUNiLEdBQUcsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLGdCQUFnQixDQUFDLElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBRWxFLElBQUksR0FBRyxDQUFDLFFBQVEsRUFBRSxFQUFFO1lBQ25CLElBQUksSUFBSSxHQUFHO2dCQUNWLEtBQUssRUFBRSxHQUFHLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQztnQkFDNUIsSUFBSSxFQUFHLEdBQUcsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDO2FBQzNCLENBQUM7WUFFRixDQUFDLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ2xCO0lBQ0YsQ0FBQztJQUVELGNBQWMsQ0FBQyxJQUFxQjtRQUNuQyxJQUFJLENBQUMsR0FBSyxJQUFJLEVBQ2IsR0FBRyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxFQUFFLENBQUMsT0FBTyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFFbEUsSUFBSSxHQUFHLENBQUMsUUFBUSxFQUFFLEVBQUU7WUFDbkIsSUFBSSxJQUFJLEdBQUc7Z0JBQ1YsS0FBSyxFQUFFLEdBQUcsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDO2dCQUM1QixJQUFJLEVBQUcsR0FBRyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUM7YUFDM0IsQ0FBQztZQUVGLENBQUMsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDbEI7SUFDRixDQUFDO0lBRUQsT0FBTyxDQUFDLE9BQXFEO1FBQzVELE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsZUFBZSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ3BELENBQUM7SUFFRCxTQUFTLENBQUMsT0FBcUQ7UUFDOUQsT0FBTyxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxpQkFBaUIsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBRUQsU0FBUyxDQUFDLElBQVM7UUFDbEIsSUFBSSxDQUFDLEdBQUssSUFBSSxFQUNiLEdBQUcsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMseUJBQXlCLENBQUMsQ0FBQztRQUUzRCxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxVQUFVLFFBQWE7WUFDbEUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsaUJBQWlCLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1FBQ3BELENBQUMsRUFBRSxVQUFVLFFBQWE7WUFDekIsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsZUFBZSxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztRQUNsRCxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDVixDQUFDOztBQXJEZSxjQUFJLEdBQWdCLEtBQUssQ0FBQyxFQUFFLEVBQUUsQ0FBQztBQUMvQix5QkFBZSxHQUFLLEtBQUssQ0FBQyxFQUFFLEVBQUUsQ0FBQztBQUMvQiwyQkFBaUIsR0FBRyxLQUFLLENBQUMsRUFBRSxFQUFFLENBQUM7QUFvRC9DLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgT1dlYkFwcCBmcm9tIFwiLi4vT1dlYkFwcFwiO1xyXG5pbXBvcnQge2lDb21SZXNwb25zZX0gZnJvbSBcIi4uL09XZWJDb21cIjtcclxuaW1wb3J0IE9XZWJFdmVudCBmcm9tIFwiLi4vT1dlYkV2ZW50XCI7XHJcbmltcG9ydCBVdGlscyBmcm9tIFwiLi4vdXRpbHMvVXRpbHNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE9XZWJMb2dpbiBleHRlbmRzIE9XZWJFdmVudCB7XHJcblxyXG5cdHN0YXRpYyByZWFkb25seSBTRUxGICAgICAgICAgICAgICA9IFV0aWxzLmlkKCk7XHJcblx0c3RhdGljIHJlYWRvbmx5IEVWVF9MT0dJTl9FUlJPUiAgID0gVXRpbHMuaWQoKTtcclxuXHRzdGF0aWMgcmVhZG9ubHkgRVZUX0xPR0lOX1NVQ0NFU1MgPSBVdGlscy5pZCgpO1xyXG5cclxuXHRjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IGFwcF9jb250ZXh0OiBPV2ViQXBwKSB7XHJcblx0XHRzdXBlcigpO1xyXG5cdH1cclxuXHJcblx0bG9naW5XaXRoRW1haWwoZm9ybTogSFRNTEZvcm1FbGVtZW50KSB7XHJcblx0XHRsZXQgbSAgID0gdGhpcyxcclxuXHRcdFx0b2Z2ID0gdGhpcy5hcHBfY29udGV4dC5nZXRGb3JtVmFsaWRhdG9yKGZvcm0sIFtcImVtYWlsXCIsIFwicGFzc1wiXSk7XHJcblxyXG5cdFx0aWYgKG9mdi52YWxpZGF0ZSgpKSB7XHJcblx0XHRcdGxldCBkYXRhID0ge1xyXG5cdFx0XHRcdGVtYWlsOiBvZnYuZ2V0RmllbGQoXCJlbWFpbFwiKSxcclxuXHRcdFx0XHRwYXNzIDogb2Z2LmdldEZpZWxkKFwicGFzc1wiKVxyXG5cdFx0XHR9O1xyXG5cclxuXHRcdFx0bS5fdHJ5TG9naW4oZGF0YSk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRsb2dpbldpdGhQaG9uZShmb3JtOiBIVE1MRm9ybUVsZW1lbnQpIHtcclxuXHRcdGxldCBtICAgPSB0aGlzLFxyXG5cdFx0XHRvZnYgPSB0aGlzLmFwcF9jb250ZXh0LmdldEZvcm1WYWxpZGF0b3IoZm9ybSwgW1wicGhvbmVcIiwgXCJwYXNzXCJdKTtcclxuXHJcblx0XHRpZiAob2Z2LnZhbGlkYXRlKCkpIHtcclxuXHRcdFx0bGV0IGRhdGEgPSB7XHJcblx0XHRcdFx0cGhvbmU6IG9mdi5nZXRGaWVsZChcInBob25lXCIpLFxyXG5cdFx0XHRcdHBhc3MgOiBvZnYuZ2V0RmllbGQoXCJwYXNzXCIpXHJcblx0XHRcdH07XHJcblxyXG5cdFx0XHRtLl90cnlMb2dpbihkYXRhKTtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdG9uRXJyb3IoaGFuZGxlcjogKHRoaXM6IHRoaXMsIHJlc3BvbnNlOiBpQ29tUmVzcG9uc2UpID0+IHZvaWQpOiB0aGlzIHtcclxuXHRcdHJldHVybiB0aGlzLm9uKE9XZWJMb2dpbi5FVlRfTE9HSU5fRVJST1IsIGhhbmRsZXIpO1xyXG5cdH1cclxuXHJcblx0b25TdWNjZXNzKGhhbmRsZXI6ICh0aGlzOiB0aGlzLCByZXNwb25zZTogaUNvbVJlc3BvbnNlKSA9PiB2b2lkKTogdGhpcyB7XHJcblx0XHRyZXR1cm4gdGhpcy5vbihPV2ViTG9naW4uRVZUX0xPR0lOX1NVQ0NFU1MsIGhhbmRsZXIpO1xyXG5cdH1cclxuXHJcblx0X3RyeUxvZ2luKGRhdGE6IGFueSkge1xyXG5cdFx0bGV0IG0gICA9IHRoaXMsXHJcblx0XHRcdHVybCA9IHRoaXMuYXBwX2NvbnRleHQudXJsLmdldChcIk9aX1NFUlZFUl9MT0dJTl9TRVJWSUNFXCIpO1xyXG5cclxuXHRcdHRoaXMuYXBwX2NvbnRleHQucmVxdWVzdChcIlBPU1RcIiwgdXJsLCBkYXRhLCBmdW5jdGlvbiAocmVzcG9uc2U6IGFueSkge1xyXG5cdFx0XHRtLnRyaWdnZXIoT1dlYkxvZ2luLkVWVF9MT0dJTl9TVUNDRVNTLCBbcmVzcG9uc2VdKTtcclxuXHRcdH0sIGZ1bmN0aW9uIChyZXNwb25zZTogYW55KSB7XHJcblx0XHRcdG0udHJpZ2dlcihPV2ViTG9naW4uRVZUX0xPR0lOX0VSUk9SLCBbcmVzcG9uc2VdKTtcclxuXHRcdH0sIHRydWUpO1xyXG5cdH1cclxufTtcclxuIl19
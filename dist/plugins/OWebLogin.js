import OWebEvent from '../OWebEvent';
import { id } from '../utils';
export default class OWebLogin extends OWebEvent {
    _appContext;
    static SELF = id();
    static EVT_LOGIN_FAIL = id();
    static EVT_LOGIN_SUCCESS = id();
    constructor(_appContext) {
        super();
        this._appContext = _appContext;
    }
    loginWithEmail(data) {
        return this._tryLogin({
            email: data.email,
            pass: data.pass,
        });
    }
    loginWithPhone(data) {
        return this._tryLogin({
            phone: data.phone,
            pass: data.pass,
        });
    }
    onLoginFail(handler) {
        return this.on(OWebLogin.EVT_LOGIN_FAIL, handler);
    }
    onLoginSuccess(handler) {
        return this.on(OWebLogin.EVT_LOGIN_SUCCESS, handler);
    }
    _tryLogin(data) {
        const m = this, url = m._appContext.url.get('OZ_SERVER_LOGIN_SERVICE'), net = m._appContext.oz.request(url, {
            method: 'POST',
            body: data,
        });
        return net
            .onGoodNews(function goodNewsHandler(response) {
            m.trigger(OWebLogin.EVT_LOGIN_SUCCESS, [response]);
        })
            .onFail(function failHandler(err) {
            m.trigger(OWebLogin.EVT_LOGIN_FAIL, [err]);
        })
            .send();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT1dlYkxvZ2luLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3BsdWdpbnMvT1dlYkxvZ2luLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sU0FBUyxNQUFNLGNBQWMsQ0FBQztBQUNyQyxPQUFPLEVBQUUsRUFBRSxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBSzlCLE1BQU0sQ0FBQyxPQUFPLE9BQU8sU0FBZ0IsU0FBUSxTQUFTO0lBS3hCO0lBSjdCLE1BQU0sQ0FBVSxJQUFJLEdBQUcsRUFBRSxFQUFFLENBQUM7SUFDNUIsTUFBTSxDQUFVLGNBQWMsR0FBRyxFQUFFLEVBQUUsQ0FBQztJQUN0QyxNQUFNLENBQVUsaUJBQWlCLEdBQUcsRUFBRSxFQUFFLENBQUM7SUFFekMsWUFBNkIsV0FBb0I7UUFDaEQsS0FBSyxFQUFFLENBQUM7UUFEb0IsZ0JBQVcsR0FBWCxXQUFXLENBQVM7SUFFakQsQ0FBQztJQUVELGNBQWMsQ0FBQyxJQUdkO1FBQ0EsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO1lBQ3JCLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSztZQUNqQixJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUk7U0FDZixDQUFDLENBQUM7SUFDSixDQUFDO0lBRUQsY0FBYyxDQUFDLElBR2Q7UUFDQSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7WUFDckIsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLO1lBQ2pCLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSTtTQUNmLENBQUMsQ0FBQztJQUNKLENBQUM7SUFFRCxXQUFXLENBQUMsT0FBNkM7UUFDeEQsT0FBTyxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxjQUFjLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDbkQsQ0FBQztJQUVELGNBQWMsQ0FDYixPQUF5RTtRQUV6RSxPQUFPLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLGlCQUFpQixFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ3RELENBQUM7SUFFTyxTQUFTLENBQUMsSUFBa0I7UUFDbkMsTUFBTSxDQUFDLEdBQUcsSUFBSSxFQUNiLEdBQUcsR0FBRyxDQUFDLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMseUJBQXlCLENBQUMsRUFDdEQsR0FBRyxHQUFHLENBQUMsQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBcUIsR0FBRyxFQUFFO1lBQ3ZELE1BQU0sRUFBRSxNQUFNO1lBQ2QsSUFBSSxFQUFFLElBQUk7U0FDVixDQUFDLENBQUM7UUFFSixPQUFPLEdBQUc7YUFDUixVQUFVLENBQUMsU0FBUyxlQUFlLENBQUMsUUFBUTtZQUM1QyxDQUFDLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFDcEQsQ0FBQyxDQUFDO2FBQ0QsTUFBTSxDQUFDLFNBQVMsV0FBVyxDQUFDLEdBQUc7WUFDL0IsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsY0FBYyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUM1QyxDQUFDLENBQUM7YUFDRCxJQUFJLEVBQUUsQ0FBQztJQUNWLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgT1dlYkFwcCBmcm9tICcuLi9PV2ViQXBwJztcbmltcG9ydCBPV2ViRXZlbnQgZnJvbSAnLi4vT1dlYkV2ZW50JztcbmltcG9ydCB7IGlkIH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IHsgT05ldEVycm9yLCBPTmV0UmVzcG9uc2UgfSBmcm9tICcuLi9PV2ViTmV0JztcbmltcG9ydCB7IE9BcGlSZXNwb25zZSB9IGZyb20gJy4uL296b25lJztcbmltcG9ydCB7IE9XZWJGb3JtRGF0YSB9IGZyb20gJy4uL09XZWJGb3JtJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgT1dlYkxvZ2luPFVzZXI+IGV4dGVuZHMgT1dlYkV2ZW50IHtcblx0c3RhdGljIHJlYWRvbmx5IFNFTEYgPSBpZCgpO1xuXHRzdGF0aWMgcmVhZG9ubHkgRVZUX0xPR0lOX0ZBSUwgPSBpZCgpO1xuXHRzdGF0aWMgcmVhZG9ubHkgRVZUX0xPR0lOX1NVQ0NFU1MgPSBpZCgpO1xuXG5cdGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgX2FwcENvbnRleHQ6IE9XZWJBcHApIHtcblx0XHRzdXBlcigpO1xuXHR9XG5cblx0bG9naW5XaXRoRW1haWwoZGF0YToge1xuXHRcdGVtYWlsOiBzdHJpbmc7XG5cdFx0cGFzczogc3RyaW5nO1xuXHR9KTogUHJvbWlzZTxPTmV0UmVzcG9uc2U8T0FwaVJlc3BvbnNlPFVzZXI+Pj4ge1xuXHRcdHJldHVybiB0aGlzLl90cnlMb2dpbih7XG5cdFx0XHRlbWFpbDogZGF0YS5lbWFpbCxcblx0XHRcdHBhc3M6IGRhdGEucGFzcyxcblx0XHR9KTtcblx0fVxuXG5cdGxvZ2luV2l0aFBob25lKGRhdGE6IHtcblx0XHRwaG9uZTogc3RyaW5nO1xuXHRcdHBhc3M6IHN0cmluZztcblx0fSk6IFByb21pc2U8T05ldFJlc3BvbnNlPE9BcGlSZXNwb25zZTxVc2VyPj4+IHtcblx0XHRyZXR1cm4gdGhpcy5fdHJ5TG9naW4oe1xuXHRcdFx0cGhvbmU6IGRhdGEucGhvbmUsXG5cdFx0XHRwYXNzOiBkYXRhLnBhc3MsXG5cdFx0fSk7XG5cdH1cblxuXHRvbkxvZ2luRmFpbChoYW5kbGVyOiAodGhpczogdGhpcywgZXJyOiBPTmV0RXJyb3IpID0+IHZvaWQpOiB0aGlzIHtcblx0XHRyZXR1cm4gdGhpcy5vbihPV2ViTG9naW4uRVZUX0xPR0lOX0ZBSUwsIGhhbmRsZXIpO1xuXHR9XG5cblx0b25Mb2dpblN1Y2Nlc3MoXG5cdFx0aGFuZGxlcjogKHRoaXM6IHRoaXMsIHJlc3BvbnNlOiBPTmV0UmVzcG9uc2U8T0FwaVJlc3BvbnNlPFVzZXI+PikgPT4gdm9pZFxuXHQpOiB0aGlzIHtcblx0XHRyZXR1cm4gdGhpcy5vbihPV2ViTG9naW4uRVZUX0xPR0lOX1NVQ0NFU1MsIGhhbmRsZXIpO1xuXHR9XG5cblx0cHJpdmF0ZSBfdHJ5TG9naW4oZGF0YTogT1dlYkZvcm1EYXRhKSB7XG5cdFx0Y29uc3QgbSA9IHRoaXMsXG5cdFx0XHR1cmwgPSBtLl9hcHBDb250ZXh0LnVybC5nZXQoJ09aX1NFUlZFUl9MT0dJTl9TRVJWSUNFJyksXG5cdFx0XHRuZXQgPSBtLl9hcHBDb250ZXh0Lm96LnJlcXVlc3Q8T0FwaVJlc3BvbnNlPFVzZXI+Pih1cmwsIHtcblx0XHRcdFx0bWV0aG9kOiAnUE9TVCcsXG5cdFx0XHRcdGJvZHk6IGRhdGEsXG5cdFx0XHR9KTtcblxuXHRcdHJldHVybiBuZXRcblx0XHRcdC5vbkdvb2ROZXdzKGZ1bmN0aW9uIGdvb2ROZXdzSGFuZGxlcihyZXNwb25zZSkge1xuXHRcdFx0XHRtLnRyaWdnZXIoT1dlYkxvZ2luLkVWVF9MT0dJTl9TVUNDRVNTLCBbcmVzcG9uc2VdKTtcblx0XHRcdH0pXG5cdFx0XHQub25GYWlsKGZ1bmN0aW9uIGZhaWxIYW5kbGVyKGVycikge1xuXHRcdFx0XHRtLnRyaWdnZXIoT1dlYkxvZ2luLkVWVF9MT0dJTl9GQUlMLCBbZXJyXSk7XG5cdFx0XHR9KVxuXHRcdFx0LnNlbmQoKTtcblx0fVxufVxuIl19
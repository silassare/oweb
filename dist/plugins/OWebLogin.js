import OWebEvent from '../OWebEvent';
import { id } from '../utils/Utils';
let OWebLogin = /** @class */ (() => {
    class OWebLogin extends OWebEvent {
        constructor(appContext) {
            super();
            this.appContext = appContext;
        }
        loginWithEmail(data) {
            return this._tryLogin({
                email: data.email,
                pass: data.pass,
            });
        }
        loginWithPhone(data) {
            return this._tryLogin({
                phone: data.phone,
                pass: data.pass,
            });
        }
        onError(handler) {
            return this.on(OWebLogin.EVT_LOGIN_ERROR, handler);
        }
        onSuccess(handler) {
            return this.on(OWebLogin.EVT_LOGIN_SUCCESS, handler);
        }
        _tryLogin(data) {
            const m = this, url = m.appContext.url.get('OZ_SERVER_LOGIN_SERVICE'), net = m.appContext.net(url, {
                method: 'POST',
                body: data,
                isGoodNews(response) {
                    return Boolean(response.json && response.json.error === 0);
                },
            });
            return net
                .onGoodNews(function (response) {
                m.trigger(OWebLogin.EVT_LOGIN_SUCCESS, [response]);
            })
                .onBadNews(function (response) {
                m.trigger(OWebLogin.EVT_LOGIN_ERROR, [response]);
            })
                .send();
        }
    }
    OWebLogin.SELF = id();
    OWebLogin.EVT_LOGIN_ERROR = id();
    OWebLogin.EVT_LOGIN_SUCCESS = id();
    return OWebLogin;
})();
export default OWebLogin;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT1dlYkxvZ2luLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3BsdWdpbnMvT1dlYkxvZ2luLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sU0FBUyxNQUFNLGNBQWMsQ0FBQztBQUNyQyxPQUFPLEVBQUUsRUFBRSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFPcEM7SUFBQSxNQUFxQixTQUFVLFNBQVEsU0FBUztRQUsvQyxZQUE2QixVQUFtQjtZQUMvQyxLQUFLLEVBQUUsQ0FBQztZQURvQixlQUFVLEdBQVYsVUFBVSxDQUFTO1FBRWhELENBQUM7UUFFRCxjQUFjLENBQUMsSUFBcUM7WUFDbkQsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO2dCQUNyQixLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7Z0JBQ2pCLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSTthQUNmLENBQUMsQ0FBQztRQUNKLENBQUM7UUFFRCxjQUFjLENBQUMsSUFBcUM7WUFDbkQsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO2dCQUNyQixLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7Z0JBQ2pCLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSTthQUNmLENBQUMsQ0FBQztRQUNKLENBQUM7UUFFRCxPQUFPLENBQ04sT0FHUztZQUVULE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsZUFBZSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ3BELENBQUM7UUFFRCxTQUFTLENBQ1IsT0FHUztZQUVULE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsaUJBQWlCLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDdEQsQ0FBQztRQUVPLFNBQVMsQ0FBQyxJQUF1QjtZQUN4QyxNQUFNLENBQUMsR0FBRyxJQUFJLEVBQ2IsR0FBRyxHQUFHLENBQUMsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyx5QkFBeUIsQ0FBQyxFQUNyRCxHQUFHLEdBQUcsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQW9DLEdBQUcsRUFBRTtnQkFDOUQsTUFBTSxFQUFFLE1BQU07Z0JBQ2QsSUFBSSxFQUFFLElBQUk7Z0JBQ1YsVUFBVSxDQUFDLFFBQVE7b0JBQ2xCLE9BQU8sT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLElBQUksUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUM7Z0JBQzVELENBQUM7YUFDRCxDQUFDLENBQUM7WUFFSixPQUFPLEdBQUc7aUJBQ1IsVUFBVSxDQUFDLFVBQVUsUUFBUTtnQkFDN0IsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsaUJBQWlCLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ3BELENBQUMsQ0FBQztpQkFDRCxTQUFTLENBQUMsVUFBVSxRQUFRO2dCQUM1QixDQUFDLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxlQUFlLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ2xELENBQUMsQ0FBQztpQkFDRCxJQUFJLEVBQUUsQ0FBQztRQUNWLENBQUM7O0lBM0RlLGNBQUksR0FBRyxFQUFFLEVBQUUsQ0FBQztJQUNaLHlCQUFlLEdBQUcsRUFBRSxFQUFFLENBQUM7SUFDdkIsMkJBQWlCLEdBQUcsRUFBRSxFQUFFLENBQUM7SUEwRDFDLGdCQUFDO0tBQUE7ZUE3RG9CLFNBQVMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgT1dlYkFwcCBmcm9tICcuLi9PV2ViQXBwJztcclxuaW1wb3J0IE9XZWJFdmVudCBmcm9tICcuLi9PV2ViRXZlbnQnO1xyXG5pbXBvcnQgeyBpZCB9IGZyb20gJy4uL3V0aWxzL1V0aWxzJztcclxuaW1wb3J0IHsgSU5ldFJlc3BvbnNlIH0gZnJvbSAnLi4vT1dlYk5ldCc7XHJcbmltcG9ydCB7IEdvYmxTaW5nbGVQS0VudGl0eSB9IGZyb20gJ2dvYmwtdXRpbHMtdHMnO1xyXG5pbXBvcnQgeyBJT1pvbmVBcGlKU09OIH0gZnJvbSAnLi4vb3pvbmUnO1xyXG5cclxuZXhwb3J0IHR5cGUgdExvZ2luUmVzcG9uc2VEYXRhID0gR29ibFNpbmdsZVBLRW50aXR5O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgT1dlYkxvZ2luIGV4dGVuZHMgT1dlYkV2ZW50IHtcclxuXHRzdGF0aWMgcmVhZG9ubHkgU0VMRiA9IGlkKCk7XHJcblx0c3RhdGljIHJlYWRvbmx5IEVWVF9MT0dJTl9FUlJPUiA9IGlkKCk7XHJcblx0c3RhdGljIHJlYWRvbmx5IEVWVF9MT0dJTl9TVUNDRVNTID0gaWQoKTtcclxuXHJcblx0Y29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBhcHBDb250ZXh0OiBPV2ViQXBwKSB7XHJcblx0XHRzdXBlcigpO1xyXG5cdH1cclxuXHJcblx0bG9naW5XaXRoRW1haWwoZGF0YTogeyBlbWFpbDogc3RyaW5nOyBwYXNzOiBzdHJpbmcgfSkge1xyXG5cdFx0cmV0dXJuIHRoaXMuX3RyeUxvZ2luKHtcclxuXHRcdFx0ZW1haWw6IGRhdGEuZW1haWwsXHJcblx0XHRcdHBhc3M6IGRhdGEucGFzcyxcclxuXHRcdH0pO1xyXG5cdH1cclxuXHJcblx0bG9naW5XaXRoUGhvbmUoZGF0YTogeyBwaG9uZTogc3RyaW5nOyBwYXNzOiBzdHJpbmcgfSkge1xyXG5cdFx0cmV0dXJuIHRoaXMuX3RyeUxvZ2luKHtcclxuXHRcdFx0cGhvbmU6IGRhdGEucGhvbmUsXHJcblx0XHRcdHBhc3M6IGRhdGEucGFzcyxcclxuXHRcdH0pO1xyXG5cdH1cclxuXHJcblx0b25FcnJvcihcclxuXHRcdGhhbmRsZXI6IChcclxuXHRcdFx0dGhpczogdGhpcyxcclxuXHRcdFx0cmVzcG9uc2U6IElOZXRSZXNwb25zZTxJT1pvbmVBcGlKU09OPGFueT4+LFxyXG5cdFx0KSA9PiB2b2lkLFxyXG5cdCk6IHRoaXMge1xyXG5cdFx0cmV0dXJuIHRoaXMub24oT1dlYkxvZ2luLkVWVF9MT0dJTl9FUlJPUiwgaGFuZGxlcik7XHJcblx0fVxyXG5cclxuXHRvblN1Y2Nlc3MoXHJcblx0XHRoYW5kbGVyOiAoXHJcblx0XHRcdHRoaXM6IHRoaXMsXHJcblx0XHRcdHJlc3BvbnNlOiBJTmV0UmVzcG9uc2U8SU9ab25lQXBpSlNPTjx0TG9naW5SZXNwb25zZURhdGE+PixcclxuXHRcdCkgPT4gdm9pZCxcclxuXHQpOiB0aGlzIHtcclxuXHRcdHJldHVybiB0aGlzLm9uKE9XZWJMb2dpbi5FVlRfTE9HSU5fU1VDQ0VTUywgaGFuZGxlcik7XHJcblx0fVxyXG5cclxuXHRwcml2YXRlIF90cnlMb2dpbihkYXRhOiBGb3JtRGF0YSB8IG9iamVjdCkge1xyXG5cdFx0Y29uc3QgbSA9IHRoaXMsXHJcblx0XHRcdHVybCA9IG0uYXBwQ29udGV4dC51cmwuZ2V0KCdPWl9TRVJWRVJfTE9HSU5fU0VSVklDRScpLFxyXG5cdFx0XHRuZXQgPSBtLmFwcENvbnRleHQubmV0PElPWm9uZUFwaUpTT048dExvZ2luUmVzcG9uc2VEYXRhPj4odXJsLCB7XHJcblx0XHRcdFx0bWV0aG9kOiAnUE9TVCcsXHJcblx0XHRcdFx0Ym9keTogZGF0YSxcclxuXHRcdFx0XHRpc0dvb2ROZXdzKHJlc3BvbnNlKSB7XHJcblx0XHRcdFx0XHRyZXR1cm4gQm9vbGVhbihyZXNwb25zZS5qc29uICYmIHJlc3BvbnNlLmpzb24uZXJyb3IgPT09IDApO1xyXG5cdFx0XHRcdH0sXHJcblx0XHRcdH0pO1xyXG5cclxuXHRcdHJldHVybiBuZXRcclxuXHRcdFx0Lm9uR29vZE5ld3MoZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcblx0XHRcdFx0bS50cmlnZ2VyKE9XZWJMb2dpbi5FVlRfTE9HSU5fU1VDQ0VTUywgW3Jlc3BvbnNlXSk7XHJcblx0XHRcdH0pXHJcblx0XHRcdC5vbkJhZE5ld3MoZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcblx0XHRcdFx0bS50cmlnZ2VyKE9XZWJMb2dpbi5FVlRfTE9HSU5fRVJST1IsIFtyZXNwb25zZV0pO1xyXG5cdFx0XHR9KVxyXG5cdFx0XHQuc2VuZCgpO1xyXG5cdH1cclxufVxyXG4iXX0=
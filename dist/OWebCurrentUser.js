import OWebEvent from "./OWebEvent";
import OWebKeyStorage from "./OWebKeyStorage";
export default class OWebCurrentUser extends OWebEvent {
    constructor(app_context) {
        super();
        this.app_context = app_context;
        this._key_store = new OWebKeyStorage(app_context, OWebCurrentUser.SELF);
        console.log("[OWebCurrentUser] ready!");
    }
    getCurrentUser() {
        let user = this._key_store.getItem("user_data");
        if (user) {
            if ("id" in user) {
                return user;
            }
            else {
                console.error("[OWebCurrentUser] invalid user data!");
            }
        }
        return undefined;
    }
    setCurrentUser(user) {
        console.log("[OWebCurrentUser] setting new user ->", user);
        this._key_store.setItem("user_data", user);
        return this._notifyChange();
    }
    setSessionExpire(expire) {
        this._key_store.setItem("session_expire", expire);
        return this;
    }
    getSessionExpire() {
        let expire = this._key_store.getItem("session_expire");
        return isNaN(expire) ? 0 : expire;
    }
    clear() {
        this._key_store.clear();
        return this._notifyChange();
    }
    _notifyChange() {
        this.trigger(OWebCurrentUser.EVT_USER_INFO_UPDATE, [this]);
        return this;
    }
}
OWebCurrentUser.SELF = "OWebCurrentUser";
OWebCurrentUser.EVT_USER_INFO_UPDATE = "OWebCurrentUser:update";
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT1dlYkN1cnJlbnRVc2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL09XZWJDdXJyZW50VXNlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLFNBQVMsTUFBTSxhQUFhLENBQUM7QUFDcEMsT0FBTyxjQUFjLE1BQU0sa0JBQWtCLENBQUM7QUFFOUMsTUFBTSxDQUFDLE9BQU8sc0JBQXVCLFNBQVEsU0FBUztJQU1yRCxZQUE2QixXQUFvQjtRQUNoRCxLQUFLLEVBQUUsQ0FBQztRQURvQixnQkFBVyxHQUFYLFdBQVcsQ0FBUztRQUdoRCxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksY0FBYyxDQUFDLFdBQVcsRUFBRSxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDeEUsT0FBTyxDQUFDLEdBQUcsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO0lBQ3pDLENBQUM7SUFFRCxjQUFjO1FBQ2IsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7UUFFaEQsSUFBSSxJQUFJLEVBQUU7WUFDVCxJQUFJLElBQUksSUFBSSxJQUFJLEVBQUU7Z0JBQ2pCLE9BQU8sSUFBSSxDQUFDO2FBQ1o7aUJBQU07Z0JBQ04sT0FBTyxDQUFDLEtBQUssQ0FBQyxzQ0FBc0MsQ0FBQyxDQUFDO2FBQ3REO1NBQ0Q7UUFFRCxPQUFPLFNBQVMsQ0FBQztJQUNsQixDQUFDO0lBRUQsY0FBYyxDQUFDLElBQVM7UUFDdkIsT0FBTyxDQUFDLEdBQUcsQ0FBQyx1Q0FBdUMsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUMzRCxJQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFFM0MsT0FBTyxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDN0IsQ0FBQztJQUVELGdCQUFnQixDQUFDLE1BQWM7UUFDOUIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDbEQsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0lBRUQsZ0JBQWdCO1FBQ2YsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUN2RCxPQUFPLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUM7SUFDbkMsQ0FBQztJQUVELEtBQUs7UUFDSixJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ3hCLE9BQU8sSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO0lBQzdCLENBQUM7SUFFTyxhQUFhO1FBQ3BCLElBQUksQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLG9CQUFvQixFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUMzRCxPQUFPLElBQUksQ0FBQztJQUNiLENBQUM7O0FBbkRlLG9CQUFJLEdBQW1CLGlCQUFpQixDQUFDO0FBQ3pDLG9DQUFvQixHQUFHLHdCQUF3QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE9XZWJBcHAgZnJvbSBcIi4vT1dlYkFwcFwiO1xyXG5pbXBvcnQgT1dlYkV2ZW50IGZyb20gXCIuL09XZWJFdmVudFwiO1xyXG5pbXBvcnQgT1dlYktleVN0b3JhZ2UgZnJvbSBcIi4vT1dlYktleVN0b3JhZ2VcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE9XZWJDdXJyZW50VXNlciBleHRlbmRzIE9XZWJFdmVudCB7XHJcblx0c3RhdGljIHJlYWRvbmx5IFNFTEYgICAgICAgICAgICAgICAgID0gXCJPV2ViQ3VycmVudFVzZXJcIjtcclxuXHRzdGF0aWMgcmVhZG9ubHkgRVZUX1VTRVJfSU5GT19VUERBVEUgPSBcIk9XZWJDdXJyZW50VXNlcjp1cGRhdGVcIjtcclxuXHJcblx0cHJpdmF0ZSBfa2V5X3N0b3JlOiBPV2ViS2V5U3RvcmFnZTtcclxuXHJcblx0Y29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBhcHBfY29udGV4dDogT1dlYkFwcCkge1xyXG5cdFx0c3VwZXIoKTtcclxuXHJcblx0XHR0aGlzLl9rZXlfc3RvcmUgPSBuZXcgT1dlYktleVN0b3JhZ2UoYXBwX2NvbnRleHQsIE9XZWJDdXJyZW50VXNlci5TRUxGKTtcclxuXHRcdGNvbnNvbGUubG9nKFwiW09XZWJDdXJyZW50VXNlcl0gcmVhZHkhXCIpO1xyXG5cdH1cclxuXHJcblx0Z2V0Q3VycmVudFVzZXIoKTogYW55IHtcclxuXHRcdGxldCB1c2VyID0gdGhpcy5fa2V5X3N0b3JlLmdldEl0ZW0oXCJ1c2VyX2RhdGFcIik7XHJcblxyXG5cdFx0aWYgKHVzZXIpIHtcclxuXHRcdFx0aWYgKFwiaWRcIiBpbiB1c2VyKSB7XHJcblx0XHRcdFx0cmV0dXJuIHVzZXI7XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0Y29uc29sZS5lcnJvcihcIltPV2ViQ3VycmVudFVzZXJdIGludmFsaWQgdXNlciBkYXRhIVwiKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiB1bmRlZmluZWQ7XHJcblx0fVxyXG5cclxuXHRzZXRDdXJyZW50VXNlcih1c2VyOiBhbnkpOiB0aGlzIHtcclxuXHRcdGNvbnNvbGUubG9nKFwiW09XZWJDdXJyZW50VXNlcl0gc2V0dGluZyBuZXcgdXNlciAtPlwiLCB1c2VyKTtcclxuXHRcdHRoaXMuX2tleV9zdG9yZS5zZXRJdGVtKFwidXNlcl9kYXRhXCIsIHVzZXIpO1xyXG5cclxuXHRcdHJldHVybiB0aGlzLl9ub3RpZnlDaGFuZ2UoKTtcclxuXHR9XHJcblxyXG5cdHNldFNlc3Npb25FeHBpcmUoZXhwaXJlOiBudW1iZXIpOiB0aGlzIHtcclxuXHRcdHRoaXMuX2tleV9zdG9yZS5zZXRJdGVtKFwic2Vzc2lvbl9leHBpcmVcIiwgZXhwaXJlKTtcclxuXHRcdHJldHVybiB0aGlzO1xyXG5cdH1cclxuXHJcblx0Z2V0U2Vzc2lvbkV4cGlyZSgpOiBudW1iZXIge1xyXG5cdFx0bGV0IGV4cGlyZSA9IHRoaXMuX2tleV9zdG9yZS5nZXRJdGVtKFwic2Vzc2lvbl9leHBpcmVcIik7XHJcblx0XHRyZXR1cm4gaXNOYU4oZXhwaXJlKSA/IDAgOiBleHBpcmU7XHJcblx0fVxyXG5cclxuXHRjbGVhcigpOiB0aGlzIHtcclxuXHRcdHRoaXMuX2tleV9zdG9yZS5jbGVhcigpO1xyXG5cdFx0cmV0dXJuIHRoaXMuX25vdGlmeUNoYW5nZSgpO1xyXG5cdH1cclxuXHJcblx0cHJpdmF0ZSBfbm90aWZ5Q2hhbmdlKCk6IHRoaXMge1xyXG5cdFx0dGhpcy50cmlnZ2VyKE9XZWJDdXJyZW50VXNlci5FVlRfVVNFUl9JTkZPX1VQREFURSwgW3RoaXNdKTtcclxuXHRcdHJldHVybiB0aGlzO1xyXG5cdH1cclxufSJdfQ==